import punctilious as pu

# Create a universe-of-discourse with basic objects for the sake of this example.
u = pu.UniverseOfDiscourse(echo=True)
o1 = u.o.declare()
o2 = u.o.declare()
r1 = u.r.declare(arity=2, signal_proposition=True)
axiom = u.declare_axiom(natural_language='Dummy axiom for demonstration purposes')

# Elaborate a dummy theory with a set of propositions necessary for our demonstration
t1 = u.t(echo=True)
theory_axiom = t1.include_axiom(a=axiom)
p = t1.i.axiom_interpretation.infer_formula_statement(axiom=theory_axiom, formula=r1(o1, o2))

# And finally, use the double-negation-introduction inference-rule:
proposition_of_interest = t1.i.double_negation_introduction.infer_formula_statement(p=p,
    subtitle='The proposition of interest')

Let "U25" be a universe-of-discourse.

Let "T1" be a theory-elaboration-sequence in U25.

Axiom (T1.A1): Let axiom A1 "Dummy axiom for demonstration purposes" be included (postulated) in T1.

Inference rule (axiom-interpretation): Let inference-rule axiom-interpretation defined as "A |- P" be included and considered valid in T1.

Proposition (T1.P1): r1(o1, o2). Proof: "Dummy axiom for demonstration purposes" is postulated by axiom (A1). r1(o1, o2) is a valid formula statement interpreted from that axiom.Therefore, by the axiom-interpretation inference rule: A |- P, it follows that r1(o1, o2). QED

Warning (warning1): By design, punctilious assures the syntactical correctness of theories, but does not perform any semantic verification. Therefore, the usage of inference-rules that interpret natural content (i.e. axiom-interpretation and definition-interpretation) is critically dependent on the correctness of the content translation performed by the theory author, from axiom or definition natural language, to formulae.

Inference rule (double-negation-introduction): Let inference-rule double-negation-introduction defined as "(P1 |- not(not(P1)))" be included and considered valid in T1.

Proposition (T1.P2) - The proposition of interest: not(not(r1(o1, o2))). Proof: r1(o1, o2), of the form P1, follows from prop. (P1). Therefore, by the double-negation-introduction inference rule: (P1 |- not(not(P1))), it follows that not(not(r1(o1, o2))). QED

