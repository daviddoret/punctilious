import punctilious as pu

# Create a universe-of-discourse with basic objects for the sake of this example.
u = pu.create_universe_of_discourse(echo=True)
a1 = u.declare_axiom(natural_language='Dummy axiom to establish some ground propositions.')
o1 = u.o.declare()
o2 = u.o.declare()
o3 = u.o.declare()
f = u.r.declare(arity=2, symbol='f', signal_proposition=True)
t1 = u.t(echo=True)

# Elaborate a dummy theory with a set of propositions necessary for our demonstration
a = t1.include_axiom(a=a1)
t1.i.axiom_interpretation.infer_formula_statement(a=a, p=f(o1, o2), lock=False)
t1.i.axiom_interpretation.infer_formula_statement(a=a, p=f(o2, o3), lock=False)
with u.with_variable('x') as x, u.with_variable('y') as y, u.with_variable('z') as z:
    implication = t1.i.axiom_interpretation.infer_formula_statement(a=a,
        p=(f(x, y) | u.r.land | f(y, z)) | u.r.implies | u.r.lnot(f(x, z)), lock=True)
t1.stabilize()

# Pose the negation hypothesis
h = t1.pose_hypothesis(hypothesis_formula=f(o1, o3), subtitle='We pose the positive hypothesis')
conjunction_introduction = h.child_theory.i.conjunction_introduction.infer_formula_statement(
    p=f(o1, o2), q=f(o2, o3))
variable_substitution = h.child_theory.i.variable_substitution.infer_formula_statement(
    p=implication, phi=u.r.tupl(o1, o2, o3))
modus_ponens = h.child_theory.i.modus_ponens.infer_formula_statement(
    p_implies_q=variable_substitution, p=conjunction_introduction)

# Prove hypothesis inconsistency
h_inconsistency = t1.i.inconsistency_introduction_1.infer_formula_statement(p=h.child_statement,
    not_p=modus_ponens, t=h.child_theory, subtitle='Proof of the hypothesis inconsistency')

# And finally, use the proof-by-contradiction-1 inference-rule:
proposition_of_interest = t1.i.proof_by_refutation_1.infer_formula_statement(h=h,
    inc_h=h_inconsistency, subtitle='The proposition of interest')

Let "U69" be a universe-of-discourse.

Let "T1" be a theory-derivation in U69.

Axiom (T1.A1): Let axiom A1 "Dummy axiom to establish some ground propositions." be included (postulated) in T1.

Inference rule (axiom-interpretation): Let inference-rule axiom-interpretation defined as "(A, P |- P)" be included and considered valid in T1.

Proposition (T1.P1): f1(o1, o2). Proof: "Dummy axiom to establish some ground propositions." is postulated by axiom (A1). f1(o1, o2) is a propositional formula interpreted from that axiom. Therefore, by the axiom-interpretation inference rule: (A, P |- P), it follows that f1(o1, o2). QED

Proposition (T1.P2): f1(o2, o3). Proof: "Dummy axiom to establish some ground propositions." is postulated by axiom (A1). f1(o2, o3) is a propositional formula interpreted from that axiom. Therefore, by the axiom-interpretation inference rule: (A, P |- P), it follows that f1(o2, o3). QED

Proposition (T1.P3): ((f1(x1, y1) and f1(y1, z1)) ==> not(f1(x1, z1))). Proof: "Dummy axiom to establish some ground propositions." is postulated by axiom (A1). ((f1(x1, y1) and f1(y1, z1)) ==> not(f1(x1, z1))) is a propositional formula interpreted from that axiom. Therefore, by the axiom-interpretation inference rule: (A, P |- P), it follows that ((f1(x1, y1) and f1(y1, z1)) ==> not(f1(x1, z1))). QED

Axiom (H1.A2): Let axiom A2 "By hypothesis, assume f1(o1, o3) is true." be included (postulated) in H1.

Inference rule (axiom-interpretation): Let inference-rule axiom-interpretation defined as "(A, P |- P)" be included and considered valid in H1.

Proposition (H1.P4): f1(o1, o3). Proof: "By hypothesis, assume f1(o1, o3) is true." is postulated by axiom (A2). f1(o1, o3) is a propositional formula interpreted from that axiom. Therefore, by the axiom-interpretation inference rule: (A, P |- P), it follows that f1(o1, o3). QED

Hypothesis (T1.H1) - We pose the positive hypothesis: f1(o1, o3). This hypothesis is elaborated in theory H1.

Inference rule (conjunction-introduction): Let inference-rule conjunction-introduction defined as "(P1, Q1 |- (P1 and Q1))" be included and considered valid in H1.

Proposition (H1.P5): (f1(o1, o2) and f1(o2, o3)). Proof: f1(o1, o2), of the form P1, follows from prop. (P1). f1(o2, o3), of the form Q1, follows from prop. (P2).  Therefore, by the conjunction-introduction inference rule: (P1, Q1 |- (P1 and Q1)), it follows that (f1(o1, o2) and f1(o2, o3)). QED

Inference rule (variable-substitution): Let inference-rule variable-substitution defined as "(P2, O1 |- Q2)" be included and considered valid in H1.

Proposition (H1.P6): ((f1(o1, o2) and f1(o2, o3)) ==> not(f1(o1, o3))). Proof: ((f1(x1, y1) and f1(y1, z1)) ==> not(f1(x1, z1))) follows from prop. (P3). Let x1 = o1, y1 = o2, z1 = o3. Therefore, by the variable-substitution inference rule: (P2, O1 |- Q2), it follows that ((f1(o1, o2) and f1(o2, o3)) ==> not(f1(o1, o3))). QED

Inference rule (modus-ponens): Let inference-rule modus-ponens defined as "((P4 ==> Q3), P4 |- Q3)" be included and considered valid in H1.

Proposition (H1.P7): not(f1(o1, o3)). Proof: ((f1(o1, o2) and f1(o2, o3)) ==> not(f1(o1, o3))) follows from prop. (P6).(f1(o1, o2) and f1(o2, o3)) follows from prop. (P5). Therefore, by the modus-ponens inference rule: ((P4 ==> Q3), P4 |- Q3), it follows that not(f1(o1, o3)). QED

Inference rule (inconsistency-introduction-1): Let inference-rule inconsistency-introduction-1 defined as "(P7, not(P7) |- Inc(T1))" be included and considered valid in T1.

Proposition (T1.P8) - Proof of the hypothesis inconsistency: Inc(H1). Proof: Let P := f1(o1, o3), which follows from prop. (P4). Let not(P) := not(f1(o1, o3)), which follows from prop. (P7).  Therefore, by the inconsistency-introduction-1 inference rule: (P7, not(P7) |- Inc(T1)), it follows that Inc(H1). QED

Inference rule (proof-by-refutation-1): Let inference-rule proof-by-refutation-1 defined as "((H1 formulate P10), Inc(H1) |- not(P10))" be included and considered valid in T1.

Proposition (T1.P9) - The proposition of interest: not(f1(o1, o3)). Proof: Let hyp. (H1) be the hypothesis f1(o1, o3). Inc(H1) follows from prop. (P8). Therefore, by the proof-by-refutation-1 inference rule: ((H1 formulate P10), Inc(H1) |- not(P10)), it follows that not(f1(o1, o3)). QED

