import punctilious as pu
import theory as pu_theory

t = pu_theory.Tao2006ThePeanoAxioms()
t.develop().export_article_to_file(proof=False, encoding=pu.encodings.plaintext,
    file_path='../../data/report_tao_2006_the_peano_axioms_noproof_enus_plaintext.txt')

# 2: The natural numbers

## 2.1: The peano axioms

### Informal definition of natural number

Informal definition 2.1.1 (note1): A natural number is any element of the set N := { 0, 1, 2, 3, 4, ... }, which is the set of all the numbers created by starting with 0 and then counting forward indefinitely. We call N the set of natural numbers.

Remark 2.1.2 (note2): In some texts the natural numbers start at 1 instead of 0, but this is a matter of notational convention more than anything else. In this text we shall refer to the set { 1, 2, 3, ... } as the positive integers Z+ rather than the natural numbers. Natural numbers are sometimes also known as whole numbers.

### Axiom 2.1

Axiom 2.1 (T1.A1): Let axiom A1 "0 is a natural number." be included (postulated) in T1.

Inference rule (axiom-interpretation): Let inference-rule axiom-interpretation defined as "A |- P" be included and considered valid in T1.

Proposition (T1.P1): (0 is-a natural-number). Proof: "0 is a natural number." is postulated by axiom 2.1 (A1). (0 is-a natural-number) is a valid formula statement interpreted from that axiom.Therefore, by the axiom-interpretation inference rule: A |- P, it follows that (0 is-a natural-number). QED

Warning (warning1): By design, punctilious assures the syntactical correctness of theories, but does not perform any semantic verification. Therefore, the usage of inference-rules that interpret natural content (i.e. axiom-interpretation and definition-interpretation) is critically dependent on the correctness of the content translation performed by the theory author, from axiom or definition natural language, to formulae.

### Axiom 2.2

Axiom 2.2 (T1.A2): Let axiom A2 "If n is a natural number, then n++ is a natural number." be included (postulated) in T1.

Proposition (T1.P2): ((n1 is-a natural-number) ==> ((n1)++ is-a natural-number)). Proof: "If n is a natural number, then n++ is a natural number." is postulated by axiom 2.2 (A2). ((n1 is-a natural-number) ==> ((n1)++ is-a natural-number)) is a valid formula statement interpreted from that axiom.Therefore, by the axiom-interpretation inference rule: A |- P, it follows that ((n1 is-a natural-number) ==> ((n1)++ is-a natural-number)). QED

Inference rule (variable-substitution): Let inference-rule variable-substitution defined as "(P, Phi) |- P'" be included and considered valid in T1.

Proposition (T1.P3): ((0 is-a natural-number) ==> ((0)++ is-a natural-number)). Proof: ((n1 is-a natural-number) ==> ((n1)++ is-a natural-number)) follows from prop. (P2). Let n1 = 0.Therefore, by the variable-substitution inference rule: (P, Phi) |- P', it follows that ((0 is-a natural-number) ==> ((0)++ is-a natural-number)). QED

Inference rule (modus-ponens): Let inference-rule modus-ponens defined as "(((P1 ==> P1) , P1) |- Q1)" be included and considered valid in T1.

Proposition 2.2.3 (T1.P4): ((0)++ is-a natural-number). Proof: ((0 is-a natural-number) ==> ((0)++ is-a natural-number)) follows from prop. (P3).(0 is-a natural-number) follows from prop. (P1).Therefore, by the modus-ponens inference rule: (((P1 ==> P1) , P1) |- Q1), it follows that ((0)++ is-a natural-number). QED

Definition (T1.D1): Let definition D1 "We define 1 to be the number 0++, 2 to be the number (0++)++, 3 to be the number ((0++)++)++,etc. (In other words, 1 := 0++, 2 := 1++, 3 := 2++, etc. In this text I use "x := y" to denote the statement that x is defined to equal y.)" be included (postulated) in T1.

Inference rule (definition-interpretation): Let inference-rule definition-interpretation defined as "ùíü ‚ä¢ P" be included and considered valid in T1.

Proposition (T1.P5): (1 = (0)++). Proof: "We define 1 to be the number 0++, 2 to be the number (0++)++, 3 to be the number ((0++)++)++,etc. (In other words, 1 := 0++, 2 := 1++, 3 := 2++, etc. In this text I use "x := y" to denote the statement that x is defined to equal y.)" is postulated by def. (D1). (1 = (0)++) is an interpretation of that definition.Therefore, by the definition-interpretation inference rule: ùíü ‚ä¢ P, it follows that (1 = (0)++). QED

Proposition (T1.P6): (2 = ((0)++)++). Proof: "We define 1 to be the number 0++, 2 to be the number (0++)++, 3 to be the number ((0++)++)++,etc. (In other words, 1 := 0++, 2 := 1++, 3 := 2++, etc. In this text I use "x := y" to denote the statement that x is defined to equal y.)" is postulated by def. (D1). (2 = ((0)++)++) is an interpretation of that definition.Therefore, by the definition-interpretation inference rule: ùíü ‚ä¢ P, it follows that (2 = ((0)++)++). QED

Proposition (T1.P7): (3 = (((0)++)++)++). Proof: "We define 1 to be the number 0++, 2 to be the number (0++)++, 3 to be the number ((0++)++)++,etc. (In other words, 1 := 0++, 2 := 1++, 3 := 2++, etc. In this text I use "x := y" to denote the statement that x is defined to equal y.)" is postulated by def. (D1). (3 = (((0)++)++)++) is an interpretation of that definition.Therefore, by the definition-interpretation inference rule: ùíü ‚ä¢ P, it follows that (3 = (((0)++)++)++). QED

Proposition (T1.P8): (4 = ((((0)++)++)++)++). Proof: "We define 1 to be the number 0++, 2 to be the number (0++)++, 3 to be the number ((0++)++)++,etc. (In other words, 1 := 0++, 2 := 1++, 3 := 2++, etc. In this text I use "x := y" to denote the statement that x is defined to equal y.)" is postulated by def. (D1). (4 = ((((0)++)++)++)++) is an interpretation of that definition.Therefore, by the definition-interpretation inference rule: ùíü ‚ä¢ P, it follows that (4 = ((((0)++)++)++)++). QED

Proposition (T1.P9): (((0)++ is-a natural-number) ==> (((0)++)++ is-a natural-number)). Proof: ((n1 is-a natural-number) ==> ((n1)++ is-a natural-number)) follows from prop. (P2). Let n1 = (0)++.Therefore, by the variable-substitution inference rule: (P, Phi) |- P', it follows that (((0)++ is-a natural-number) ==> (((0)++)++ is-a natural-number)). QED

Proposition (T1.P10): (((0)++)++ is-a natural-number). Proof: (((0)++ is-a natural-number) ==> (((0)++)++ is-a natural-number)) follows from prop. (P9).((0)++ is-a natural-number) follows from prop. 2.2.3 (P4).Therefore, by the modus-ponens inference rule: (((P1 ==> P1) , P1) |- Q1), it follows that (((0)++)++ is-a natural-number). QED

Proposition (T1.P11): ((((0)++)++ is-a natural-number) ==> ((((0)++)++)++ is-a natural-number)). Proof: ((n1 is-a natural-number) ==> ((n1)++ is-a natural-number)) follows from prop. (P2). Let n1 = ((0)++)++.Therefore, by the variable-substitution inference rule: (P, Phi) |- P', it follows that ((((0)++)++ is-a natural-number) ==> ((((0)++)++)++ is-a natural-number)). QED

Proposition (T1.P12): ((((0)++)++)++ is-a natural-number). Proof: ((((0)++)++ is-a natural-number) ==> ((((0)++)++)++ is-a natural-number)) follows from prop. (P11).(((0)++)++ is-a natural-number) follows from prop. (P10).Therefore, by the modus-ponens inference rule: (((P1 ==> P1) , P1) |- Q1), it follows that ((((0)++)++)++ is-a natural-number). QED

Proposition (T1.P13): (((((0)++)++)++ is-a natural-number) ==> (((((0)++)++)++)++ is-a natural-number)). Proof: ((n1 is-a natural-number) ==> ((n1)++ is-a natural-number)) follows from prop. (P2). Let n1 = (((0)++)++)++.Therefore, by the variable-substitution inference rule: (P, Phi) |- P', it follows that (((((0)++)++)++ is-a natural-number) ==> (((((0)++)++)++)++ is-a natural-number)). QED

Proposition (T1.P14): (((((0)++)++)++)++ is-a natural-number). Proof: (((((0)++)++)++ is-a natural-number) ==> (((((0)++)++)++)++ is-a natural-number)) follows from prop. (P13).((((0)++)++)++ is-a natural-number) follows from prop. (P12).Therefore, by the modus-ponens inference rule: (((P1 ==> P1) , P1) |- Q1), it follows that (((((0)++)++)++)++ is-a natural-number). QED

Inference rule (equality-commutativity): Let inference-rule equality-commutativity defined as "((x1 = y1) |- (y1 = x1))" be included and considered valid in T1.

Proposition (T1.P15): ((0)++ neq 1). Proof: (1 = (0)++) follows from prop. (P5). Therefore, by the equality-commutativity inference rule: ((x1 = y1) |- (y1 = x1)), it follows that ((0)++ neq 1). QED

Inference rule (equal-terms-substitution): Let inference-rule equal-terms-substitution defined as "((P2 , (x2 = y2)) |- Q2)" be included and considered valid in T1.

ERROR: The root relation of ‚åúx_equal_y‚åù is not the equality relation.
Contextual information:
q_equal_r: ((0)++ neq 1)
slf: equal-terms-substitution
t: T1

