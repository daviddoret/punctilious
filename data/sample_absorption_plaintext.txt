import punctilious as pu

# Create a universe-of-discourse with basic objects for the sake of this example.
u = pu.UniverseOfDiscourse(echo=True)
o1 = u.o.declare()
o2 = u.o.declare()
o3 = u.o.declare()
r1 = u.r.declare(2, signal_proposition=True)
r2 = u.r.declare(1, signal_proposition=True)
axiom = u.declare_axiom(natural_language='Dummy axiom for demonstration purposes')

# Elaborate a dummy theory with a set of propositions necessary for our demonstration
t1 = u.t(echo=True)
theory_axiom = t1.include_axiom(a=axiom)
phi = r1(o1, o2)
phi = r1(o1, o2) | u.r.implies | r2(o3)
p_implies_q = t1.i.axiom_interpretation.infer_formula_statement(a=theory_axiom,
    p=r1(o1, o2) | u.r.implies | r2(o3))

# And finally, use the absorption inference-rule:
proposition_of_interest = t1.i.absorption.infer_formula_statement(p_implies_q=p_implies_q,
    subtitle='The proposition of interest')

Let "U1" be a universe-of-discourse.

Let "T1" be a theory-elaboration-sequence in U1.

Axiom (T1.A1): Let axiom A1 "Dummy axiom for demonstration purposes" be included (postulated) in T1.

Inference rule (axiom-interpretation): Let inference-rule axiom-interpretation defined as "(A2, P1 |- P1)" be included and considered valid in T1.

Proposition (T1.P1): (r1(o1, o2) ==> r2(o3)). Proof: "Dummy axiom for demonstration purposes" is postulated by axiom (A1). (r1(o1, o2) ==> r2(o3)) is a valid formula statement interpreted from that axiom.Therefore, by the  inference rule: (A2, P1 |- P1), it follows that (r1(o1, o2) ==> r2(o3)). QED

Inference rule (absorption): Let inference-rule absorption defined as "((P3 ==> Q1) |- (P3 ==> (P3 and Q1)))" be included and considered valid in T1.

Proposition (T1.P2) - The proposition of interest: (r1(o1, o2) ==> (r1(o1, o2) and r2(o3))). Proof: (r1(o1, o2) ==> r2(o3)) follows from prop. (P1). (r1(o1, o2) ==> (r1(o1, o2) and r2(o3))) follows from the application of the I2 inference-rule: ((P3 ==> Q1) |- (P3 ==> (P3 and Q1))).Therefore, by the  inference rule: ((P3 ==> Q1) |- (P3 ==> (P3 and Q1))), it follows that (r1(o1, o2) ==> (r1(o1, o2) and r2(o3))). QED

