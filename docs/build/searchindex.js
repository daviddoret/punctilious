Search.setIndex({"docnames": ["_tags/absorption", "_tags/biconditional-elimination-1", "_tags/biconditional-elimination-2", "_tags/biconditional-introduction", "_tags/class", "_tags/concept", "_tags/conjunction-elimination-1", "_tags/conjunction-elimination-2", "_tags/conjunction-introduction", "_tags/declaration", "_tags/disjunction-introduction-1", "_tags/disjunction-introduction-2", "_tags/double-negation-elimination", "_tags/double-negation-introduction", "_tags/equal-terms-substitution", "_tags/equality-commutativity", "_tags/inclusion", "_tags/inconsistency-introduction-1", "_tags/inconsistency-introduction-2", "_tags/inconsistency-introduction-3", "_tags/inference-rule", "_tags/math", "_tags/modus-ponens", "_tags/proof-by-contradiction-1", "_tags/proof-by-contradiction-2", "_tags/proof-by-refutation-1", "_tags/proof-by-refutation-2", "_tags/python", "_tags/sample", "_tags/tagsindex", "_tags/universe-of-discourse", "_tags/variable-substitution", "back_matter", "back_matter/bibliography_back_matter", "front_matter", "front_matter/about_front_matter", "front_matter/contributing_front_matter", "front_matter/project_front_matter", "front_matter/roadmap_front_matter", "front_matter/support_front_matter", "front_matter/title_front_matter", "index", "math", "math/concept/axiom_math_concept", "math/concept/elimination_rule_math_concept", "math/concept/formula_math_concept", "math/concept/formula_statement_math_concept", "math/concept/free_variable_math_concept", "math/concept/hypothesis_math_concept", "math/concept/inference_rule_math_concept", "math/concept/introduction_rule_math_concept", "math/concept/is_a_math_concept", "math/concept/meta_object_math_concept", "math/concept/notation_form_math_concept", "math/concept/object_creation_math_concept", "math/concept/object_declaration_math_concept", "math/concept/object_inclusion_math_concept", "math/concept/object_math_concept", "math/concept/paragraph_proof_math_concept", "math/concept/relation_math_concept", "math/concept/statement_math_concept", "math/concept/theory_elaboration_sequence_math_concept", "math/concept/universe_of_discourse_math_concept", "math/inference_rule/absorption_math_inference_rule", "math/inference_rule/biconditional_elimination_1_math_inference_rule", "math/inference_rule/biconditional_elimination_2_math_inference_rule", "math/inference_rule/biconditional_introduction_math_inference_rule", "math/inference_rule/conjunction_elimination_1_math_inference_rule", "math/inference_rule/conjunction_elimination_2_math_inference_rule", "math/inference_rule/conjunction_introduction_math_inference_rule", "math/inference_rule/disjunction_introduction_1_math_inference_rule", "math/inference_rule/disjunction_introduction_2_math_inference_rule", "math/inference_rule/double_negation_elimination_math_inference_rule", "math/inference_rule/double_negation_introduction_math_inference_rule", "math/inference_rule/equal_terms_substitution_math_inference_rule", "math/inference_rule/equality_commutativity_math_inference_rule", "math/inference_rule/inconsistency_introduction_1_math_inference_rule", "math/inference_rule/inconsistency_introduction_2_math_inference_rule", "math/inference_rule/inconsistency_introduction_3_math_inference_rule", "math/inference_rule/modus_ponens_math_inference_rule", "math/inference_rule/proof_by_contradiction_1_math_inference_rule", "math/inference_rule/proof_by_contradiction_2_math_inference_rule", "math/inference_rule/proof_by_refutation_1_math_inference_rule", "math/inference_rule/proof_by_refutation_2_math_inference_rule", "math/inference_rule/variable_substitution_math_inference_rule", "math/theory/tao_2006", "math/theory/tao_2006/the_peano_axioms", "math/theory/tao_2006/the_peano_axioms/report_noproof_enus_plaintext", "math/theory/tao_2006/the_peano_axioms/report_noproof_enus_unicode", "math/theory/tao_2006/the_peano_axioms/report_proof_enus_plaintext", "math/theory/tao_2006/the_peano_axioms/report_proof_enus_unicode", "math_concept", "math_inference_rule", "math_theory", "python", "python/class/absorption_declaration_python_class", "python/class/absorption_inclusion_python_class", "python/class/biconditional_elimination_1_declaration_python_class", "python/class/biconditional_elimination_1_inclusion_python_class", "python/class/biconditional_elimination_2_declaration_python_class", "python/class/biconditional_elimination_2_inclusion_python_class", "python/class/biconditional_introduction_declaration_python_class", "python/class/biconditional_introduction_inclusion_python_class", "python/class/conjunction_elimination_1_declaration_python_class", "python/class/conjunction_elimination_1_inclusion_python_class", "python/class/conjunction_elimination_2_declaration_python_class", "python/class/conjunction_elimination_2_inclusion_python_class", "python/class/conjunction_introduction_declaration_python_class", "python/class/conjunction_introduction_inclusion_python_class", "python/class/disjunction_introduction_1_declaration_python_class", "python/class/disjunction_introduction_1_inclusion_python_class", "python/class/disjunction_introduction_2_declaration_python_class", "python/class/disjunction_introduction_2_inclusion_python_class", "python/class/double_negation_elimination_declaration_python_class", "python/class/double_negation_elimination_inclusion_python_class", "python/class/double_negation_introduction_declaration_python_class", "python/class/double_negation_introduction_inclusion_python_class", "python/class/equal_terms_substitution_declaration_python_class", "python/class/equal_terms_substitution_inclusion_python_class", "python/class/equality_commutativity_declaration_python_class", "python/class/equality_commutativity_inclusion_python_class", "python/class/inconsistency_introduction_1_declaration_python_class", "python/class/inconsistency_introduction_1_inclusion_python_class", "python/class/inconsistency_introduction_2_declaration_python_class", "python/class/inconsistency_introduction_2_inclusion_python_class", "python/class/inconsistency_introduction_3_declaration_python_class", "python/class/inconsistency_introduction_3_inclusion_python_class", "python/class/inference_rule_declaration_python_class", "python/class/modus_ponens_declaration_python_class", "python/class/modus_ponens_inclusion_python_class", "python/class/proof_by_contradiction_1_declaration_python_class", "python/class/proof_by_contradiction_1_inclusion_python_class", "python/class/proof_by_contradiction_2_declaration_python_class", "python/class/proof_by_contradiction_2_inclusion_python_class", "python/class/proof_by_refutation_1_declaration_python_class", "python/class/proof_by_refutation_1_inclusion_python_class", "python/class/proof_by_refutation_2_declaration_python_class", "python/class/proof_by_refutation_2_inclusion_python_class", "python/class/python_class_index", "python/class/universe_of_discourse_python_class", "python/class/variable_substitution_declaration_python_class", "python/class/variable_substitution_inclusion_python_class", "python/function/create_universe_of_discourse", "python/function/python_function_index", "python/installation_python", "python/prerequisites_python", "python/sample/absorption_python_sample", "python/sample/biconditional_elimination_1_python_sample", "python/sample/biconditional_elimination_2_python_sample", "python/sample/biconditional_introduction_python_sample", "python/sample/conjunction_elimination_1_python_sample", "python/sample/conjunction_elimination_2_python_sample", "python/sample/conjunction_introduction_python_sample", "python/sample/disjunction_introduction_1_python_sample", "python/sample/disjunction_introduction_2_python_sample", "python/sample/double_negation_elimination_python_sample", "python/sample/double_negation_introduction_python_sample", "python/sample/equal_terms_substitution_python_sample", "python/sample/equality_commutativity_python_sample", "python/sample/inconsistency_introduction_1_python_sample", "python/sample/inconsistency_introduction_2_python_sample", "python/sample/inconsistency_introduction_3_python_sample", "python/sample/modus_ponens_python_sample", "python/sample/proof_by_contradiction_1_python_sample", "python/sample/proof_by_contradiction_2_python_sample", "python/sample/proof_by_refutation_1_python_sample", "python/sample/proof_by_refutation_2_python_sample", "python/sample/python_sample_index", "python/sample/variable_substitution_python_sample", "python/source_code_repository_python"], "filenames": ["_tags\\absorption.rst", "_tags\\biconditional-elimination-1.rst", "_tags\\biconditional-elimination-2.rst", "_tags\\biconditional-introduction.rst", "_tags\\class.rst", "_tags\\concept.rst", "_tags\\conjunction-elimination-1.rst", "_tags\\conjunction-elimination-2.rst", "_tags\\conjunction-introduction.rst", "_tags\\declaration.rst", "_tags\\disjunction-introduction-1.rst", "_tags\\disjunction-introduction-2.rst", "_tags\\double-negation-elimination.rst", "_tags\\double-negation-introduction.rst", "_tags\\equal-terms-substitution.rst", "_tags\\equality-commutativity.rst", "_tags\\inclusion.rst", "_tags\\inconsistency-introduction-1.rst", "_tags\\inconsistency-introduction-2.rst", "_tags\\inconsistency-introduction-3.rst", "_tags\\inference-rule.rst", "_tags\\math.rst", "_tags\\modus-ponens.rst", "_tags\\proof-by-contradiction-1.rst", "_tags\\proof-by-contradiction-2.rst", "_tags\\proof-by-refutation-1.rst", "_tags\\proof-by-refutation-2.rst", "_tags\\python.rst", "_tags\\sample.rst", "_tags\\tagsindex.rst", "_tags\\universe-of-discourse.rst", "_tags\\variable-substitution.rst", "back_matter.rst", "back_matter\\bibliography_back_matter.rst", "front_matter.rst", "front_matter\\about_front_matter.rst", "front_matter\\contributing_front_matter.rst", "front_matter\\project_front_matter.rst", "front_matter\\roadmap_front_matter.rst", "front_matter\\support_front_matter.rst", "front_matter\\title_front_matter.rst", "index.rst", "math.rst", "math\\concept\\axiom_math_concept.rst", "math\\concept\\elimination_rule_math_concept.rst", "math\\concept\\formula_math_concept.rst", "math\\concept\\formula_statement_math_concept.rst", "math\\concept\\free_variable_math_concept.rst", "math\\concept\\hypothesis_math_concept.rst", "math\\concept\\inference_rule_math_concept.rst", "math\\concept\\introduction_rule_math_concept.rst", "math\\concept\\is_a_math_concept.rst", "math\\concept\\meta_object_math_concept.rst", "math\\concept\\notation_form_math_concept.rst", "math\\concept\\object_creation_math_concept.rst", "math\\concept\\object_declaration_math_concept.rst", "math\\concept\\object_inclusion_math_concept.rst", "math\\concept\\object_math_concept.rst", "math\\concept\\paragraph_proof_math_concept.rst", "math\\concept\\relation_math_concept.rst", "math\\concept\\statement_math_concept.rst", "math\\concept\\theory_elaboration_sequence_math_concept.rst", "math\\concept\\universe_of_discourse_math_concept.rst", "math\\inference_rule\\absorption_math_inference_rule.rst", "math\\inference_rule\\biconditional_elimination_1_math_inference_rule.rst", "math\\inference_rule\\biconditional_elimination_2_math_inference_rule.rst", "math\\inference_rule\\biconditional_introduction_math_inference_rule.rst", "math\\inference_rule\\conjunction_elimination_1_math_inference_rule.rst", "math\\inference_rule\\conjunction_elimination_2_math_inference_rule.rst", "math\\inference_rule\\conjunction_introduction_math_inference_rule.rst", "math\\inference_rule\\disjunction_introduction_1_math_inference_rule.rst", "math\\inference_rule\\disjunction_introduction_2_math_inference_rule.rst", "math\\inference_rule\\double_negation_elimination_math_inference_rule.rst", "math\\inference_rule\\double_negation_introduction_math_inference_rule.rst", "math\\inference_rule\\equal_terms_substitution_math_inference_rule.rst", "math\\inference_rule\\equality_commutativity_math_inference_rule.rst", "math\\inference_rule\\inconsistency_introduction_1_math_inference_rule.rst", "math\\inference_rule\\inconsistency_introduction_2_math_inference_rule.rst", "math\\inference_rule\\inconsistency_introduction_3_math_inference_rule.rst", "math\\inference_rule\\modus_ponens_math_inference_rule.rst", "math\\inference_rule\\proof_by_contradiction_1_math_inference_rule.rst", "math\\inference_rule\\proof_by_contradiction_2_math_inference_rule.rst", "math\\inference_rule\\proof_by_refutation_1_math_inference_rule.rst", "math\\inference_rule\\proof_by_refutation_2_math_inference_rule.rst", "math\\inference_rule\\variable_substitution_math_inference_rule.rst", "math\\theory\\tao_2006.rst", "math\\theory\\tao_2006\\the_peano_axioms.rst", "math\\theory\\tao_2006\\the_peano_axioms\\report_noproof_enus_plaintext.rst", "math\\theory\\tao_2006\\the_peano_axioms\\report_noproof_enus_unicode.rst", "math\\theory\\tao_2006\\the_peano_axioms\\report_proof_enus_plaintext.rst", "math\\theory\\tao_2006\\the_peano_axioms\\report_proof_enus_unicode.rst", "math_concept.rst", "math_inference_rule.rst", "math_theory.rst", "python.rst", "python\\class\\absorption_declaration_python_class.rst", "python\\class\\absorption_inclusion_python_class.rst", "python\\class\\biconditional_elimination_1_declaration_python_class.rst", "python\\class\\biconditional_elimination_1_inclusion_python_class.rst", "python\\class\\biconditional_elimination_2_declaration_python_class.rst", "python\\class\\biconditional_elimination_2_inclusion_python_class.rst", "python\\class\\biconditional_introduction_declaration_python_class.rst", "python\\class\\biconditional_introduction_inclusion_python_class.rst", "python\\class\\conjunction_elimination_1_declaration_python_class.rst", "python\\class\\conjunction_elimination_1_inclusion_python_class.rst", "python\\class\\conjunction_elimination_2_declaration_python_class.rst", "python\\class\\conjunction_elimination_2_inclusion_python_class.rst", "python\\class\\conjunction_introduction_declaration_python_class.rst", "python\\class\\conjunction_introduction_inclusion_python_class.rst", "python\\class\\disjunction_introduction_1_declaration_python_class.rst", "python\\class\\disjunction_introduction_1_inclusion_python_class.rst", "python\\class\\disjunction_introduction_2_declaration_python_class.rst", "python\\class\\disjunction_introduction_2_inclusion_python_class.rst", "python\\class\\double_negation_elimination_declaration_python_class.rst", "python\\class\\double_negation_elimination_inclusion_python_class.rst", "python\\class\\double_negation_introduction_declaration_python_class.rst", "python\\class\\double_negation_introduction_inclusion_python_class.rst", "python\\class\\equal_terms_substitution_declaration_python_class.rst", "python\\class\\equal_terms_substitution_inclusion_python_class.rst", "python\\class\\equality_commutativity_declaration_python_class.rst", "python\\class\\equality_commutativity_inclusion_python_class.rst", "python\\class\\inconsistency_introduction_1_declaration_python_class.rst", "python\\class\\inconsistency_introduction_1_inclusion_python_class.rst", "python\\class\\inconsistency_introduction_2_declaration_python_class.rst", "python\\class\\inconsistency_introduction_2_inclusion_python_class.rst", "python\\class\\inconsistency_introduction_3_declaration_python_class.rst", "python\\class\\inconsistency_introduction_3_inclusion_python_class.rst", "python\\class\\inference_rule_declaration_python_class.rst", "python\\class\\modus_ponens_declaration_python_class.rst", "python\\class\\modus_ponens_inclusion_python_class.rst", "python\\class\\proof_by_contradiction_1_declaration_python_class.rst", "python\\class\\proof_by_contradiction_1_inclusion_python_class.rst", "python\\class\\proof_by_contradiction_2_declaration_python_class.rst", "python\\class\\proof_by_contradiction_2_inclusion_python_class.rst", "python\\class\\proof_by_refutation_1_declaration_python_class.rst", "python\\class\\proof_by_refutation_1_inclusion_python_class.rst", "python\\class\\proof_by_refutation_2_declaration_python_class.rst", "python\\class\\proof_by_refutation_2_inclusion_python_class.rst", "python\\class\\python_class_index.rst", "python\\class\\universe_of_discourse_python_class.rst", "python\\class\\variable_substitution_declaration_python_class.rst", "python\\class\\variable_substitution_inclusion_python_class.rst", "python\\function\\create_universe_of_discourse.rst", "python\\function\\python_function_index.rst", "python\\installation_python.rst", "python\\prerequisites_python.rst", "python\\sample\\absorption_python_sample.rst", "python\\sample\\biconditional_elimination_1_python_sample.rst", "python\\sample\\biconditional_elimination_2_python_sample.rst", "python\\sample\\biconditional_introduction_python_sample.rst", "python\\sample\\conjunction_elimination_1_python_sample.rst", "python\\sample\\conjunction_elimination_2_python_sample.rst", "python\\sample\\conjunction_introduction_python_sample.rst", "python\\sample\\disjunction_introduction_1_python_sample.rst", "python\\sample\\disjunction_introduction_2_python_sample.rst", "python\\sample\\double_negation_elimination_python_sample.rst", "python\\sample\\double_negation_introduction_python_sample.rst", "python\\sample\\equal_terms_substitution_python_sample.rst", "python\\sample\\equality_commutativity_python_sample.rst", "python\\sample\\inconsistency_introduction_1_python_sample.rst", "python\\sample\\inconsistency_introduction_2_python_sample.rst", "python\\sample\\inconsistency_introduction_3_python_sample.rst", "python\\sample\\modus_ponens_python_sample.rst", "python\\sample\\proof_by_contradiction_1_python_sample.rst", "python\\sample\\proof_by_contradiction_2_python_sample.rst", "python\\sample\\proof_by_refutation_1_python_sample.rst", "python\\sample\\proof_by_refutation_2_python_sample.rst", "python\\sample\\python_sample_index.rst", "python\\sample\\variable_substitution_python_sample.rst", "python\\source_code_repository_python.rst"], "titles": ["My tags: absorption", "My tags: biconditional-elimination-1", "My tags: biconditional-elimination-2", "My tags: biconditional-introduction", "My tags: class", "My tags: concept", "My tags: conjunction-elimination-1", "My tags: conjunction-elimination-2", "My tags: conjunction-introduction", "My tags: declaration", "My tags: disjunction-introduction-1", "My tags: disjunction-introduction-2", "My tags: double-negation-elimination", "My tags: double-negation-introduction", "My tags: equal-terms-substitution", "My tags: equality-commutativity", "My tags: inclusion", "My tags: inconsistency-introduction-1", "My tags: inconsistency-introduction-2", "My tags: inconsistency-introduction-3", "My tags: inference-rule", "My tags: math", "My tags: modus-ponens", "My tags: proof-by-contradiction-1", "My tags: proof-by-contradiction-2", "My tags: proof-by-refutation-1", "My tags: proof-by-refutation-2", "My tags: python", "My tags: sample", "Tags overview", "My tags: universe-of-discourse", "My tags: variable-substitution", "Back matter", "Bibliography", "Front matter", "About <em>punctilious</em>", "Contributing to <em>punctilious</em>", "The <em>punctilious</em> project", "Roadmap", "Support", "Punctilious", "punctilious", "Math", "axiom", "elimination-rule", "formula", "formula-statement", "free-variable", "hypothesis", "inference-rule", "introduction-rule", "is-a", "meta-object", "notation-form", "object-creation", "object-declaration", "object-inclusion", "object", "paragraph-proof (proof-style)", "relation", "statement", "theory-elaboration-sequence", "universe-of-discourse", "absorption (math concept)", "biconditional-elimination-1 (math concept)", "biconditional-elimination-2 (math concept)", "biconditional-introduction (math concept)", "conjunction-elimination-1 (math concept)", "conjunction-elimination-2 (math concept)", "conjunction-introduction (math concept)", "disjunction-introduction-1 (math concept)", "disjunction-introduction-2 (math concept)", "double-negation-elimination (math concept)", "double-negation-introduction (math concept)", "equal-terms-substitution (math concept)", "equality-commutativity (math concept)", "inconsistency-introduction-1 (math concept)", "inconsistency-introduction-2 (math concept)", "inconsistency-introduction-3 (math concept)", "modus-ponens (math concept)", "proof-by-contradiction-1 (math concept)", "proof-by-contradiction-2 (math concept)", "proof-by-refutation-1 (math concept)", "proof-by-refutation-2 (math concept)", "variable-substitution (math concept)", "Tao 2006", "The Peano axioms", "Plaintext EN-US without proofs", "Unicode EN-US without proofs", "Plaintext EN-US with proofs", "Unicode EN-US with proofs", "Math concept", "Math inference_rule", "Math theory", "Python", "AbsorptionDeclaration (python class)", "AbsorptionInclusion (python class)", "BiconditionalElimination1Declaration (python class)", "BiconditionalElimination1Inclusion (python class)", "BiconditionalElimination2Declaration (python class)", "BiconditionalElimination2Inclusion (python class)", "BiconditionalIntroductionDeclaration (python class)", "BiconditionalIntroductionInclusion (python class)", "ConjunctionElimination1Declaration (python class)", "ConjunctionElimination1Inclusion (python class)", "ConjunctionElimination2Declaration (python class)", "ConjunctionElimination2Inclusion (python class)", "ConjunctionIntroductionDeclaration (python class)", "ConjunctionIntroductionInclusion (python class)", "DisjunctionIntroduction1Declaration (python class)", "DisjunctionIntroduction1Inclusion (python class)", "DisjunctionIntroduction2Declaration (python class)", "DisjunctionIntroduction2Inclusion (python class)", "DoubleNegationEliminationDeclaration (python class)", "DoubleNegationEliminationInclusion (python class)", "DoubleNegationIntroductionDeclaration (python class)", "DoubleNegationIntroductionInclusion (python class)", "EqualTermsSubstitutionDeclaration (python class)", "EqualTermsSubstitutionInclusion (python class)", "EqualityCommutativityDeclaration (python class)", "EqualityCommutativityInclusion (python class)", "InconsistencyIntroduction1Declaration (python class)", "InconsistencyIntroduction1Inclusion (python class)", "InconsistencyIntroduction2Declaration (python class)", "InconsistencyIntroduction2Inclusion (python class)", "InconsistencyIntroduction3Declaration (python class)", "InconsistencyIntroduction3Inclusion (python class)", "InferenceRuleDeclarationDict (python class)", "ModusPonensDeclaration (python class)", "ModusPonensInclusion (python class)", "ProofByContradiction1Declaration (python class)", "ProofByContradiction1Inclusion (python class)", "ProofByContradiction2Declaration (python class)", "ProofByContradiction2Inclusion (python class)", "ProofByRefutation1Declaration (python class)", "ProofByRefutation1Inclusion (python class)", "ProofByRefutation2Declaration (python class)", "ProofByRefutation2Inclusion (python class)", "Python classes", "UniverseOfDiscourse (python class)", "VariableSubstitutionDeclaration (python class)", "VariableSubstitutionInclusion (python class)", "create_universe_of_discourse", "Python functions", "Installation", "Prerequisites", "absorption (python sample)", "biconditional-elimination-1 (python sample)", "biconditional-elimination-2 (python sample)", "biconditional-introduction (python sample)", "conjunction-elimination-1 (python sample)", "conjunction-elimination-2 (python sample)", "conjunction-introduction (python sample)", "disjunction-introduction-1 (python sample)", "disjunction-introduction-2 (python sample)", "double-negation-elimination (python sample)", "double-negation-introduction (python sample)", "equal-terms-substitution (python sample)", "equality-commutativity (python sample)", "inconsistency-introduction-1 (python sample)", "inconsistency-introduction-2 (python sample)", "inconsistency-introduction-3 (python sample)", "modus-ponens (python sample)", "proof-by-contradiction-1 (python sample)", "proof-by-contradiction-2 (python sample)", "proof-by-refutation-1 (python sample)", "proof-by-refutation-2 (python sample)", "Python samples", "variable-substitution (python sample)", "Source code repository"], "terms": {"math": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 31, 33, 40, 41, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "concept": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 41, 42, 51, 86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "absorptiondeclar": [0, 4, 9, 27, 41, 138], "python": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 35, 41, 42, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 169], "class": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 41, 51, 52, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 94, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "absorptioninclus": [0, 4, 16, 27, 41, 138], "sampl": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 29, 31, 41, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "biconditionalelimination1declar": [1, 4, 9, 27, 41, 138], "biconditionalelimination1inclus": [1, 4, 16, 27, 41, 138], "biconditionalelimination2declar": [2, 4, 9, 27, 41, 138], "biconditionalelimination2inclus": [2, 4, 16, 27, 41, 138], "biconditionalintroductiondeclar": [3, 4, 9, 27, 41, 138], "biconditionalintroductioninclus": [3, 4, 16, 27, 41, 138], "conjunctionelimination1declar": [4, 6, 9, 27, 41, 138], "conjunctionelimination1inclus": [4, 6, 16, 27, 41, 138], "conjunctionelimination2declar": [4, 7, 9, 27, 41, 138], "conjunctionelimination2inclus": [4, 7, 16, 27, 41, 138], "conjunctionintroductiondeclar": [4, 8, 9, 27, 41, 138], "conjunctionintroductioninclus": [4, 8, 16, 27, 41, 138], "disjunctionintroduction1declar": [4, 9, 10, 27, 41, 138], "disjunctionintroduction1inclus": [4, 10, 16, 27, 41, 138], "disjunctionintroduction2declar": [4, 9, 11, 27, 41, 138], "disjunctionintroduction2inclus": [4, 11, 16, 27, 41, 138], "doublenegationeliminationdeclar": [4, 9, 12, 27, 41, 138], "doublenegationeliminationinclus": [4, 12, 16, 27, 41, 138], "doublenegationintroductiondeclar": [4, 9, 13, 27, 41, 138], "doublenegationintroductioninclus": [4, 13, 16, 27, 41, 138], "equaltermssubstitutiondeclar": [4, 9, 14, 27, 41, 138], "equaltermssubstitutioninclus": [4, 14, 16, 27, 41, 138], "equalitycommutativitydeclar": [4, 9, 15, 27, 41, 138], "equalitycommutativityinclus": [4, 15, 16, 27, 41, 138], "inconsistencyintroduction1declar": [4, 9, 17, 27, 41, 138], "inconsistencyintroduction1inclus": [4, 16, 17, 27, 41, 138], "inconsistencyintroduction2declar": [4, 9, 18, 27, 41, 138], "inconsistencyintroduction2inclus": [4, 16, 18, 27, 41, 138], "inconsistencyintroduction3declar": [4, 9, 19, 27, 41, 138], "inconsistencyintroduction3inclus": [4, 16, 19, 27, 41, 138], "inferenceruledeclarationdict": [4, 9, 20, 27, 139], "modusponensdeclar": [4, 9, 22, 27, 41, 138], "modusponensinclus": [4, 16, 22, 27, 41, 138], "proofbycontradiction1declar": [4, 9, 23, 27, 41, 138], "proofbycontradiction1inclus": [4, 16, 23, 27, 41, 138], "proofbycontradiction2declar": [4, 9, 24, 27, 41, 138], "proofbycontradiction2inclus": [4, 16, 24, 27, 41, 138], "proofbyrefutation1declar": [4, 9, 25, 27, 41, 138], "proofbyrefutation1inclus": [4, 16, 25, 27, 41, 138], "proofbyrefutation2declar": [4, 9, 26, 27, 41, 138], "proofbyrefutation2inclus": [4, 16, 26, 27, 41, 138], "universeofdiscours": [4, 27, 30, 41, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 138, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "variablesubstitutiondeclar": [4, 9, 27, 31, 41, 138], "variablesubstitutioninclus": [4, 16, 27, 31, 41, 138], "absorpt": [5, 20, 21, 27, 28, 29, 41, 42, 49, 92, 95, 96, 167], "bicondit": [5, 20, 21, 27, 28, 29, 41, 42, 44, 49, 50, 92, 97, 98, 99, 100, 101, 102, 167], "elimin": [5, 20, 21, 27, 28, 29, 33, 41, 42, 49, 50, 91, 92, 97, 98, 99, 100, 102, 103, 104, 105, 106, 113, 114, 167], "1": [5, 20, 21, 27, 28, 29, 33, 37, 41, 42, 44, 49, 50, 62, 86, 87, 88, 89, 90, 92, 97, 98, 99, 103, 104, 109, 110, 113, 121, 122, 130, 131, 134, 135, 146, 148, 149, 151, 152, 154, 157, 158, 162, 164, 167], "2": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 86, 87, 88, 89, 90, 92, 99, 100, 102, 105, 106, 111, 112, 123, 124, 132, 133, 136, 137, 146, 147, 149, 150, 152, 153, 155, 156, 157, 158, 159, 162, 163, 167], "introduct": [5, 20, 21, 27, 28, 29, 33, 41, 42, 49, 72, 87, 89, 91, 92, 101, 102, 107, 108, 109, 110, 111, 112, 115, 116, 121, 122, 123, 124, 125, 126, 163, 164, 167], "conjunct": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 87, 89, 92, 103, 104, 105, 106, 107, 108, 163, 167], "disjunct": [5, 20, 21, 27, 28, 29, 41, 42, 44, 49, 50, 92, 109, 110, 111, 112, 167], "doubl": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 92, 107, 109, 111, 113, 114, 115, 116, 167], "negat": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 76, 92, 107, 109, 111, 113, 114, 115, 116, 163, 164, 167], "equal": [5, 20, 21, 27, 28, 29, 41, 42, 49, 77, 78, 86, 87, 89, 92, 117, 118, 119, 120, 164, 167], "term": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 77, 86, 87, 89, 92, 117, 118, 167], "substitut": [5, 20, 21, 27, 28, 29, 41, 42, 49, 86, 87, 89, 92, 117, 118, 140, 141, 163, 164, 167], "commut": [5, 20, 21, 27, 28, 29, 41, 42, 49, 87, 89, 92, 119, 120, 167], "inconsist": [5, 20, 21, 27, 28, 29, 41, 42, 49, 80, 82, 83, 87, 89, 92, 121, 122, 123, 124, 125, 126, 131, 135, 163, 164, 167], "3": [5, 20, 21, 27, 28, 29, 33, 41, 42, 49, 86, 87, 88, 89, 90, 92, 125, 126, 167], "modu": [5, 20, 21, 27, 28, 29, 41, 42, 49, 87, 89, 92, 128, 129, 131, 135, 163, 164, 167], "ponen": [5, 20, 21, 27, 28, 29, 41, 42, 49, 87, 89, 92, 128, 129, 131, 135, 163, 164, 167], "proof": [5, 20, 21, 27, 28, 29, 33, 38, 40, 41, 42, 49, 69, 73, 77, 78, 85, 86, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167], "contradict": [5, 20, 21, 27, 28, 29, 41, 42, 49, 82, 83, 86, 87, 89, 92, 130, 131, 132, 133, 167], "refut": [5, 20, 21, 27, 28, 29, 41, 42, 49, 86, 87, 89, 92, 134, 135, 136, 137, 167], "variabl": [5, 20, 21, 27, 28, 29, 41, 42, 49, 55, 86, 87, 89, 91, 92, 139, 140, 141, 163, 164, 167], "4": [29, 86, 87, 88, 89, 90], "46": 29, "22": [29, 33, 86], "declar": [29, 41, 42, 54, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "23": [29, 86], "inclus": [29, 41, 42, 54, 55, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "infer": [29, 38, 41, 42, 44, 50, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "rule": [29, 33, 38, 41, 42, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "24": 29, "68": 29, "univers": [29, 33, 41, 42, 55, 56, 91, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 139, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "discours": [29, 41, 42, 55, 56, 91, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 139, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "bibliographi": [32, 41], "ast10": [33, 58], "loui": 33, "astorino": 33, "style": 33, "2010": 33, "url": [33, 49], "http": [33, 37, 49], "www": 33, "arlingtonschool": 33, "org": [33, 49], "cm": 33, "lib": 33, "ny02215626": 33, "centric": 33, "domain": 33, "4295": 33, "proofs_1": 33, "pdf": [33, 38], "visit": 33, "2023": 33, "08": 33, "14": 33, "coo09": [33, 70, 71], "roi": 33, "t": [33, 62, 76, 77, 78, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "cook": 33, "A": [33, 40, 41, 59, 62, 77, 78, 86, 87, 88, 89, 90, 95, 97, 99, 103, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 127, 128, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "dictionari": [33, 139], "philosoph": 33, "logic": [33, 38, 69, 73, 86], "edinburgh": 33, "press": 33, "2009": 33, "isbn": 33, "978": 33, "0": [33, 86, 87, 88, 89, 90], "7486": 33, "2559": 33, "8": [33, 86, 87, 89], "dow09": [33, 59], "dougla": 33, "down": [33, 84], "mathemat": [33, 35, 42, 49, 62, 86, 87, 88, 89, 90, 91, 92, 93, 94], "3rd": 33, "edit": 33, "barron": 33, "": [33, 86, 139], "profession": [33, 36], "guid": 33, "ed": 33, "13": 33, "7641": 33, "4139": 33, "10": [33, 86], "librari": [33, 169], "congress": 33, "control": 33, "number": [33, 84, 86, 87, 89], "2008931689": 33, "mgz21": [33, 77, 78], "paolo": 33, "mancosu": 33, "sergio": 33, "galvan": 33, "richard": 33, "zach": 33, "an": [33, 44, 48, 49, 50, 51, 54, 55, 56, 62, 78, 80, 82, 83, 86, 87, 89, 96, 114, 117, 119, 122, 124, 126, 129, 131, 135, 139], "theori": [33, 36, 41, 42, 48, 55, 56, 62, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "normal": 33, "cut": 33, "consist": [33, 77, 78, 82, 87, 89], "oxford": 33, "pressoxford": 33, "2021": 33, "doi": 33, "1093": 33, "oso": 33, "9780192895936": 33, "001": 33, "0001": 33, "plvh08": [33, 44, 50], "bruce": 33, "porter": 33, "vladimir": 33, "lifschitz": 33, "frank": 33, "van": 33, "harmelen": 33, "editor": 33, "handbook": 33, "knowledg": 33, "represent": [33, 59], "foundat": 33, "artifici": 33, "intellig": 33, "elsevi": 33, "amsterdam": 33, "boston": 33, "1st": 33, "2008": 33, "tao06": [33, 85, 86], "terenc": 33, "tao": [33, 38, 41, 42, 86, 93], "analysi": [33, 38, 85], "i": [33, 35, 36, 41, 42, 44, 48, 49, 50, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "text": [33, 38, 58, 80, 86, 87, 89], "read": 33, "hindustan": 33, "book": 33, "agenc": 33, "2006": [33, 38, 41, 42, 86, 93], "81": 33, "85931": 33, "62": 33, "mcadams14": [33, 59], "david": 33, "e": [33, 35, 62, 86, 87, 89, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "mcadam": 33, "all": [33, 38, 86, 117], "word": [33, 86, 87, 89], "second": [33, 84], "life": 33, "stori": 33, "problem": 33, "llc": 33, "2014": 33, "proofwiki22a": [33, 73], "proofwiki": 33, "septemb": 33, "2022": 33, "wiki": [33, 49], "double_neg": 33, "double_negation_introduct": [33, 115, 116, 156], "proof_rul": 33, "21": 33, "proofwiki22b": [33, 69], "june": 33, "rule_of_conjunct": 33, "titl": [34, 41, 49], "about": [34, 41, 55, 56], "contribut": [34, 39, 41], "roadmap": [34, 36, 41], "project": [34, 35, 36, 41], "support": [34, 38, 41, 53], "open": 35, "sourc": [35, 41, 94], "In": [35, 48, 51, 54, 55, 56, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 82, 83, 84, 86, 87, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "clear": [35, 36], "intend": 35, "facilit": 35, "studi": 35, "human": [35, 40, 41], "beings": 35, "There": [35, 86], "exist": [35, 54, 55, 62, 86], "multipl": [35, 84], "includ": [35, 62, 69, 73, 84, 86, 87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "coq": 35, "isabel": 35, "lean": 35, "mani": [35, 86], "more": [35, 55, 86], "The": [35, 36, 41, 42, 53, 62, 69, 73, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169], "page": [35, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "wikipedia": [35, 49], "contain": [35, 48, 55, 62, 107, 109, 111, 115, 139, 140], "gener": [35, 54, 55, 56, 87, 88, 89, 90, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 139, 140], "purpos": [35, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "comparison": 35, "contrast": 35, "ridicul": 35, "lilliputian": 35, "neither": 35, "length": 35, "nor": 35, "breadth": 35, "time": [35, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "proven": [35, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 113], "system": [35, 86, 87, 89], "besid": 35, "being": [35, 86], "fun": 35, "thrill": 35, "learn": 35, "experi": 35, "focu": 35, "point": [35, 48, 86], "ar": [35, 36, 38, 48, 53, 67, 68, 69, 74, 77, 78, 84, 86, 87, 89, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 139], "friendli": [35, 40, 41], "input": [35, 38, 95, 97, 99, 101, 103, 105, 113, 115, 117, 119, 121, 123, 125, 130, 132, 134, 136], "write": 35, "we": [35, 36, 37, 38, 39, 44, 48, 50, 55, 62, 69, 73, 76, 77, 78, 83, 86, 87, 89, 163, 164], "eas": 35, "us": [35, 51, 55, 62, 84, 86, 87, 88, 89, 90, 91, 92, 93, 139, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "output": [35, 38], "readabl": 35, "doe": [35, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "pai": 35, "much": 35, "attent": 35, "perform": [35, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "larg": 35, "scale": 35, "applic": [35, 146], "everyon": 36, "warmli": 36, "welcom": 36, "here": [36, 38, 54, 55, 56, 142], "some": [36, 38, 44, 49, 50, 86, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "idea": 36, "how": [36, 44, 50, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "get": 36, "start": [36, 86], "If": [36, 39, 62, 69, 73, 86, 87, 89], "you": [36, 39], "feel": [36, 39], "like": 36, "develop": [36, 40, 41, 87, 88, 89, 90, 165, 166, 168], "whether": 36, "have": [36, 77, 78, 84, 86, 87, 89], "featur": 36, "would": 36, "work": 36, "just": [36, 86], "free": [36, 39, 41, 42, 84, 91, 139], "touch": 36, "our": [36, 39, 86, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163], "github": [36, 37, 39, 169], "discuss": [36, 39, 86], "thread": [36, 39], "most": 36, "happi": 36, "help": [36, 39], "from": [36, 38, 44, 48, 49, 50, 51, 54, 55, 56, 63, 66, 70, 71, 82, 83, 86, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "mathematician": 36, "student": 36, "amateur": 36, "look": 36, "mai": [36, 48, 69, 73, 140], "wish": 36, "try": 37, "manag": [37, 139], "thi": [37, 42, 51, 69, 73, 82, 83, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169], "com": 37, "user": [37, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "daviddoret": 37, "list": [38, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "high": 38, "level": 38, "intent": 38, "regard": 38, "futur": [38, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "punctili": [38, 39, 42, 51, 52, 53, 62, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169], "continu": 38, "real": 38, "document": 38, "properli": 38, "naiv": 38, "set": [38, 51, 59, 62, 86, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163], "proposit": [38, 59, 63, 64, 65, 66, 67, 68, 69, 73, 76, 80, 82, 83, 86, 87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "fundament": 38, "geometri": 38, "meta": [38, 41, 42, 91], "provid": [38, 85, 86, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "simpl": [38, 62, 87, 89, 139], "understand": 38, "error": 38, "inform": [38, 86, 87, 89], "messag": 38, "when": [38, 86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "invalid": 38, "function": [38, 41, 53, 80, 86, 94, 139, 142], "import": [38, 86, 87, 88, 89, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "natur": [38, 69, 73, 84, 86, 87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "ascii": 38, "unicod": [38, 41, 42, 85, 86, 93, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "latex": [38, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "two": [38, 59, 77, 86], "column": 38, "export": 38, "json": 38, "xml": 38, "csv": 38, "need": [39, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "contact": 39, "u": [39, 41, 42, 44, 50, 52, 55, 85, 86, 93, 127, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "do": [39, 86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "best": 39, "effort": 39, "assist": [40, 41], "front": 41, "matter": [41, 86], "axiom": [41, 42, 62, 85, 87, 89, 91, 93, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "formula": [41, 42, 44, 48, 50, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 78, 80, 82, 83, 84, 86, 89, 91, 95, 96, 97, 99, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 128, 129, 131, 135, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "statement": [41, 42, 44, 48, 49, 50, 54, 55, 56, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 82, 84, 86, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "hypothesi": [41, 42, 80, 82, 83, 86, 87, 89, 91, 130, 131, 132, 134, 135, 136, 163, 164], "object": [41, 42, 51, 59, 62, 78, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "notat": [41, 42, 59, 86, 91], "form": [41, 42, 44, 50, 59, 73, 74, 75, 84, 89, 91, 95, 97, 99, 103, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163], "creation": [41, 42, 55, 56, 62, 91, 142], "paragraph": [41, 42, 91, 107, 109, 111, 115, 140], "relat": [41, 42, 51, 62, 86, 87, 89, 91, 94, 139], "elabor": [41, 42, 48, 56, 62, 85, 86, 87, 89, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "sequenc": [41, 42, 48, 56, 62, 84, 85, 86, 87, 89, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 137, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "peano": [41, 42, 85, 87, 89, 93], "plaintext": [41, 42, 85, 86, 93, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "en": [41, 42, 49, 85, 86, 93], "without": [41, 42, 85, 86, 93], "report": [41, 42, 85, 93], "prerequisit": [41, 94], "instal": [41, 94], "code": [41, 94, 139, 142], "inferenceruledeclar": [41, 138, 139], "create_universe_of_discours": [41, 143, 163], "back": 41, "refer": [42, 86, 91, 92, 93, 94, 139], "rational": [42, 94], "keep": [42, 94], "clearli": [42, 94], "distinct": [42, 54, 55, 56, 86, 94, 159, 160, 161, 164], "cross": [42, 94, 139], "referenc": [42, 94], "allow": [44, 49, 50, 70, 71], "deriv": [44, 49, 50, 77, 78], "syntact": [44, 49, 50, 59, 95, 97, 99, 101, 103, 105, 113, 115, 117, 119, 121, 123, 125, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "defin": [44, 50, 62, 86, 87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "premis": [44, 49, 50], "each": [44, 50, 86], "tell": [44, 50], "For": [44, 50, 62], "instanc": [44, 50, 139], "show": [44, 50, 77, 78, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "can": [44, 50, 69, 73, 86], "both": [44, 50, 63, 67, 68, 69, 77, 78], "one": [44, 50, 70, 71, 86], "p": [44, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 131, 135, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "6": [44, 50, 86, 87, 88, 89, 90], "7": [44, 50], "special": [48, 95, 97, 99, 101, 103, 105, 113, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136], "branch": 48, "out": 48, "child": 48, "parent": [48, 130, 132, 134, 136], "postul": [48, 62, 87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "new": [48, 84, 139, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "true": [48, 59, 64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 86, 87, 89, 90, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 129, 131, 135, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "note": [48, 86, 139], "part": 48, "It": [48, 51, 59, 86], "follow": [48, 53, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 83, 84, 86, 87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "its": [48, 54, 55, 56, 58, 59, 62, 76, 84, 86, 139, 159, 160, 161, 164], "predecessor": 48, "successor": [48, 86, 87, 89], "straightforward": [48, 54, 55, 56, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 84], "languag": [48, 54, 55, 56, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 82, 83, 84, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "ani": [48, 59, 86, 87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "pose": [48, 82, 83, 163, 164], "That": 48, "what": [48, 86], "assum": [48, 80, 81, 82, 83, 163, 164], "someth": 48, "tag": [49, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "transform": 49, "which": [49, 55, 56, 77, 78, 86, 159, 161, 163], "valid": [49, 69, 71, 72, 73, 74, 75, 87, 89, 96, 107, 109, 111, 115, 116, 129, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "encyclopedia": 49, "encyclopediaofmath": 49, "index": [49, 139], "php": 49, "derivation_rul": 49, "oldid": 49, "33737": 49, "list_of_rules_of_infer": 49, "binari": [51, 87, 89], "denot": [51, 86, 87, 89], "belong": 51, "arbitrari": 51, "collect": [51, 62, 127, 139], "design": [51, 86, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "choic": 51, "symbol": [51, 59, 86, 139, 163, 164], "distinguish": [51, 54], "loos": 51, "membership": 51, "simpleobjctdict": [52, 139], "call": [53, 86, 132, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "fix": [53, 59], "post": 53, "pre": 53, "todo": [54, 59, 86, 132, 165, 166, 168], "name": [54, 86, 139, 142], "consid": [54, 55, 56, 62, 87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "mean": [54, 55, 56, 59, 86], "summon": 54, "footnote2": 55, "extend": [55, 56, 87, 89], "make": [55, 56, 132, 139], "possibl": [55, 56, 77, 78, 84, 86, 132], "speak": 55, "other": [55, 86, 87, 89], "formal": [55, 77, 78, 85, 86], "whenev": [55, 84, 86, 87, 89], "let": [55, 86, 87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "newli": [55, 84], "creat": [55, 62, 86, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "x": [55, 74, 75, 77, 86, 87, 89, 139, 163, 164], "y": [55, 74, 75, 77, 86, 87, 89, 139, 163, 164], "To": [55, 86, 139], "even": [55, 86], "accur": [55, 95, 97, 99, 101, 103, 105, 113, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136], "should": [55, 86, 95, 97, 99, 101, 103, 105, 113, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136], "accret": 55, "footnot": [55, 56, 62], "footnote1": 56, "constitut": 56, "element": [56, 86], "present": [58, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "singl": [58, 86], "detail": 58, "step": 58, "justif": 58, "conclus": 58, "order": [59, 84], "pair": [59, 84, 86], "equival": [59, 62, 86, 87, 89], "member": 59, "b": 59, "arb": 59, "either": [59, 70, 71], "fals": [59, 86, 87, 88, 89, 90, 95, 97, 99, 101, 103, 105, 113, 115, 117, 119, 121, 123, 125, 139], "repres": 59, "theoret": 59, "assign": [59, 84, 86], "composit": 59, "\ud835\udf11": 59, "establish": [59, 163], "between": 59, "paramet": [59, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "ha": 59, "ariti": [59, 86, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164], "signal": 59, "renam": 59, "possibli": [62, 127, 139], "empti": [62, 127, 139], "left": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 107, 108, 109, 110, 111, 112, 115, 116, 135, 139], "o_1": 62, "o_2": 62, "ldot": 62, "o_n": 62, "right": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 107, 108, 109, 110, 111, 112, 115, 116, 135], "where": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 80, 82, 83, 84, 130, 132, 134, 136, 139], "o_i": 62, "organ": 62, "desir": 62, "mutual": 62, "exclus": 62, "necessarili": [62, 139], "exhaust": 62, "categori": 62, "tupl": [62, 86], "mathcal": [62, 76, 77, 78, 80, 81, 82, 83, 135], "c": [62, 86], "_1": 62, "_2": 62, "_n": 62, "_i": 62, "implement": [62, 84, 93], "d": [62, 86, 139], "o": [62, 86, 87, 89, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "r": [62, 86, 117, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "phi": [62, 84, 86, 87, 89, 139, 140, 141, 163, 164], "lifecycl": 62, "thei": [62, 95, 97, 99, 101, 103, 105, 113, 115, 117, 119, 121, 123, 125], "must": [62, 86, 87, 89, 107, 109, 111, 115], "And": [62, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "final": [62, 82, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "aka": 62, "ordinari": 62, "sens": 62, "mathbf": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 135], "impli": [63, 64, 65, 66, 79, 86, 96, 98, 100, 102, 104, 106, 146, 149, 162, 163, 164], "q": [63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 79, 86, 87, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 119, 123, 128, 129, 152, 153, 154, 160, 163, 164], "vdash": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "land": [63, 67, 68, 69, 79, 86, 107, 108, 150, 151, 163], "iff": [64, 65, 66], "onli": [64, 65, 66], "argument": [69, 73, 140], "type": [69, 73, 86, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 139, 140], "deal": [69, 73], "predic": [69, 73], "particular": [69, 73], "deduct": [69, 73], "conclud": [69, 73], "\u03d5": [69, 73], "\u03c8": 69, "compound": 69, "lor": [70, 71, 109, 110, 111, 112], "addit": [70, 71], "p8": [70, 71, 87, 89, 163], "well": [71, 72, 73, 74, 75, 84, 97, 99, 101, 103, 105, 113, 139, 140], "known": [71, 72, 73, 74, 75, 86, 97, 99, 101, 103, 105, 113, 139], "lnot": [72, 73, 115, 116, 155, 159, 163], "As": [73, 86], "express": 73, "ident": 74, "except": 74, "everi": [74, 84, 86, 87, 89], "occurr": [74, 84, 117], "neg": [76, 80, 82, 135], "inc": [76, 77, 78, 80, 81, 82, 83, 87, 89, 130, 131, 132, 134, 135, 136, 159, 160, 161, 163, 164], "prove": [76, 77, 78, 82, 83, 86, 96, 114, 122, 124, 126, 129, 131, 135, 159, 160, 161, 163, 164], "neq": [77, 78, 86, 87, 89, 123, 125, 160, 161, 164], "inequ": [77, 164], "appeal": [77, 78], "contentu": [77, 78], "consider": [77, 78], "complet": [77, 78, 86], "unproblemat": [77, 78], "question": [77, 78], "never": [77, 78], "\ud835\udc4e": [77, 78, 86, 88, 90, 139], "altern": [77, 78, 86], "\ud835\udc4f": [77, 78], "5": [77, 78, 86, 87, 88, 89, 90], "itself": 78, "h": [80, 81, 82, 83, 135, 163, 164], "mathit": 80, "boldsymbol": [82, 83], "textit": 82, "plain": [82, 83], "n": [84, 86, 87, 88, 89, 90, 139, 140], "modifi": [84, 117], "version": [84, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "whose": [84, 86], "been": 84, "correspond": 84, "algorithm": 84, "pars": 84, "top": 84, "first": [84, 86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "encount": 84, "dure": 84, "sequenti": 84, "under": [85, 87, 89], "describ": 85, "One": 85, "per": 85, "origin": 85, "chapter": 86, "tao2006thepeanoaxiom": [86, 87, 88, 89, 90], "develop_theori": 86, "given": [86, 139, 153, 154], "pursu": 86, "content": [86, 87, 88, 89, 90, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "kei": [86, 91, 92], "method": [86, 95, 97, 99, 101, 103, 105, 113, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "non": 86, "abstract": 86, "return": [86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "theoryelaborationsequ": [86, 96, 98, 100, 102, 104, 106, 107, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 129, 131, 133, 135, 137, 139, 141], "pu": [86, 87, 88, 89, 90, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "configur": 86, "echo_default": 86, "echo_axiom_declar": 86, "echo_axiom_inclus": 86, "echo_definition_declar": 86, "echo_definition_inclus": 86, "echo_inferred_stat": 86, "echo_proof": 86, "echo_simple_objct_declar": 86, "echo_stat": 86, "echo_rel": 86, "theorypackag": 86, "def": [86, 89], "self": [86, 139], "section_2": 86, "open_sect": 86, "section_numb": 86, "section_2_1": 86, "section_par": 86, "definit": [86, 87, 89, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "take_not": [86, 139], "\ud835\udc0d": 86, "count": 86, "forward": 86, "indefinit": 86, "paragraph_head": [86, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 137, 139, 141], "informal_definit": 86, "ref": [86, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 137, 139, 141], "instead": [86, 139], "convent": 86, "than": 86, "anyth": 86, "els": 86, "shall": 86, "posit": 86, "integ": [86, 139], "\ud835\udc19": 86, "rather": 86, "sometim": 86, "also": [86, 87, 89], "whole": 86, "remark": [86, 139], "a01": 86, "declare_axiom": [86, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "f": [86, 139, 157, 163, 164], "a02": 86, "include_axiom": [86, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "zero": 86, "auto_index": [86, 139], "natural_numb": 86, "p001": 86, "axiom_interpret": [86, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "infer_stat": [86, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 137, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "is_a": 86, "a03": 86, "a04": 86, "plusplu": 86, "formula_rep": 86, "postfix": 86, "v": [86, 139, 163, 164], "p002": 86, "p003": 86, "variable_substitut": [86, 140, 141, 163, 164, 168], "p004": 86, "mp": 86, "d01": 86, "declare_definit": [86, 139], "natural_languag": [86, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "etc": [86, 87, 89], "d02": 86, "include_definit": 86, "p005": 86, "definition_interpret": 86, "p006": 86, "three": 86, "p007": 86, "four": 86, "p008": 86, "zero_plusplu": 86, "p009": 86, "p010": 86, "zero_plus_plus_plusplu": 86, "p011": 86, "\ud835\udde3\ud835\uddff\ud835\uddfc\ud835\uddfd\ud835\uddfc\ud835\ude00\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [86, 88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "p\u2081\u2082": 86, "\ud835\udc56\ud835\udc60": [86, 88, 90], "\ud835\udc5b\ud835\udc4e\ud835\udc61\ud835\udc62\ud835\udc5f\ud835\udc4e\ud835\udc59": [86, 88, 90], "\ud835\udc5b\ud835\udc62\ud835\udc5a\ud835\udc4f\ud835\udc52\ud835\udc5f": [86, 88, 90], "p012": 86, "zero_plus_plus_plus_plusplu": 86, "p013": 86, "p\u2081\u2084": 86, "p014": 86, "p015": 86, "equality_commut": [86, 119, 120, 158], "p016": 86, "equal_terms_substitut": [86, 117, 118, 157], "p017": 86, "p019": 86, "p\u2082\u2080": 86, "p020": 86, "p021": 86, "p022": 86, "p023": 86, "p\u2082\u2084": 86, "p024": 86, "p025": 86, "p026": 86, "p\u2082\u2087": 86, "p027": 86, "a05": 86, "p\u2082\u2088": 86, "\ud835\udc27\u2082": [86, 88, 90], "p028": 86, "want": 86, "p029": 86, "p030": 86, "modus_ponen": [86, 128, 129, 162, 163, 164], "p031": 86, "axiom_2_4": 86, "differ": [86, 87, 89], "m": [86, 87, 89], "p\u2083\u2082": 86, "\ud835\udc27\u2083": [86, 88, 90], "\ud835\udc26\u2081": [86, 88, 90], "p032": 86, "p032b": 86, "s55": 86, "know": 86, "\ud835\udfee": [86, 88, 90], "\ud835\udfed": [86, 88, 90], "\ud835\udff2": [86, 88, 90], "p\u2083\u2080": 86, "With": 86, "demonstr": [86, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "take": [86, 139], "p\u2083\u2081": 86, "p033": 86, "p\u2083\u2084": 86, "p034": 86, "conjunction_introduct": [86, 107, 108, 152, 163], "p\u2083\u2085": 86, "p035": 86, "p\u2083\u2086": 86, "p036": 86, "five": 86, "p\u2083\u2087": 86, "p037": 86, "p\u2083\u2088": 86, "p038": 86, "p\u2083\u2089": 86, "p039": 86, "p\u2084\u2080": 86, "p040": 86, "p\u2084\u2081": 86, "p041": 86, "p\u2084\u2082": 86, "p042": 86, "p\u2084\u2083": 86, "p043": 86, "p\u2084\u2084": 86, "p044": 86, "p\u2084\u2085": 86, "p045": 86, "p\u2084\u2086": 86, "p046": 86, "p\u2084\u2087": 86, "p047": 86, "x_equal_i": [86, 117, 118, 119, 120, 157, 158], "six": 86, "p049": 86, "p050": 86, "p\u2085\u2084": 86, "p054": 86, "p051": 86, "p057": 86, "specif": 86, "suppos": [86, 87, 89], "sake": [86, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "h1": [86, 87, 89, 163, 164], "pose_hypothesi": [86, 163, 164], "hypothesis_formula": [86, 163, 164], "hypothesis_stat": 86, "hypothesis_statement_in_child_theori": 86, "Then": [86, 87, 89], "h1_p2": 86, "hypothesis_child_theori": 86, "h1_p3": 86, "so": 86, "h1_p4": 86, "h1_p5": 86, "h1_p6": 86, "h1_p7": 86, "p_implies_q": [86, 95, 96, 97, 101, 102, 128, 129, 146, 149, 162, 163, 164], "h1_p8": 86, "h1_p9": 86, "h1_p10": 86, "h1_p11": 86, "h1_p12": 86, "By": [86, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "again": 86, "previou": 86, "h1_p071": 86, "p072": 86, "inconsistency_introduction_2": [86, 123, 124, 160, 164], "x_eq_i": [86, 123, 124, 160, 164], "x_neq_i": [86, 123, 124, 160, 164], "inconsistent_theori": [86, 121, 122, 123, 124, 125, 126, 159, 160, 161, 163, 164], "p073": 86, "proof_by_refutation_2": [86, 136, 137, 166], "p_eq_q_hypothesi": [86, 136, 137], "inc_hypothesi": [86, 130, 131, 132, 133, 134, 135, 136, 137, 163, 164], "direct": [86, 87, 89], "nevertheless": 86, "somehow": 86, "indirect": 86, "now": 86, "propos": 86, "p018": 86, "p048": 86, "p052": 86, "p053": 86, "p055": 86, "p056": 86, "principl": [86, 87, 88, 89, 90], "induct": [86, 87, 88, 89, 90], "a_2_5": 86, "axiom_schema_declar": 86, "subtitl": [86, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 137, 139, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "properti": [86, 87, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "pertain": [86, 87, 89], "a_2_5b": 86, "axiom_schema_inclus": 86, "unari": [86, 87, 89], "phi1": [86, 147, 148, 149, 150, 151, 152, 153, 154], "phi2": [86, 149, 152], "phi3": 86, "syntax": 86, "phi4": 86, "phi5": 86, "phi6": 86, "phi7": 86, "p100": 86, "littl": 86, "vagu": 86, "exampl": [86, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "might": 86, "solv": 86, "equat": 86, "n2": [86, 87, 89], "2n": 86, "forth": 86, "Of": 86, "cours": 86, "haven": 86, "yet": 86, "appli": [86, 96, 98, 100, 102, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "becaus": [86, 139, 159, 160, 161, 164], "inde": 86, "technic": 86, "schema": [86, 87, 89], "templat": 86, "produc": 86, "infinit": 86, "own": [86, 159, 160, 161, 164], "further": 86, "far": 86, "beyond": 86, "scope": [86, 139], "though": 86, "fall": 86, "realm": 86, "11": 86, "informal_assumpt": 86, "recurs": [86, 87, 89], "informal_proposit": 86, "16": 86, "f\u2099": 86, "uniqu": [86, 139], "a\u2080": 86, "a\u2099": 86, "informal_proof": 86, "observ": 86, "procedur": 86, "give": 86, "valu": 86, "none": [86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142], "redefin": 86, "a\u2098": 86, "f\u2098": 86, "pu_theori": [87, 88, 89, 90], "export_article_to_fil": [87, 88, 89, 90], "encod": [87, 88, 89, 90], "file_path": [87, 88, 89, 90], "data": [87, 88, 89, 90], "report_tao_2006_the_peano_axioms_noproof_enus_plaintext": 87, "txt": [87, 88, 89, 90], "undetermin": [87, 88, 89, 90], "stabil": [87, 89, 139, 159, 160, 161, 163, 164], "u1": [87, 89, 142, 146], "interpret": [87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "p3": [87, 89, 149, 152, 157, 159, 160, 162, 163, 164], "q3": [87, 89], "\ud835\udc9f": [87, 88, 89, 90], "p2": [87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "x2": [87, 89], "y2": [87, 89], "q2": [87, 89, 163], "x1": [87, 89, 157, 158, 163, 164], "y1": [87, 89, 157, 158, 163, 164], "p1": [87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "q1": [87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 162, 163, 164], "\ud835\udcd7": [87, 88, 89, 90, 163, 164], "\ud835\udc4e\ud835\udc60\ud835\udc60\ud835\udc62\ud835\udc5a\ud835\udc52": [87, 88, 89, 90, 163, 164], "\ud835\udc77": [87, 88, 89, 90, 159, 160, 161, 163, 164], "\ud835\udc78": [87, 88, 89, 90, 160, 164], "\ud835\udc3c\ud835\udc5b\ud835\udc50": [87, 88, 89, 90, 159, 160, 161, 163, 164], "t1": [87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "a1": [87, 89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "a2": [87, 89, 163, 164], "n1": [87, 89], "p4": [87, 89, 163, 164], "d1": [87, 89], "p5": [87, 89, 163, 164], "p6": [87, 89, 163, 164], "p7": [87, 89, 163, 164], "p9": [87, 89, 163], "p10": [87, 89], "p11": [87, 89], "p12": [87, 89], "p13": [87, 89], "p14": [87, 89], "p15": [87, 89], "p16": [87, 89], "p17": [87, 89], "p18": [87, 89], "p19": [87, 89], "p20": [87, 89], "p21": [87, 89], "p22": [87, 89], "p23": [87, 89], "p24": [87, 89], "p25": [87, 89], "p26": [87, 89], "a3": [87, 89], "p27": [87, 89], "p28": [87, 89], "p29": [87, 89], "p30": [87, 89], "a4": [87, 89], "p31": [87, 89], "n3": [87, 89], "m1": [87, 89], "p32": [87, 89], "n4": [87, 89], "m2": [87, 89], "p33": [87, 89], "p34": [87, 89], "p35": [87, 89], "p36": [87, 89], "p37": [87, 89], "p38": [87, 89], "p39": [87, 89], "p40": [87, 89], "p41": [87, 89], "p42": [87, 89], "p43": [87, 89], "p44": [87, 89], "p45": [87, 89], "p46": [87, 89], "p47": [87, 89], "p48": [87, 89], "p49": [87, 89], "p50": [87, 89], "p51": [87, 89], "p52": [87, 89], "p66": [87, 89], "p67": [87, 89], "p68": [87, 89], "p69": [87, 89], "p70": [87, 89], "p71": [87, 89], "p72": [87, 89], "p73": [87, 89], "p74": [87, 89], "a6": [87, 89], "p75": [87, 89], "n5": [87, 89], "m3": [87, 89], "report_tao_2006_the_peano_axioms_noproof_enus_unicod": 88, "\ud835\udde7\ud835\uddf5\ud835\uddf2\ud835\uddfc\ud835\uddff\ud835\ude06": [88, 90], "\ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddfd\ud835\uddf2\ud835\uddff\ud835\ude01\ud835\uddf6\ud835\uddf2\ud835\ude00": [88, 90], "\ud835\uddd6\ud835\uddfc\ud835\uddfb\ud835\ude00\ud835\uddf6\ud835\ude00\ud835\ude01\ud835\uddf2\ud835\uddfb\ud835\uddf0\ud835\ude06": [88, 90], "\ud835\udde6\ud835\ude01\ud835\uddee\ud835\uddef\ud835\uddf6\ud835\uddf9\ud835\uddf6\ud835\ude07\ud835\uddf2\ud835\uddf1": [88, 90], "\ud835\uddd8\ud835\ude05\ud835\ude01\ud835\uddf2\ud835\uddfb\ud835\uddf1\ud835\uddf2\ud835\uddf1": [88, 90], "\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\uddfc\ud835\uddff\ud835\ude06": [88, 90], "\ud835\udde6\ud835\uddf6\ud835\uddfa\ud835\uddfd\ud835\uddf9\ud835\uddf2": [88, 90], "\ud835\uddfc\ud835\uddef\ud835\uddf7\ud835\uddf2\ud835\uddf0\ud835\ude01\ud835\ude00": [88, 90], "\ud835\uddf1\ud835\uddf2\ud835\uddf0\ud835\uddf9\ud835\uddee\ud835\uddff\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00": [88, 90], "\ud835\uddab\ud835\uddbe\ud835\uddcd": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbb\ud835\uddbe": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc60\ud835\udc56\ud835\udc5a\ud835\udc5d\ud835\udc59\ud835\udc52": [88, 90], "\ud835\udc5c\ud835\udc4f\ud835\udc57\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc60": [88, 90], "\ud835\uddc2\ud835\uddc7": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udcb0\u2081": [88, 90], "\ud835\udde5\ud835\uddf2\ud835\uddf9\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00": [88, 90], "\ud835\udc62\ud835\udc5b\ud835\udc4e\ud835\udc5f\ud835\udc66": [88, 90], "\ud835\udc5f\ud835\udc52\ud835\udc59\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b\ud835\udc60": [88, 90], "\ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc4e\ud835\udc5f\ud835\udc66": [88, 90], "\ud835\udddc\ud835\uddfb\ud835\uddf3\ud835\uddf2\ud835\uddff\ud835\uddf2\ud835\uddfb\ud835\uddf0\ud835\uddf2": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddff\ud835\ude02\ud835\uddf9\ud835\uddf2\ud835\ude00": [88, 90], "\ud835\uddb3\ud835\uddc1\ud835\uddbe": [88, 90], "\ud835\uddbf\ud835\uddc8\ud835\uddc5\ud835\uddc5\ud835\uddc8\ud835\uddd0\ud835\uddc2\ud835\uddc7\ud835\uddc0": [88, 90], "\ud835\uddc2\ud835\uddc7\ud835\uddbf\ud835\uddbe\ud835\uddcb\ud835\uddbe\ud835\uddc7\ud835\uddbc\ud835\uddbe": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcb\ud835\uddce\ud835\uddc5\ud835\uddbe\ud835\uddcc": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddba\ud835\uddcb\ud835\uddbe": [88, 90], "\ud835\uddbc\ud835\uddc8\ud835\uddc7\ud835\uddcc\ud835\uddc2\ud835\uddbd\ud835\uddbe\ud835\uddcb\ud835\uddbe\ud835\uddbd": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcf\ud835\uddba\ud835\uddc5\ud835\uddc2\ud835\uddbd": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddce\ud835\uddc7\ud835\uddbd\ud835\uddbe\ud835\uddcb": [88, 90], "\ud835\uddcd\ud835\uddc1\ud835\uddc2\ud835\uddcc": [88, 90], "\ud835\uddcd\ud835\uddc1\ud835\uddbe\ud835\uddc8\ud835\uddcb\ud835\uddd2": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc4e\ud835\udc65\ud835\udc56\ud835\udc5c\ud835\udc5a": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc56\ud835\udc5b\ud835\udc61\ud835\udc52\ud835\udc5f\ud835\udc5d\ud835\udc5f\ud835\udc52\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddba\ud835\uddc7": [88, 90], "\ud835\udc56\ud835\udc5b\ud835\udc53\ud835\udc52\ud835\udc5f\ud835\udc52\ud835\udc5b\ud835\udc50\ud835\udc52": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc5f\ud835\udc62\ud835\udc59\ud835\udc52": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbd\ud835\uddbe\ud835\uddbf\ud835\uddc2\ud835\uddc7\ud835\uddbe\ud835\uddbd": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddba\ud835\uddcc": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc9c": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddaf": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc57\ud835\udc62\ud835\udc5b\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [88, 90, 150, 151, 152, 163], "\ud835\udc56\ud835\udc5b\ud835\udc61\ud835\udc5f\ud835\udc5c\ud835\udc51\ud835\udc62\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [88, 90, 149, 152, 153, 154, 156, 159, 160, 161, 163, 164], "\ud835\udc0f\u2083": [88, 90], "\ud835\udc10\u2083": [88, 90], "\ud835\udc51\ud835\udc52\ud835\udc53\ud835\udc56\ud835\udc5b\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [88, 90], "\ud835\udc52\ud835\udc5e\ud835\udc62\ud835\udc4e\ud835\udc59": [88, 90, 157], "\ud835\udc61\ud835\udc52\ud835\udc5f\ud835\udc5a\ud835\udc60": [88, 90, 157], "\ud835\udc60\ud835\udc62\ud835\udc4f\ud835\udc60\ud835\udc61\ud835\udc56\ud835\udc61\ud835\udc62\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [88, 90, 157, 163, 164], "\ud835\udc0f\u2082": [88, 90, 163], "\ud835\udc31\u2082": [88, 90], "\ud835\udc32\u2082": [88, 90], "\ud835\udc10\u2082": [88, 90, 163], "\ud835\udc52\ud835\udc5e\ud835\udc62\ud835\udc4e\ud835\udc59\ud835\udc56\ud835\udc61\ud835\udc66": [88, 90, 158], "\ud835\udc50\ud835\udc5c\ud835\udc5a\ud835\udc5a\ud835\udc62\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc56\ud835\udc61\ud835\udc66": [88, 90, 158], "\ud835\udc31\u2081": [88, 90, 157, 158, 163, 164], "\ud835\udc32\u2081": [88, 90, 157, 158, 163, 164], "\ud835\udc56\ud835\udc5b\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc60\ud835\udc56\ud835\udc60\ud835\udc61\ud835\udc52\ud835\udc5b\ud835\udc50\ud835\udc66": [88, 90, 159, 160, 161, 163, 164], "\ud835\udcaf": [88, 90, 160, 161, 164], "\ud835\udc5a\ud835\udc5c\ud835\udc51\ud835\udc62\ud835\udc60": [88, 90, 162, 163, 164], "\ud835\udc5d\ud835\udc5c\ud835\udc5b\ud835\udc52\ud835\udc5b\ud835\udc60": [88, 90, 162, 163, 164], "\ud835\udc0f\u2081": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164], "\ud835\udc10\u2081": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 162, 163, 164], "\ud835\udc5d\ud835\udc5f\ud835\udc5c\ud835\udc5c\ud835\udc53": [88, 90, 163, 164], "\ud835\udc4f\ud835\udc66": [88, 90, 163, 164], "\ud835\udc5f\ud835\udc52\ud835\udc53\ud835\udc62\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [88, 90], "\ud835\udc63\ud835\udc4e\ud835\udc5f\ud835\udc56\ud835\udc4e\ud835\udc4f\ud835\udc59\ud835\udc52": [88, 90, 163, 164], "\ud835\udef7": [88, 90, 163, 164], "\ud835\uddf2\ud835\uddf9\ud835\uddee\ud835\uddef\ud835\uddfc\ud835\uddff\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [88, 90], "\ud835\ude00\ud835\uddf2\ud835\uddfe\ud835\ude02\ud835\uddf2\ud835\uddfb\ud835\uddf0\ud835\uddf2": [88, 90], "\ud835\udde7\ud835\uddf5\ud835\uddf2": [88, 90], "\ud835\uddfb\ud835\uddee\ud835\ude01\ud835\ude02\ud835\uddff\ud835\uddee\ud835\uddf9": [88, 90], "\ud835\uddfb\ud835\ude02\ud835\uddfa\ud835\uddef\ud835\uddf2\ud835\uddff\ud835\ude00": [88, 90], "\ud835\uddfd\ud835\uddf2\ud835\uddee\ud835\uddfb\ud835\uddfc": [88, 90], "\ud835\uddee\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa\ud835\ude00": [88, 90], "\ud835\udddc\ud835\uddfb\ud835\uddf3\ud835\uddfc\ud835\uddff\ud835\uddfa\ud835\uddee\ud835\uddf9": [88, 90], "\ud835\uddf1\ud835\uddf2\ud835\uddf3\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [88, 90], "\ud835\uddfc\ud835\uddf3": [88, 90], "\ud835\uddfb\ud835\ude02\ud835\uddfa\ud835\uddef\ud835\uddf2\ud835\uddff": [88, 90], "\ud835\uddd4\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udcaf\u2081": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc34\u2081": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc9c\u2081": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udfe2": [88, 90], "\ud835\ude2a\ud835\ude34": [88, 90, 163, 164], "\ud835\ude22": [88, 90], "\ud835\ude2f\ud835\ude22\ud835\ude35\ud835\ude36\ud835\ude33\ud835\ude22\ud835\ude2d": [88, 90], "\ud835\ude2f\ud835\ude36\ud835\ude2e\ud835\ude23\ud835\ude26\ud835\ude33": [88, 90], "\ud835\uddc2\ud835\uddc7\ud835\uddbc\ud835\uddc5\ud835\uddce\ud835\uddbd\ud835\uddbe\ud835\uddbd": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc9\ud835\uddc8\ud835\uddcc\ud835\uddcd\ud835\uddce\ud835\uddc5\ud835\uddba\ud835\uddcd\ud835\uddbe\ud835\uddbd": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddff\ud835\ude02\ud835\uddf9\ud835\uddf2": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddba\ud835\uddc7\ud835\uddbd": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc43\u2081": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc34\u2082": [88, 90, 163, 164], "\ud835\udc9c\u2082": [88, 90, 163, 164], "\ud835\ude10\ud835\ude27": [88, 90], "\ud835\ude2f": [88, 90], "\ud835\ude35\ud835\ude29\ud835\ude26\ud835\ude2f": [88, 90], "\ud835\udc43\u2082": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc27\u2081": [88, 90], "\ud835\udc43\u2083": [88, 90, 149, 152, 157, 159, 160, 162, 163, 164], "\ud835\udfef": [88, 90], "\ud835\udc43\u2084": [88, 90, 163, 164], "\ud835\uddd7\ud835\uddf2\ud835\uddf3\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [88, 90], "\ud835\udc37\u2081": [88, 90], "\ud835\udc9f\u2081": [88, 90], "\ud835\ude1e\ud835\ude26": [88, 90], "\ud835\ude25\ud835\ude26\ud835\ude27\ud835\ude2a\ud835\ude2f\ud835\ude26": [88, 90], "\ud835\udfe3": [88, 90], "\ud835\ude35\ud835\ude30": [88, 90, 163], "\ud835\ude23\ud835\ude26": [88, 90], "\ud835\ude35\ud835\ude29\ud835\ude26": [88, 90], "\ud835\udfe4": [88, 90], "\ud835\udfe5": [88, 90], "\ud835\ude26\ud835\ude35\ud835\ude24": [88, 90], "\ud835\ude10\ud835\ude2f": [88, 90], "\ud835\ude30\ud835\ude35\ud835\ude29\ud835\ude26\ud835\ude33": [88, 90], "\ud835\ude38\ud835\ude30\ud835\ude33\ud835\ude25\ud835\ude34": [88, 90], "\ud835\ude35\ud835\ude29\ud835\ude2a\ud835\ude34": [88, 90], "\ud835\ude35\ud835\ude26\ud835\ude39\ud835\ude35": [88, 90], "\ud835\ude10": [88, 90], "\ud835\ude36\ud835\ude34\ud835\ude26": [88, 90], "\ud835\ude39": [88, 90], "\ud835\ude3a": [88, 90], "\ud835\ude25\ud835\ude26\ud835\ude2f\ud835\ude30\ud835\ude35\ud835\ude26": [88, 90], "\ud835\ude34\ud835\ude35\ud835\ude22\ud835\ude35\ud835\ude26\ud835\ude2e\ud835\ude26\ud835\ude2f\ud835\ude35": [88, 90], "\ud835\ude35\ud835\ude29\ud835\ude22\ud835\ude35": [88, 90], "\ud835\ude25\ud835\ude26\ud835\ude27\ud835\ude2a\ud835\ude2f\ud835\ude26\ud835\ude25": [88, 90], "\ud835\ude26\ud835\ude32\ud835\ude36\ud835\ude22\ud835\ude2d": [88, 90], "\ud835\udc43\u2085": [88, 90, 163, 164], "\ud835\udc43\u2086": [88, 90, 163, 164], "\ud835\udc43\u2087": [88, 90, 163, 164], "\ud835\udc43\u2088": [88, 90, 163], "\ud835\udc43\u2089": [88, 90, 163], "\ud835\udc43\u2081\u2080": [88, 90], "\ud835\udc43\u2081\u2081": [88, 90], "\ud835\udc43\u2081\u2082": [88, 90], "\ud835\udc43\u2081\u2083": [88, 90], "\ud835\udc43\u2081\u2084": [88, 90], "\ud835\udc43\u2081\u2085": [88, 90], "\ud835\udc43\u2081\u2086": [88, 90], "\ud835\udc43\u2081\u2087": [88, 90], "\ud835\udc43\u2081\u2088": [88, 90], "\ud835\uddf6\ud835\ude00": [88, 90], "\ud835\uddee": [88, 90], "\ud835\udc43\u2081\u2089": [88, 90], "\ud835\udc43\u2082\u2080": [88, 90], "\ud835\udff0": [88, 90], "\ud835\udc43\u2082\u2081": [88, 90], "\ud835\udc43\u2082\u2082": [88, 90], "\ud835\udc43\u2082\u2083": [88, 90], "\ud835\udc43\u2082\u2084": [88, 90], "\ud835\udc43\u2082\u2085": [88, 90], "\ud835\udc43\u2082\u2086": [88, 90], "\ud835\udc34\u2083": [88, 90], "\ud835\udc9c\u2083": [88, 90], "\ud835\ude2f\ud835\ude30\ud835\ude35": [88, 90], "\ud835\ude34\ud835\ude36\ud835\ude24\ud835\ude24\ud835\ude26\ud835\ude34\ud835\ude34\ud835\ude30\ud835\ude33": [88, 90], "\ud835\ude30\ud835\ude27": [88, 90], "\ud835\ude22\ud835\ude2f\ud835\ude3a": [88, 90], "\ud835\ude2a": [88, 90], "\ud835\ude26": [88, 90], "\ud835\ude38\ud835\ude26": [88, 90], "\ud835\ude29\ud835\ude22\ud835\ude37\ud835\ude26": [88, 90], "\ud835\ude27\ud835\ude30\ud835\ude33": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "\ud835\ude26\ud835\ude37\ud835\ude26\ud835\ude33\ud835\ude3a": [88, 90], "\ud835\udc43\u2082\u2087": [88, 90], "\ud835\uddfb\ud835\uddfc\ud835\ude01": [88, 90], "\ud835\uddf2\ud835\uddfe\ud835\ude02\ud835\uddee\ud835\uddf9": [88, 90], "\ud835\ude01\ud835\uddfc": [88, 90], "\ud835\udfec": [88, 90], "\ud835\udc43\u2082\u2088": [88, 90], "\ud835\udc43\u2082\u2089": [88, 90], "\ud835\udc43\u2083\u2080": [88, 90], "\ud835\udc34\u2084": [88, 90], "\ud835\udc9c\u2084": [88, 90], "\ud835\ude0b\ud835\ude2a\ud835\ude27\ud835\ude27\ud835\ude26\ud835\ude33\ud835\ude26\ud835\ude2f\ud835\ude35": [88, 90], "\ud835\ude2f\ud835\ude36\ud835\ude2e\ud835\ude23\ud835\ude26\ud835\ude33\ud835\ude34": [88, 90], "\ud835\ude2e\ud835\ude36\ud835\ude34\ud835\ude35": [88, 90], "\ud835\ude25\ud835\ude2a\ud835\ude27\ud835\ude27\ud835\ude26\ud835\ude33\ud835\ude26\ud835\ude2f\ud835\ude35": [88, 90], "\ud835\ude34\ud835\ude36\ud835\ude24\ud835\ude24\ud835\ude26\ud835\ude34\ud835\ude34\ud835\ude30\ud835\ude33\ud835\ude34": [88, 90], "\ud835\ude2a\ud835\ude27": [88, 90], "\ud835\ude2e": [88, 90], "\ud835\ude22\ud835\ude33\ud835\ude26": [88, 90], "\ud835\ude22\ud835\ude2f\ud835\ude25": [88, 90], "\ud835\ude0c\ud835\ude32\ud835\ude36\ud835\ude2a\ud835\ude37\ud835\ude22\ud835\ude2d\ud835\ude26\ud835\ude2f\ud835\ude35\ud835\ude2d\ud835\ude3a": [88, 90], "\ud835\udc43\u2083\u2081": [88, 90], "\ud835\udc43\u2083\u2082": [88, 90], "\ud835\udc27\u2084": [88, 90], "\ud835\udc26\u2082": [88, 90], "\ud835\udc43\u2083\u2083": [88, 90], "\ud835\udc43\u2083\u2084": [88, 90], "\ud835\udc43\u2083\u2085": [88, 90], "\ud835\udc43\u2083\u2086": [88, 90], "\ud835\udc43\u2083\u2087": [88, 90], "\ud835\udc43\u2083\u2088": [88, 90], "\ud835\udc43\u2083\u2089": [88, 90], "\ud835\udc43\u2084\u2080": [88, 90], "\ud835\udc43\u2084\u2081": [88, 90], "\ud835\udc43\u2084\u2082": [88, 90], "\ud835\udc43\u2084\u2083": [88, 90], "\ud835\udc43\u2084\u2084": [88, 90], "\ud835\udc43\u2084\u2085": [88, 90], "\ud835\udc43\u2084\u2086": [88, 90], "\ud835\udc43\u2084\u2087": [88, 90], "\ud835\udc43\u2084\u2088": [88, 90], "\ud835\udc43\u2084\u2089": [88, 90], "\ud835\udc43\u2085\u2080": [88, 90], "\ud835\udc43\u2085\u2081": [88, 90], "\ud835\udc43\u2085\u2082": [88, 90], "\ud835\udde3\ud835\uddff\ud835\uddfc\ud835\uddfc\ud835\uddf3": [88, 90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddef\ud835\ude06": [88, 90], "\ud835\uddf0\ud835\uddfc\ud835\uddfb\ud835\ude01\ud835\uddff\ud835\uddee\ud835\uddf1\ud835\uddf6\ud835\uddf0\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [88, 90], "\ud835\udddb\ud835\ude06\ud835\uddfd\ud835\uddfc\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\ude00\ud835\uddf6\ud835\ude00": [88, 90, 163, 164], "\ud835\udc3b\u2081": [88, 90, 163, 164], "\ud835\udc43\u2086\u2086": [88, 90], "\u210b\u2081": [88, 90, 163, 164], "\ud835\udff4": [88, 90], "\ud835\udc43\u2086\u2087": [88, 90], "\ud835\uddd7\ud835\uddf6\ud835\uddff\ud835\uddf2\ud835\uddf0\ud835\ude01": [88, 90], "\ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddfc\ud835\uddf3": [88, 90], "\ud835\udc43\u2086\u2088": [88, 90], "\ud835\udc43\u2086\u2089": [88, 90], "\ud835\udc43\u2087\u2080": [88, 90], "\ud835\udc43\u2087\u2081": [88, 90], "\ud835\udc43\u2087\u2082": [88, 90], "\ud835\udc43\u2087\u2083": [88, 90], "\ud835\udc43\u2087\u2084": [88, 90], "\ud835\udff1": [88, 90], "\ud835\ude01\ud835\uddf5\ud835\uddf2": [88, 90], "\ud835\uddfd\ud835\uddff\ud835\uddf6\ud835\uddfb\ud835\uddf0\ud835\uddf6\ud835\uddfd\ud835\uddf9\ud835\uddf2": [88, 90], "\ud835\uddfa\ud835\uddee\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\uddfa\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddf0\ud835\uddee\ud835\uddf9": [88, 90], "\ud835\uddf6\ud835\uddfb\ud835\uddf1\ud835\ude02\ud835\uddf0\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [88, 90], "\ud835\ude00\ud835\uddf0\ud835\uddf5\ud835\uddf2\ud835\uddfa\ud835\uddee": [88, 90], "\ud835\udc34\u2086": [88, 90], "\ud835\udc9c\u2086": [88, 90], "\ud835\ude13\ud835\ude26\ud835\ude35": [88, 90], "\ud835\ude17": [88, 90], "\ud835\ude31\ud835\ude33\ud835\ude30\ud835\ude31\ud835\ude26\ud835\ude33\ud835\ude35\ud835\ude3a": [88, 90], "\ud835\ude31\ud835\ude26\ud835\ude33\ud835\ude35\ud835\ude22\ud835\ude2a\ud835\ude2f\ud835\ude2a\ud835\ude2f\ud835\ude28": [88, 90], "\ud835\ude1a\ud835\ude36\ud835\ude31\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude26": [88, 90], "\ud835\ude16": [88, 90], "\ud835\ude35\ud835\ude33\ud835\ude36\ud835\ude26": [88, 90, 163, 164], "\ud835\ude34\ud835\ude36\ud835\ude31\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude26": [88, 90], "\ud835\ude38\ud835\ude29\ud835\ude26\ud835\ude2f\ud835\ude26\ud835\ude37\ud835\ude26\ud835\ude33": [88, 90], "\ud835\ude22\ud835\ude2d\ud835\ude34\ud835\ude30": [88, 90], "\ud835\ude1b\ud835\ude29\ud835\ude26\ud835\ude2f": [88, 90], "\ud835\udc43\u2087\u2085": [88, 90], "\ud835\udc27\u2085": [88, 90], "\ud835\udc0f\u2084": [88, 90], "\ud835\udc26\u2083": [88, 90], "\ud835\ude00\ud835\ude06\ud835\ude00\ud835\ude01\ud835\uddf2\ud835\uddfa": [88, 90], "\ud835\uddfb": [88, 90], "\ud835\udde5\ud835\uddf2\ud835\uddf0\ud835\ude02\ud835\uddff\ud835\ude00\ud835\uddf6\ud835\ude03\ud835\uddf2": [88, 90], "\ud835\uddf1\ud835\uddf2\ud835\uddf3\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00": [88, 90], "report_tao_2006_the_peano_axioms_proof_enus_plaintext": 89, "therefor": [89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "qed": [89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "prop": [89, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "p65": 89, "hyp": [89, 163, 164], "report_tao_2006_the_peano_axioms_proof_enus_unicod": 90, "\ud835\uddc2\ud835\uddcc": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbb\ud835\uddd2": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddee\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddba": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6\ud835\uddce\ud835\uddc5\ud835\uddba": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcc\ud835\uddcd\ud835\uddba\ud835\uddcd\ud835\uddbe\ud835\uddc6\ud835\uddbe\ud835\uddc7\ud835\uddcd": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc2\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddcb\ud835\uddc9\ud835\uddcb\ud835\uddbe\ud835\uddcd\ud835\uddbe\ud835\uddbd": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbf\ud835\uddcb\ud835\uddc8\ud835\uddc6": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcd\ud835\uddc1\ud835\uddba\ud835\uddcd": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddba\ud835\uddd1\ud835\uddc2\ud835\uddc8\ud835\uddc6": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddb3\ud835\uddc1\ud835\uddbe\ud835\uddcb\ud835\uddbe\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddbe": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcd\ud835\uddc1\ud835\uddbe": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcb\ud835\uddce\ud835\uddc5\ud835\uddbe": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc2\ud835\uddcd": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbf\ud835\uddc8\ud835\uddc5\ud835\uddc5\ud835\uddc8\ud835\uddd0\ud835\uddcc": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddfd": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddf1\ud835\uddf2\ud835\uddf3": 90, "\ud835\uddc2\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddcb\ud835\uddc9\ud835\uddcb\ud835\uddbe\ud835\uddcd\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc8\ud835\uddbf": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbd\ud835\uddbe\ud835\uddbf\ud835\uddc2\ud835\uddc7\ud835\uddc2\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [90, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6": [90, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163], "\ud835\uddb3\ud835\uddc1\ud835\uddc2\ud835\uddcc": [90, 163, 164], "\ud835\uddc1\ud835\uddd2\ud835\uddc9\ud835\uddc8\ud835\uddcd\ud835\uddc1\ud835\uddbe\ud835\uddcc\ud835\uddc2\ud835\uddcc": [90, 163, 164], "\ud835\uddbe\ud835\uddc5\ud835\uddba\ud835\uddbb\ud835\uddc8\ud835\uddcb\ud835\uddba\ud835\uddcd\ud835\uddbe\ud835\uddbd": [90, 163, 164], "\ud835\udc43\u2086\u2085": 90, "\ud835\uddf5\ud835\ude06\ud835\uddfd": [90, 163, 164], "section": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "model": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "target": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "instanci": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "effect": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "expos": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "automat": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "access": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141], "universe_of_discours": [95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 139, 140], "echo": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "compose_paragraph_proof": [95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 140], "overridden": [95, 97, 99, 101, 103, 105, 113, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136], "compos": [95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 140], "bool": [95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 139, 140], "infer_formula": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141], "current": [95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 113, 114, 122, 124, 126, 129, 130, 131, 132, 134, 135, 136, 140], "verify_arg": [95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 140], "verifi": [95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 140], "compat": [95, 97, 99, 101, 103, 105, 113, 115, 117, 119, 121, 123, 125], "otherwis": [95, 97, 99, 101, 103, 105, 113, 115, 117, 119, 121, 123, 125], "mandatori": [96, 98, 100, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 122, 124, 126, 129, 131, 135], "implic": [96, 129, 131, 135, 163, 164], "nameset": [96, 98, 100, 102, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 137, 139, 141], "biconditional_elimination_1": [97, 98, 147], "acronym": [97, 99, 101, 103, 105, 113, 139], "be1": 97, "p_iff_q": [97, 98, 99, 100, 102, 147, 148], "arg": [98, 100, 102, 104, 106, 118, 120, 128, 133, 137, 141], "biconditional_elimination_2": [99, 100, 148], "ber": 99, "biconditional_introduct": [101, 102, 149], "bi": [101, 149], "q_implies_p": [101, 102, 149], "conjunction_elimination_1": [103, 104, 150], "cel": 103, "p_land_q": [103, 105, 113], "kwarg": [103, 140], "p_and_q": [104, 106, 150, 151], "conjunction_elimination_2": [105, 106, 151], "cer": [105, 113], "base": [107, 109, 111, 115, 139], "result": [107, 108, 109, 110, 111, 112, 115, 116, 121, 123, 125, 130, 132, 134, 136, 140], "correct": [107, 109, 111, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "formulastat": [107, 117, 119], "disjunction_introduction_1": [109, 110, 153], "disjunction_introduction_2": [111, 112, 154], "double_negation_elimin": [113, 114, 155], "not_not_p": [113, 114, 155], "replac": 117, "q_equal_r": 118, "inconsistency_introduction_1": [121, 122, 159, 163], "not_p": [121, 122, 124, 126, 131, 159, 163], "condit": [122, 124, 126], "inconsistency_introduction_3": [125, 126, 161], "p_neq_p": [125, 126, 161], "proof_by_contradiction_1": [130, 131, 163], "not_p_hypothesi": [130, 131, 163], "tn": [130, 132, 134, 136], "hypothet": 131, "proof_by_contradiction_2": [132, 133, 164], "x_neq_y_hypothesi": [132, 133, 164], "systemat": 132, "verif": [132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "doubt": 132, "still": 132, "wrong": 132, "proof_by_refutation_1": [134, 135, 165], "p_hypothesi": [134, 135], "dashed_nam": 139, "cross_reference_axiom": 139, "axiomdeclar": 139, "cross_reference_definit": 139, "definitiondeclar": 139, "cross_reference_formula": 139, "cross_reference_inference_rul": 139, "ir": 139, "cross_reference_rel": 139, "cross_reference_simple_objct": 139, "objct": 139, "simpleobjct": 139, "cross_reference_symbolic_objct": 139, "theoreticalobject": 139, "cross_reference_theori": 139, "abridged_nam": 139, "explicit_nam": 139, "declare_formula": 139, "lock_variable_scop": 139, "shortcut": 139, "state": 139, "declare_free_vari": 139, "freevari": 139, "declare_theori": 139, "extended_theori": 139, "extended_theory_limit": 139, "is_theory_foundation_system": 139, "elaborate_formula": 139, "get_symbol_max_index": 139, "highest": 139, "int": 139, "unabridg": [139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "inference_rul": [139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "index_symbol": 139, "unindex": 139, "identifi": 139, "styledtext": 139, "abridg": 139, "simple_objct": 139, "relationdict": 139, "directli": 139, "avail": 139, "comment": 139, "expect": 139, "yield": 139, "lock": 139, "extens": 139, "expressli": 139, "overrid": 140, "comput": 140, "those": 140, "compli": 140, "simplest": 142, "wai": 142, "insert": 142, "pip": 144, "download": 144, "create_univers": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "basic": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "o1": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "o2": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164], "o3": [146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 162, 163], "r1": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162], "signal_proposit": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163], "r2": [146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 162], "dummi": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "necessari": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163], "theory_axiom": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "proposition_of_interest": [146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "interest": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "html": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "\ud835\udcb0\u2082": 146, "\ud835\udc62\ud835\udc5b\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc60\ud835\udc52": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc5c\ud835\udc53": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc50\ud835\udc5c\ud835\udc62\ud835\udc5f\ud835\udc60\ud835\udc52": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc61\u210e\ud835\udc52\ud835\udc5c\ud835\udc5f\ud835\udc66": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc52\ud835\udc59\ud835\udc4e\ud835\udc4f\ud835\udc5c\ud835\udc5f\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc60\ud835\udc52\ud835\udc5e\ud835\udc62\ud835\udc52\ud835\udc5b\ud835\udc50\ud835\udc52": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\ude0b\ud835\ude36\ud835\ude2e\ud835\ude2e\ud835\ude3a": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\ude22\ud835\ude39\ud835\ude2a\ud835\ude30\ud835\ude2e": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\ude25\ud835\ude26\ud835\ude2e\ud835\ude30\ud835\ude2f\ud835\ude34\ud835\ude35\ud835\ude33\ud835\ude22\ud835\ude35\ud835\ude2a\ud835\ude30\ud835\ude2f": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "\ud835\ude31\ud835\ude36\ud835\ude33\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude26\ud835\ude34": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "\ud835\udc5f\u2081": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162], "\ud835\udc5c\u2081": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc5c\u2082": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164], "\ud835\udc5f\u2082": [146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 162], "\ud835\udc5c\u2083": [146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 162, 163], "\ud835\uddea\ud835\uddee\ud835\uddff\ud835\uddfb\ud835\uddf6\ud835\uddfb\ud835\uddf4": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\u2081": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udda1\ud835\uddd2": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbd\ud835\uddbe\ud835\uddcc\ud835\uddc2\ud835\uddc0\ud835\uddc7": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc9\ud835\uddce\ud835\uddc7\ud835\uddbc\ud835\uddcd\ud835\uddc2\ud835\uddc5\ud835\uddc2\ud835\uddc8\ud835\uddce\ud835\uddcc": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddba\ud835\uddcc\ud835\uddcc\ud835\uddce\ud835\uddcb\ud835\uddbe\ud835\uddcc": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcc\ud835\uddd2\ud835\uddc7\ud835\uddcd\ud835\uddba\ud835\uddbc\ud835\uddcd\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddc5": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbc\ud835\uddc8\ud835\uddcb\ud835\uddcb\ud835\uddbe\ud835\uddbc\ud835\uddcd\ud835\uddc7\ud835\uddbe\ud835\uddcc\ud835\uddcc": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcd\ud835\uddc1\ud835\uddbe\ud835\uddc8\ud835\uddcb\ud835\uddc2\ud835\uddbe\ud835\uddcc": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbb\ud835\uddce\ud835\uddcd": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbd\ud835\uddc8\ud835\uddbe\ud835\uddcc": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc7\ud835\uddc8\ud835\uddcd": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc9\ud835\uddbe\ud835\uddcb\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddba\ud835\uddc7\ud835\uddd2": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcc\ud835\uddbe\ud835\uddc6\ud835\uddba\ud835\uddc7\ud835\uddcd\ud835\uddc2\ud835\uddbc": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcf\ud835\uddbe\ud835\uddcb\ud835\uddc2\ud835\uddbf\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddce\ud835\uddcc\ud835\uddba\ud835\uddc0\ud835\uddbe": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc2\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddcb\ud835\uddc9\ud835\uddcb\ud835\uddbe\ud835\uddcd": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc7\ud835\uddba\ud835\uddcd\ud835\uddce\ud835\uddcb\ud835\uddba\ud835\uddc5": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbc\ud835\uddc8\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddc7\ud835\uddcd": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc2": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbe": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbc\ud835\uddcb\ud835\uddc2\ud835\uddcd\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddc5\ud835\uddc5\ud835\uddd2": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbd\ud835\uddbe\ud835\uddc9\ud835\uddbe\ud835\uddc7\ud835\uddbd\ud835\uddbe\ud835\uddc7\ud835\uddcd": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc8\ud835\uddc7": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcd\ud835\uddcb\ud835\uddba\ud835\uddc7\ud835\uddcc\ud835\uddc5\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc9\ud835\uddbe\ud835\uddcb\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6\ud835\uddbe\ud835\uddbd": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddba\ud835\uddce\ud835\uddcd\ud835\uddc1\ud835\uddc8\ud835\uddcb": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc8\ud835\uddcb": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddc5\ud835\uddba\ud835\uddc7\ud835\uddc0\ud835\uddce\ud835\uddba\ud835\uddc0\ud835\uddbe": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddcd\ud835\uddc8": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6\ud835\uddce\ud835\uddc5\ud835\uddba\ud835\uddbe": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "\ud835\udc4e\ud835\udc4f\ud835\udc60\ud835\udc5c\ud835\udc5f\ud835\udc5d\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": 146, "\ud835\uddba\ud835\uddc9\ud835\uddc9\ud835\uddc5\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": 146, "warn": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "warning1": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "assur": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "semant": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "critic": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "depend": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "translat": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "author": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "Will": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "\ud835\udcb0\u2084": 147, "\ud835\udc4f\ud835\udc56\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b\ud835\udc4e\ud835\udc59": [147, 148, 149], "\ud835\udc52\ud835\udc59\ud835\udc56\ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [147, 148, 150, 151, 155], "u3": 147, "\ud835\udcb0\u2086": 148, "u5": 148, "biconditional_infer": 149, "\ud835\udcb0\u2088": 149, "u7": 149, "\ud835\udcb0\u2081\u2080": 150, "u9": 150, "\ud835\udcb0\u2081\u2082": 151, "u11": 151, "\ud835\udcb0\u2081\u2084": 152, "u13": 152, "\ud835\udcb0\u2081\u2086": 153, "\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc57\ud835\udc62\ud835\udc5b\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [153, 154], "\ud835\uddc0\ud835\uddc2\ud835\uddcf\ud835\uddbe\ud835\uddc7": [153, 154], "u15": 153, "\ud835\udcb0\u2081\u2088": 154, "u17": 154, "\ud835\udcb0\u2082\u2080": 155, "\ud835\udc51\ud835\udc5c\ud835\udc62\ud835\udc4f\ud835\udc59\ud835\udc52": [155, 156], "\ud835\udc5b\ud835\udc52\ud835\udc54\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [155, 156], "u19": 155, "\ud835\udcb0\u2082\u2082": 156, "u21": 156, "proposition_x_equal_i": 157, "dummy_proposit": 157, "et": 157, "\ud835\udcb0\u2082\u2086": 157, "u25": 157, "\ud835\udcb0\u2082\u2084": 158, "u23": 158, "t2": [159, 160, 161, 164], "could": [159, 160, 161, 164], "\ud835\udcb0\u2083\u2080": 159, "\ud835\udce3": [159, 163], "\ud835\udcaf\u2082": [159, 160, 161, 164], "\ud835\uddd0\ud835\uddc1\ud835\uddc2\ud835\uddbc\ud835\uddc1": [159, 161, 163], "u29": 159, "p_eq_q": 160, "eq": [160, 164], "p_neq_q": 160, "\ud835\udcb0\u2083\u2082": 160, "u31": 160, "\ud835\udcb0\u2083\u2084": 161, "\ud835\udda8\ud835\uddc7\ud835\uddbc": 161, "u33": 161, "\ud835\udcb0\u2083\u2086": 162, "u35": 162, "ground": 163, "z": 163, "child_theori": [163, 164], "h_inconsist": [163, 164], "child_stat": [163, 164], "\ud835\udcb0\u2084\u2080": 163, "\ud835\ude26\ud835\ude34\ud835\ude35\ud835\ude22\ud835\ude23\ud835\ude2d\ud835\ude2a\ud835\ude34\ud835\ude29": 163, "\ud835\ude34\ud835\ude30\ud835\ude2e\ud835\ude26": 163, "\ud835\ude28\ud835\ude33\ud835\ude30\ud835\ude36\ud835\ude2f\ud835\ude25": 163, "\ud835\ude31\ud835\ude33\ud835\ude30\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude2a\ud835\ude35\ud835\ude2a\ud835\ude30\ud835\ude2f\ud835\ude34": 163, "\ud835\udc53\u2081": [163, 164], "\ud835\udc33\u2081": 163, "\ud835\ude09\ud835\ude3a": [163, 164], "\ud835\ude29\ud835\ude3a\ud835\ude31\ud835\ude30\ud835\ude35\ud835\ude29\ud835\ude26\ud835\ude34\ud835\ude2a\ud835\ude34": [163, 164], "\ud835\ude22\ud835\ude34\ud835\ude34\ud835\ude36\ud835\ude2e\ud835\ude26": [163, 164], "\u2082": [163, 164], "\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc61\ud835\udc5f\ud835\udc4e\ud835\udc51\ud835\udc56\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [163, 164], "u39": 163, "f1": [163, 164], "z1": 163, "warning2": [163, 164], "f_o1_eq_f_02": 164, "\ud835\udcb0\u2084\u2082": 164, "u41": 164, "sample_proof_by_refutation_1": 165, "py": [165, 166, 168], "sample_proof_by_refutation_2": 166, "sample_variable_substitut": 168, "live": 169}, "objects": {"punctilious": [[95, 0, 1, "", "AbsorptionDeclaration"], [96, 0, 1, "", "AbsorptionInclusion"], [97, 0, 1, "", "BiconditionalElimination1Declaration"], [98, 0, 1, "", "BiconditionalElimination1Inclusion"], [99, 0, 1, "", "BiconditionalElimination2Declaration"], [100, 0, 1, "", "BiconditionalElimination2Inclusion"], [101, 0, 1, "", "BiconditionalIntroductionDeclaration"], [102, 0, 1, "", "BiconditionalIntroductionInclusion"], [103, 0, 1, "", "ConjunctionElimination1Declaration"], [104, 0, 1, "", "ConjunctionElimination1Inclusion"], [105, 0, 1, "", "ConjunctionElimination2Declaration"], [106, 0, 1, "", "ConjunctionElimination2Inclusion"], [107, 0, 1, "", "ConjunctionIntroductionDeclaration"], [108, 0, 1, "", "ConjunctionIntroductionInclusion"], [109, 0, 1, "", "DisjunctionIntroduction1Declaration"], [110, 0, 1, "", "DisjunctionIntroduction1Inclusion"], [111, 0, 1, "", "DisjunctionIntroduction2Declaration"], [112, 0, 1, "", "DisjunctionIntroduction2Inclusion"], [113, 0, 1, "", "DoubleNegationEliminationDeclaration"], [114, 0, 1, "", "DoubleNegationEliminationInclusion"], [115, 0, 1, "", "DoubleNegationIntroductionDeclaration"], [116, 0, 1, "", "DoubleNegationIntroductionInclusion"], [117, 0, 1, "", "EqualTermsSubstitutionDeclaration"], [118, 0, 1, "", "EqualTermsSubstitutionInclusion"], [119, 0, 1, "", "EqualityCommutativityDeclaration"], [120, 0, 1, "", "EqualityCommutativityInclusion"], [121, 0, 1, "", "InconsistencyIntroduction1Declaration"], [122, 0, 1, "", "InconsistencyIntroduction1Inclusion"], [123, 0, 1, "", "InconsistencyIntroduction2Declaration"], [124, 0, 1, "", "InconsistencyIntroduction2Inclusion"], [125, 0, 1, "", "InconsistencyIntroduction3Declaration"], [126, 0, 1, "", "InconsistencyIntroduction3Inclusion"], [127, 0, 1, "", "InferenceRuleDeclarationDict"], [128, 0, 1, "", "ModusPonensDeclaration"], [129, 0, 1, "", "ModusPonensInclusion"], [130, 0, 1, "", "ProofByContradiction1Declaration"], [131, 0, 1, "", "ProofByContradiction1Inclusion"], [132, 0, 1, "", "ProofByContradiction2Declaration"], [133, 0, 1, "", "ProofByContradiction2Inclusion"], [134, 0, 1, "", "ProofByRefutation1Declaration"], [135, 0, 1, "", "ProofByRefutation1Inclusion"], [136, 0, 1, "", "ProofByRefutation2Declaration"], [137, 0, 1, "", "ProofByRefutation2Inclusion"], [139, 0, 1, "", "UniverseOfDiscourse"], [140, 0, 1, "", "VariableSubstitutionDeclaration"], [141, 0, 1, "", "VariableSubstitutionInclusion"], [142, 3, 1, "", "create_universe_of_discourse"]], "punctilious.AbsorptionDeclaration": [[95, 1, 1, "", "compose_paragraph_proof"], [95, 1, 1, "", "infer_formula"], [95, 1, 1, "", "verify_args"]], "punctilious.AbsorptionInclusion": [[96, 1, 1, "", "infer_formula"], [96, 1, 1, "", "infer_statement"]], "punctilious.BiconditionalElimination1Declaration": [[97, 1, 1, "", "compose_paragraph_proof"], [97, 1, 1, "", "infer_formula"], [97, 1, 1, "", "verify_args"]], "punctilious.BiconditionalElimination1Inclusion": [[98, 1, 1, "", "infer_formula"], [98, 1, 1, "", "infer_statement"]], "punctilious.BiconditionalElimination2Declaration": [[99, 1, 1, "", "compose_paragraph_proof"], [99, 1, 1, "", "infer_formula"], [99, 1, 1, "", "verify_args"]], "punctilious.BiconditionalElimination2Inclusion": [[100, 1, 1, "", "infer_formula"], [100, 1, 1, "", "infer_statement"]], "punctilious.BiconditionalIntroductionDeclaration": [[101, 1, 1, "", "compose_paragraph_proof"], [101, 1, 1, "", "infer_formula"], [101, 1, 1, "", "verify_args"]], "punctilious.BiconditionalIntroductionInclusion": [[102, 1, 1, "", "infer_formula"], [102, 1, 1, "", "infer_statement"]], "punctilious.ConjunctionElimination1Declaration": [[103, 1, 1, "", "compose_paragraph_proof"], [103, 1, 1, "", "infer_formula"], [103, 1, 1, "", "verify_args"]], "punctilious.ConjunctionElimination1Inclusion": [[104, 1, 1, "", "infer_formula"], [104, 1, 1, "", "infer_statement"]], "punctilious.ConjunctionElimination2Declaration": [[105, 1, 1, "", "compose_paragraph_proof"], [105, 1, 1, "", "infer_formula"], [105, 1, 1, "", "verify_args"]], "punctilious.ConjunctionElimination2Inclusion": [[106, 1, 1, "", "infer_formula"], [106, 1, 1, "", "infer_statement"]], "punctilious.ConjunctionIntroductionDeclaration": [[107, 1, 1, "", "compose_paragraph_proof"], [107, 1, 1, "", "infer_formula"], [107, 1, 1, "", "verify_args"]], "punctilious.ConjunctionIntroductionInclusion": [[108, 1, 1, "", "infer_formula"], [108, 1, 1, "", "infer_statement"]], "punctilious.DisjunctionIntroduction1Declaration": [[109, 1, 1, "", "compose_paragraph_proof"], [109, 1, 1, "", "infer_formula"], [109, 1, 1, "", "verify_args"]], "punctilious.DisjunctionIntroduction1Inclusion": [[110, 1, 1, "", "infer_formula"], [110, 1, 1, "", "infer_statement"]], "punctilious.DisjunctionIntroduction2Declaration": [[111, 1, 1, "", "compose_paragraph_proof"], [111, 1, 1, "", "infer_formula"], [111, 1, 1, "", "verify_args"]], "punctilious.DisjunctionIntroduction2Inclusion": [[112, 1, 1, "", "infer_formula"], [112, 1, 1, "", "infer_statement"]], "punctilious.DoubleNegationEliminationDeclaration": [[113, 1, 1, "", "compose_paragraph_proof"], [113, 1, 1, "", "infer_formula"], [113, 1, 1, "", "verify_args"]], "punctilious.DoubleNegationEliminationInclusion": [[114, 1, 1, "", "infer_formula"], [114, 1, 1, "", "infer_statement"]], "punctilious.DoubleNegationIntroductionDeclaration": [[115, 1, 1, "", "compose_paragraph_proof"], [115, 1, 1, "", "infer_formula"], [115, 1, 1, "", "verify_args"]], "punctilious.DoubleNegationIntroductionInclusion": [[116, 1, 1, "", "infer_formula"], [116, 1, 1, "", "infer_statement"]], "punctilious.EqualTermsSubstitutionDeclaration": [[117, 1, 1, "", "compose_paragraph_proof"], [117, 1, 1, "", "infer_formula"], [117, 1, 1, "", "verify_args"]], "punctilious.EqualTermsSubstitutionInclusion": [[118, 1, 1, "", "infer_formula"], [118, 1, 1, "", "infer_statement"]], "punctilious.EqualityCommutativityDeclaration": [[119, 1, 1, "", "compose_paragraph_proof"], [119, 1, 1, "", "infer_formula"], [119, 1, 1, "", "verify_args"]], "punctilious.EqualityCommutativityInclusion": [[120, 1, 1, "", "infer_formula"], [120, 1, 1, "", "infer_statement"]], "punctilious.InconsistencyIntroduction1Declaration": [[121, 1, 1, "", "compose_paragraph_proof"], [121, 1, 1, "", "infer_formula"], [121, 1, 1, "", "verify_args"]], "punctilious.InconsistencyIntroduction1Inclusion": [[122, 1, 1, "", "infer_formula"], [122, 1, 1, "", "infer_statement"]], "punctilious.InconsistencyIntroduction2Declaration": [[123, 1, 1, "", "compose_paragraph_proof"], [123, 1, 1, "", "infer_formula"], [123, 1, 1, "", "verify_args"]], "punctilious.InconsistencyIntroduction2Inclusion": [[124, 1, 1, "", "infer_formula"], [124, 1, 1, "", "infer_statement"]], "punctilious.InconsistencyIntroduction3Declaration": [[125, 1, 1, "", "compose_paragraph_proof"], [125, 1, 1, "", "infer_formula"], [125, 1, 1, "", "verify_args"]], "punctilious.InconsistencyIntroduction3Inclusion": [[126, 1, 1, "", "infer_formula"], [126, 1, 1, "", "infer_statement"]], "punctilious.ModusPonensDeclaration": [[128, 1, 1, "", "compose_paragraph_proof"], [128, 1, 1, "", "infer_formula"], [128, 1, 1, "", "verify_args"]], "punctilious.ModusPonensInclusion": [[129, 1, 1, "", "infer_formula"], [129, 1, 1, "", "infer_statement"]], "punctilious.ProofByContradiction1Declaration": [[130, 1, 1, "", "compose_paragraph_proof"], [130, 1, 1, "", "infer_formula"], [130, 1, 1, "", "verify_args"]], "punctilious.ProofByContradiction1Inclusion": [[131, 1, 1, "", "infer_formula"], [131, 1, 1, "", "infer_statement"]], "punctilious.ProofByContradiction2Declaration": [[132, 1, 1, "", "compose_paragraph_proof"], [132, 1, 1, "", "infer_formula"], [132, 1, 1, "", "verify_args"]], "punctilious.ProofByContradiction2Inclusion": [[133, 1, 1, "", "infer_formula"], [133, 1, 1, "", "infer_statement"]], "punctilious.ProofByRefutation1Declaration": [[134, 1, 1, "", "compose_paragraph_proof"], [134, 1, 1, "", "infer_formula"], [134, 1, 1, "", "verify_args"]], "punctilious.ProofByRefutation1Inclusion": [[135, 1, 1, "", "infer_formula"], [135, 1, 1, "", "infer_statement"]], "punctilious.ProofByRefutation2Declaration": [[136, 1, 1, "", "compose_paragraph_proof"], [136, 1, 1, "", "infer_formula"], [136, 1, 1, "", "verify_args"]], "punctilious.ProofByRefutation2Inclusion": [[137, 1, 1, "", "infer_formula"], [137, 1, 1, "", "infer_statement"]], "punctilious.UniverseOfDiscourse": [[139, 1, 1, "", "cross_reference_axiom"], [139, 1, 1, "", "cross_reference_definition"], [139, 1, 1, "", "cross_reference_formula"], [139, 1, 1, "", "cross_reference_inference_rule"], [139, 1, 1, "", "cross_reference_relation"], [139, 1, 1, "", "cross_reference_simple_objct"], [139, 1, 1, "", "cross_reference_symbolic_objct"], [139, 1, 1, "", "cross_reference_theory"], [139, 1, 1, "", "declare_axiom"], [139, 1, 1, "", "declare_definition"], [139, 1, 1, "", "declare_formula"], [139, 1, 1, "", "declare_free_variable"], [139, 1, 1, "", "declare_theory"], [139, 1, 1, "", "f"], [139, 1, 1, "", "get_symbol_max_index"], [139, 2, 1, "", "i"], [139, 1, 1, "", "index_symbol"], [139, 2, 1, "", "inference_rules"], [139, 2, 1, "", "o"], [139, 2, 1, "", "r"], [139, 2, 1, "", "relations"], [139, 2, 1, "", "simple_objcts"], [139, 1, 1, "", "t"], [139, 1, 1, "", "take_note"], [139, 1, 1, "", "v"]], "punctilious.VariableSubstitutionDeclaration": [[140, 1, 1, "", "compose_paragraph_proof"], [140, 1, 1, "", "infer_formula"], [140, 1, 1, "", "verify_args"]], "punctilious.VariableSubstitutionInclusion": [[141, 1, 1, "", "infer_formula"], [141, 1, 1, "", "infer_statement"]], "": [[86, 4, 0, "-", "theory"]], "theory": [[86, 0, 1, "", "Tao2006ThePeanoAxioms"]], "theory.Tao2006ThePeanoAxioms": [[86, 1, 1, "", "develop_theory"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"]}, "titleterms": {"my": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "tag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "absorpt": [0, 63, 146], "With": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "bicondit": [1, 2, 3, 64, 65, 66, 147, 148, 149], "elimin": [1, 2, 6, 7, 12, 44, 64, 65, 67, 68, 72, 147, 148, 150, 151, 155], "1": [1, 6, 10, 17, 23, 25, 64, 67, 70, 76, 80, 82, 147, 150, 153, 159, 163, 165], "2": [2, 7, 11, 18, 24, 26, 65, 68, 71, 77, 81, 83, 148, 151, 154, 160, 164, 166], "introduct": [3, 8, 10, 11, 13, 17, 18, 19, 44, 50, 66, 69, 70, 71, 73, 76, 77, 78, 149, 152, 153, 154, 156, 159, 160, 161], "class": [4, 86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "concept": [5, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 91], "conjunct": [6, 7, 8, 67, 68, 69, 150, 151, 152], "declar": [9, 55], "disjunct": [10, 11, 70, 71, 153, 154], "doubl": [12, 13, 72, 73, 155, 156], "negat": [12, 13, 72, 73, 155, 156], "equal": [14, 15, 74, 75, 157, 158], "term": [14, 74, 157], "substitut": [14, 31, 74, 84, 157, 168], "commut": [15, 75, 158], "inclus": [16, 56], "inconsist": [17, 18, 19, 76, 77, 78, 159, 160, 161], "3": [19, 78, 161], "infer": [20, 49], "rule": [20, 44, 49, 50], "math": [21, 35, 38, 42, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 91, 92, 93], "modu": [22, 79, 162], "ponen": [22, 79, 162], "proof": [23, 24, 25, 26, 35, 58, 80, 81, 82, 83, 87, 88, 89, 90, 163, 164, 165, 166], "contradict": [23, 24, 80, 81, 163, 164], "refut": [25, 26, 82, 83, 165, 166], "python": [27, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "sampl": [28, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "overview": 29, "univers": [30, 62], "discours": [30, 62], "variabl": [31, 47, 84, 168], "back": 32, "matter": [32, 34], "tabl": [32, 34, 41, 42, 91, 92, 93, 94], "content": [32, 34, 41, 42, 91, 92, 93, 94], "bibliographi": [33, 49, 51, 52, 61], "front": 34, "about": 35, "punctili": [35, 36, 37, 40, 41, 49, 59], "so": 35, "why": 35, "develop": [35, 38], "yet": 35, "anoth": 35, "assist": 35, "contribut": 36, "The": [37, 86], "project": 37, "roadmap": 38, "formal": 38, "theori": [38, 61, 93], "human": 38, "friendli": 38, "support": [39, 49], "axiom": [43, 86], "definit": [44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "list": [44, 49, 50, 52, 53], "well": [44, 50], "known": [44, 50], "quot": [44, 50, 69, 70, 71, 73, 77, 78], "formula": [45, 46], "statement": [46, 60], "free": 47, "hypothesi": 48, "synonym": 49, "nativ": 49, "see": [49, 50], "also": [49, 50], "i": 51, "meta": 52, "object": [52, 54, 55, 56, 57], "notat": 53, "form": 53, "creation": 54, "paragraph": 58, "style": 58, "relat": 59, "kei": 59, "properti": 59, "data": 59, "model": 59, "elabor": 61, "sequenc": 61, "tao": 85, "2006": 85, "book": 85, "chapter": 85, "peano": 86, "implement": 86, "report": [86, 87, 88, 89, 90], "plaintext": [87, 89], "en": [87, 88, 89, 90], "u": [87, 88, 89, 90], "without": [87, 88], "script": [87, 88, 89, 90], "unicod": [88, 90], "inference_rul": 92, "absorptiondeclar": 95, "absorptioninclus": 96, "biconditionalelimination1declar": 97, "biconditionalelimination1inclus": 98, "biconditionalelimination2declar": 99, "biconditionalelimination2inclus": 100, "biconditionalintroductiondeclar": 101, "biconditionalintroductioninclus": 102, "conjunctionelimination1declar": 103, "conjunctionelimination1inclus": 104, "conjunctionelimination2declar": 105, "conjunctionelimination2inclus": 106, "conjunctionintroductiondeclar": 107, "conjunctionintroductioninclus": 108, "disjunctionintroduction1declar": 109, "disjunctionintroduction1inclus": 110, "disjunctionintroduction2declar": 111, "disjunctionintroduction2inclus": 112, "doublenegationeliminationdeclar": 113, "doublenegationeliminationinclus": 114, "doublenegationintroductiondeclar": 115, "doublenegationintroductioninclus": 116, "equaltermssubstitutiondeclar": 117, "equaltermssubstitutioninclus": 118, "equalitycommutativitydeclar": 119, "equalitycommutativityinclus": 120, "inconsistencyintroduction1declar": 121, "inconsistencyintroduction1inclus": 122, "inconsistencyintroduction2declar": 123, "inconsistencyintroduction2inclus": 124, "inconsistencyintroduction3declar": 125, "inconsistencyintroduction3inclus": 126, "inferenceruledeclarationdict": 127, "modusponensdeclar": 128, "modusponensinclus": 129, "proofbycontradiction1declar": 130, "proofbycontradiction1inclus": 131, "proofbycontradiction2declar": 132, "proofbycontradiction2inclus": 133, "proofbyrefutation1declar": 134, "proofbyrefutation1inclus": 135, "proofbyrefutation2declar": 136, "proofbyrefutation2inclus": 137, "universeofdiscours": 139, "variablesubstitutiondeclar": 140, "variablesubstitutioninclus": 141, "create_universe_of_discours": 142, "function": 143, "instal": 144, "prerequisit": 145, "usag": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "code": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169], "output": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "sourc": 169, "repositori": 169}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 58}, "alltitles": {"Back matter": [[32, "back-matter"]], "Table of contents": [[32, null], [34, null], [41, "table-of-contents"], [42, null], [91, null], [92, null], [93, null], [94, null]], "Bibliography": [[33, "id1"], [49, "bibliography"], [51, "bibliography"], [61, "bibliography"], [52, "bibliography"]], "Front matter": [[34, "front-matter"]], "About punctilious": [[35, "about-punctilious"]], "So why develop yet another math proof assistant?": [[35, "so-why-develop-yet-another-math-proof-assistant"]], "Contributing to punctilious": [[36, "contributing-to-punctilious"]], "The punctilious project": [[37, "the-punctilious-project"]], "Roadmap": [[38, "roadmap"]], "Formalization of Math theories": [[38, "formalization-of-math-theories"]], "Human-friendliness": [[38, "human-friendliness"]], "Developer-friendliness": [[38, "developer-friendliness"]], "Support": [[39, "support"]], "Punctilious": [[40, "punctilious"]], "punctilious": [[41, "punctilious"]], "Math": [[42, "math"]], "axiom": [[43, "axiom"]], "elimination-rule": [[44, "elimination-rule"]], "Definition": [[44, "definition"], [47, "definition"], [48, "definition"], [49, "definition"], [50, "definition"], [51, "definition"], [53, "definition"], [54, "definition"], [55, "definition"], [56, "definition"], [58, "definition"], [59, "definition"], [61, "definition"], [62, "definition"], [63, "definition"], [64, "definition"], [65, "definition"], [66, "definition"], [67, "definition"], [68, "definition"], [69, "definition"], [70, "definition"], [71, "definition"], [72, "definition"], [73, "definition"], [74, "definition"], [75, "definition"], [76, "definition"], [77, "definition"], [78, "definition"], [79, "definition"], [80, "definition"], [81, "definition"], [82, "definition"], [83, "definition"], [84, "definition"], [52, "definition"]], "List of well-known introduction-rules": [[44, "list-of-well-known-introduction-rules"], [50, "list-of-well-known-introduction-rules"]], "Quotes": [[44, "quotes"], [50, "quotes"], [69, "quotes"], [70, "quotes"], [71, "quotes"], [73, "quotes"], [77, "quotes"], [78, "quotes"]], "formula": [[45, "formula"]], "formula-statement": [[46, "formula-statement"]], "free-variable": [[47, "free-variable"]], "hypothesis": [[48, "hypothesis"]], "inference-rule": [[49, "inference-rule"]], "Synonyms": [[49, "synonyms"]], "List of inference-rules natively supported by punctilious": [[49, "list-of-inference-rules-natively-supported-by-punctilious"]], "See also": [[49, "see-also"], [50, "see-also"]], "introduction-rule": [[50, "introduction-rule"]], "is-a": [[51, "is-a"]], "List": [[53, "list"], [52, "list"]], "notation-form": [[53, "notation-form"]], "object-creation": [[54, "object-creation"]], "object-declaration": [[55, "object-declaration"]], "object-inclusion": [[56, "object-inclusion"]], "object": [[57, "object"]], "paragraph-proof (proof-style)": [[58, "paragraph-proof-proof-style"]], "relation": [[59, "relation"]], "Key properties": [[59, "key-properties"]], "Punctilious data model": [[59, "punctilious-data-model"]], "statement": [[60, "statement"]], "theory-elaboration-sequence": [[61, "theory-elaboration-sequence"]], "universe-of-discourse": [[62, "universe-of-discourse"]], "absorption (math concept)": [[63, "absorption-math-concept"]], "biconditional-elimination-1 (math concept)": [[64, "biconditional-elimination-1-math-concept"]], "biconditional-elimination-2 (math concept)": [[65, "biconditional-elimination-2-math-concept"]], "biconditional-introduction (math concept)": [[66, "biconditional-introduction-math-concept"]], "conjunction-elimination-1 (math concept)": [[67, "conjunction-elimination-1-math-concept"]], "conjunction-elimination-2 (math concept)": [[68, "conjunction-elimination-2-math-concept"]], "conjunction-introduction (math concept)": [[69, "conjunction-introduction-math-concept"]], "disjunction-introduction-1 (math concept)": [[70, "disjunction-introduction-1-math-concept"]], "disjunction-introduction-2 (math concept)": [[71, "disjunction-introduction-2-math-concept"]], "double-negation-elimination (math concept)": [[72, "double-negation-elimination-math-concept"]], "double-negation-introduction (math concept)": [[73, "double-negation-introduction-math-concept"]], "equal-terms-substitution (math concept)": [[74, "equal-terms-substitution-math-concept"]], "equality-commutativity (math concept)": [[75, "equality-commutativity-math-concept"]], "inconsistency-introduction-1 (math concept)": [[76, "inconsistency-introduction-1-math-concept"]], "inconsistency-introduction-2 (math concept)": [[77, "inconsistency-introduction-2-math-concept"]], "inconsistency-introduction-3 (math concept)": [[78, "inconsistency-introduction-3-math-concept"]], "modus-ponens (math concept)": [[79, "modus-ponens-math-concept"]], "proof-by-contradiction-1 (math concept)": [[80, "proof-by-contradiction-1-math-concept"]], "proof-by-contradiction-2 (math concept)": [[81, "proof-by-contradiction-2-math-concept"]], "proof-by-refutation-1 (math concept)": [[82, "proof-by-refutation-1-math-concept"]], "proof-by-refutation-2 (math concept)": [[83, "proof-by-refutation-2-math-concept"]], "variable-substitution (math concept)": [[84, "variable-substitution-math-concept"]], "Tao 2006": [[85, "tao-2006"]], "Book chapters": [[85, null]], "The Peano axioms": [[86, "the-peano-axioms"]], "Python class": [[86, "module-theory"]], "Python implementation": [[86, "python-implementation"]], "Reports": [[86, null]], "Plaintext EN-US without proofs": [[87, "plaintext-en-us-without-proofs"]], "Python script": [[87, "python-script"], [88, "python-script"], [89, "python-script"], [90, "python-script"]], "Report": [[87, "report"], [88, "report"], [89, "report"], [90, "report"]], "Unicode EN-US without proofs": [[88, "unicode-en-us-without-proofs"]], "Plaintext EN-US with proofs": [[89, "plaintext-en-us-with-proofs"]], "Unicode EN-US with proofs": [[90, "unicode-en-us-with-proofs"]], "Math concept": [[91, "math-concept"]], "Math inference_rule": [[92, "math-inference-rule"]], "Math theory": [[93, "math-theory"]], "Python": [[94, "python"]], "Python classes": [[138, "python-classes"]], "Class": [[138, null]], "Python functions": [[143, "python-functions"]], "Function": [[143, null]], "Installation": [[144, "installation"]], "Prerequisites": [[145, "prerequisites"]], "absorption (python sample)": [[146, "id1"]], "Usage": [[146, "usage"], [147, "usage"], [148, "usage"], [149, "usage"], [150, "usage"], [151, "usage"], [152, "usage"], [153, "usage"], [154, "usage"], [155, "usage"], [156, "usage"], [157, "usage"], [158, "usage"], [159, "usage"], [160, "usage"], [161, "usage"], [162, "usage"], [163, "usage"], [164, "usage"], [165, "usage"], [166, "usage"], [168, "usage"]], "Sample code": [[146, "sample-code"], [147, "sample-code"], [148, "sample-code"], [149, "sample-code"], [150, "sample-code"], [151, "sample-code"], [152, "sample-code"], [153, "sample-code"], [154, "sample-code"], [155, "sample-code"], [156, "sample-code"], [157, "sample-code"], [158, "sample-code"], [159, "sample-code"], [160, "sample-code"], [161, "sample-code"], [162, "sample-code"], [163, "sample-code"], [164, "sample-code"], [165, "sample-code"], [166, "sample-code"], [168, "sample-code"]], "Code output": [[146, "code-output"], [147, "code-output"], [148, "code-output"], [149, "code-output"], [150, "code-output"], [151, "code-output"], [152, "code-output"], [153, "code-output"], [154, "code-output"], [155, "code-output"], [156, "code-output"], [157, "code-output"], [158, "code-output"], [159, "code-output"], [160, "code-output"], [161, "code-output"], [162, "code-output"], [163, "code-output"], [164, "code-output"], [165, "code-output"], [166, "code-output"], [168, "code-output"]], "biconditional-elimination-1 (python sample)": [[147, "id1"]], "biconditional-elimination-2 (python sample)": [[148, "id1"]], "biconditional-introduction (python sample)": [[149, "id1"]], "conjunction-elimination-1 (python sample)": [[150, "id1"]], "conjunction-elimination-2 (python sample)": [[151, "id1"]], "conjunction-introduction (python sample)": [[152, "id1"]], "disjunction-introduction-1 (python sample)": [[153, "id1"]], "disjunction-introduction-2 (python sample)": [[154, "id1"]], "double-negation-elimination (python sample)": [[155, "id1"]], "double-negation-introduction (python sample)": [[156, "id1"]], "equal-terms-substitution (python sample)": [[157, "id1"]], "equality-commutativity (python sample)": [[158, "id1"]], "inconsistency-introduction-1 (python sample)": [[159, "id1"]], "inconsistency-introduction-2 (python sample)": [[160, "id1"]], "inconsistency-introduction-3 (python sample)": [[161, "id1"]], "modus-ponens (python sample)": [[162, "id1"]], "proof-by-contradiction-1 (python sample)": [[163, "id1"]], "proof-by-contradiction-2 (python sample)": [[164, "id1"]], "Python samples": [[167, "python-samples"]], "Sample": [[167, null]], "Source code repository": [[169, "source-code"]], "My tags: absorption": [[0, "my-tags-absorption"]], "With this tag": [[0, null], [1, null], [2, null], [3, null], [4, null], [5, null], [6, null], [7, null], [8, null], [9, null], [10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [30, null], [31, null]], "My tags: biconditional-elimination-1": [[1, "my-tags-biconditional-elimination-1"]], "My tags: biconditional-elimination-2": [[2, "my-tags-biconditional-elimination-2"]], "My tags: biconditional-introduction": [[3, "my-tags-biconditional-introduction"]], "My tags: class": [[4, "my-tags-class"]], "My tags: concept": [[5, "my-tags-concept"]], "My tags: conjunction-elimination-1": [[6, "my-tags-conjunction-elimination-1"]], "My tags: conjunction-elimination-2": [[7, "my-tags-conjunction-elimination-2"]], "My tags: conjunction-introduction": [[8, "my-tags-conjunction-introduction"]], "My tags: declaration": [[9, "my-tags-declaration"]], "My tags: disjunction-introduction-1": [[10, "my-tags-disjunction-introduction-1"]], "My tags: disjunction-introduction-2": [[11, "my-tags-disjunction-introduction-2"]], "My tags: double-negation-elimination": [[12, "my-tags-double-negation-elimination"]], "My tags: double-negation-introduction": [[13, "my-tags-double-negation-introduction"]], "My tags: equal-terms-substitution": [[14, "my-tags-equal-terms-substitution"]], "My tags: equality-commutativity": [[15, "my-tags-equality-commutativity"]], "My tags: inclusion": [[16, "my-tags-inclusion"]], "My tags: inconsistency-introduction-1": [[17, "my-tags-inconsistency-introduction-1"]], "My tags: inconsistency-introduction-2": [[18, "my-tags-inconsistency-introduction-2"]], "My tags: inconsistency-introduction-3": [[19, "my-tags-inconsistency-introduction-3"]], "My tags: inference-rule": [[20, "my-tags-inference-rule"]], "My tags: math": [[21, "my-tags-math"]], "My tags: modus-ponens": [[22, "my-tags-modus-ponens"]], "My tags: proof-by-contradiction-1": [[23, "my-tags-proof-by-contradiction-1"]], "My tags: proof-by-contradiction-2": [[24, "my-tags-proof-by-contradiction-2"]], "My tags: proof-by-refutation-1": [[25, "my-tags-proof-by-refutation-1"]], "My tags: proof-by-refutation-2": [[26, "my-tags-proof-by-refutation-2"]], "My tags: python": [[27, "my-tags-python"]], "My tags: sample": [[28, "my-tags-sample"]], "Tags overview": [[29, "tags-overview"]], "Tags": [[29, null]], "My tags: universe-of-discourse": [[30, "my-tags-universe-of-discourse"]], "My tags: variable-substitution": [[31, "my-tags-variable-substitution"]], "meta-object": [[52, "meta-object"]], "AbsorptionDeclaration (python class)": [[95, "absorptiondeclaration-python-class"]], "AbsorptionInclusion (python class)": [[96, "absorptioninclusion-python-class"]], "BiconditionalElimination1Declaration (python class)": [[97, "biconditionalelimination1declaration-python-class"]], "BiconditionalElimination1Inclusion (python class)": [[98, "biconditionalelimination1inclusion-python-class"]], "BiconditionalElimination2Declaration (python class)": [[99, "biconditionalelimination2declaration-python-class"]], "BiconditionalElimination2Inclusion (python class)": [[100, "biconditionalelimination2inclusion-python-class"]], "BiconditionalIntroductionDeclaration (python class)": [[101, "biconditionalintroductiondeclaration-python-class"]], "BiconditionalIntroductionInclusion (python class)": [[102, "biconditionalintroductioninclusion-python-class"]], "ConjunctionElimination1Declaration (python class)": [[103, "conjunctionelimination1declaration-python-class"]], "ConjunctionElimination1Inclusion (python class)": [[104, "conjunctionelimination1inclusion-python-class"]], "ConjunctionElimination2Declaration (python class)": [[105, "conjunctionelimination2declaration-python-class"]], "ConjunctionElimination2Inclusion (python class)": [[106, "conjunctionelimination2inclusion-python-class"]], "ConjunctionIntroductionDeclaration (python class)": [[107, "conjunctionintroductiondeclaration-python-class"]], "ConjunctionIntroductionInclusion (python class)": [[108, "conjunctionintroductioninclusion-python-class"]], "DisjunctionIntroduction1Declaration (python class)": [[109, "disjunctionintroduction1declaration-python-class"]], "DisjunctionIntroduction1Inclusion (python class)": [[110, "disjunctionintroduction1inclusion-python-class"]], "DisjunctionIntroduction2Declaration (python class)": [[111, "disjunctionintroduction2declaration-python-class"]], "DisjunctionIntroduction2Inclusion (python class)": [[112, "disjunctionintroduction2inclusion-python-class"]], "DoubleNegationEliminationDeclaration (python class)": [[113, "doublenegationeliminationdeclaration-python-class"]], "DoubleNegationEliminationInclusion (python class)": [[114, "doublenegationeliminationinclusion-python-class"]], "DoubleNegationIntroductionDeclaration (python class)": [[115, "doublenegationintroductiondeclaration-python-class"]], "DoubleNegationIntroductionInclusion (python class)": [[116, "doublenegationintroductioninclusion-python-class"]], "EqualTermsSubstitutionDeclaration (python class)": [[117, "equaltermssubstitutiondeclaration-python-class"]], "EqualTermsSubstitutionInclusion (python class)": [[118, "equaltermssubstitutioninclusion-python-class"]], "EqualityCommutativityDeclaration (python class)": [[119, "equalitycommutativitydeclaration-python-class"]], "EqualityCommutativityInclusion (python class)": [[120, "equalitycommutativityinclusion-python-class"]], "InconsistencyIntroduction1Declaration (python class)": [[121, "inconsistencyintroduction1declaration-python-class"]], "InconsistencyIntroduction1Inclusion (python class)": [[122, "inconsistencyintroduction1inclusion-python-class"]], "InconsistencyIntroduction2Declaration (python class)": [[123, "inconsistencyintroduction2declaration-python-class"]], "InconsistencyIntroduction2Inclusion (python class)": [[124, "inconsistencyintroduction2inclusion-python-class"]], "InconsistencyIntroduction3Declaration (python class)": [[125, "inconsistencyintroduction3declaration-python-class"]], "InconsistencyIntroduction3Inclusion (python class)": [[126, "inconsistencyintroduction3inclusion-python-class"]], "InferenceRuleDeclarationDict (python class)": [[127, "inferenceruledeclarationdict-python-class"]], "ModusPonensDeclaration (python class)": [[128, "modusponensdeclaration-python-class"]], "ModusPonensInclusion (python class)": [[129, "modusponensinclusion-python-class"]], "ProofByContradiction1Declaration (python class)": [[130, "proofbycontradiction1declaration-python-class"]], "ProofByContradiction1Inclusion (python class)": [[131, "proofbycontradiction1inclusion-python-class"]], "ProofByContradiction2Declaration (python class)": [[132, "proofbycontradiction2declaration-python-class"]], "ProofByContradiction2Inclusion (python class)": [[133, "proofbycontradiction2inclusion-python-class"]], "ProofByRefutation1Declaration (python class)": [[134, "proofbyrefutation1declaration-python-class"]], "ProofByRefutation1Inclusion (python class)": [[135, "proofbyrefutation1inclusion-python-class"]], "ProofByRefutation2Declaration (python class)": [[136, "proofbyrefutation2declaration-python-class"]], "ProofByRefutation2Inclusion (python class)": [[137, "proofbyrefutation2inclusion-python-class"]], "UniverseOfDiscourse (python class)": [[139, "universeofdiscourse-python-class"]], "VariableSubstitutionDeclaration (python class)": [[140, "variablesubstitutiondeclaration-python-class"]], "VariableSubstitutionInclusion (python class)": [[141, "variablesubstitutioninclusion-python-class"]], "create_universe_of_discourse": [[142, "create-universe-of-discourse"]], "proof-by-refutation-1 (python sample)": [[165, "id1"]], "proof-by-refutation-2 (python sample)": [[166, "id1"]], "variable-substitution (python sample)": [[168, "id1"]]}, "indexentries": {"absorptiondeclaration (class in punctilious)": [[95, "punctilious.AbsorptionDeclaration"]], "compose_paragraph_proof() (punctilious.absorptiondeclaration method)": [[95, "punctilious.AbsorptionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.absorptiondeclaration method)": [[95, "punctilious.AbsorptionDeclaration.infer_formula"]], "verify_args() (punctilious.absorptiondeclaration method)": [[95, "punctilious.AbsorptionDeclaration.verify_args"]], "absorptioninclusion (class in punctilious)": [[96, "punctilious.AbsorptionInclusion"]], "infer_formula() (punctilious.absorptioninclusion method)": [[96, "punctilious.AbsorptionInclusion.infer_formula"]], "infer_statement() (punctilious.absorptioninclusion method)": [[96, "punctilious.AbsorptionInclusion.infer_statement"]], "biconditionalelimination1declaration (class in punctilious)": [[97, "punctilious.BiconditionalElimination1Declaration"]], "compose_paragraph_proof() (punctilious.biconditionalelimination1declaration method)": [[97, "punctilious.BiconditionalElimination1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.biconditionalelimination1declaration method)": [[97, "punctilious.BiconditionalElimination1Declaration.infer_formula"]], "verify_args() (punctilious.biconditionalelimination1declaration method)": [[97, "punctilious.BiconditionalElimination1Declaration.verify_args"]], "biconditionalelimination1inclusion (class in punctilious)": [[98, "punctilious.BiconditionalElimination1Inclusion"]], "infer_formula() (punctilious.biconditionalelimination1inclusion method)": [[98, "punctilious.BiconditionalElimination1Inclusion.infer_formula"]], "infer_statement() (punctilious.biconditionalelimination1inclusion method)": [[98, "punctilious.BiconditionalElimination1Inclusion.infer_statement"]], "biconditionalelimination2declaration (class in punctilious)": [[99, "punctilious.BiconditionalElimination2Declaration"]], "compose_paragraph_proof() (punctilious.biconditionalelimination2declaration method)": [[99, "punctilious.BiconditionalElimination2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.biconditionalelimination2declaration method)": [[99, "punctilious.BiconditionalElimination2Declaration.infer_formula"]], "verify_args() (punctilious.biconditionalelimination2declaration method)": [[99, "punctilious.BiconditionalElimination2Declaration.verify_args"]], "biconditionalelimination2inclusion (class in punctilious)": [[100, "punctilious.BiconditionalElimination2Inclusion"]], "infer_formula() (punctilious.biconditionalelimination2inclusion method)": [[100, "punctilious.BiconditionalElimination2Inclusion.infer_formula"]], "infer_statement() (punctilious.biconditionalelimination2inclusion method)": [[100, "punctilious.BiconditionalElimination2Inclusion.infer_statement"]], "biconditionalintroductiondeclaration (class in punctilious)": [[101, "punctilious.BiconditionalIntroductionDeclaration"]], "compose_paragraph_proof() (punctilious.biconditionalintroductiondeclaration method)": [[101, "punctilious.BiconditionalIntroductionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.biconditionalintroductiondeclaration method)": [[101, "punctilious.BiconditionalIntroductionDeclaration.infer_formula"]], "verify_args() (punctilious.biconditionalintroductiondeclaration method)": [[101, "punctilious.BiconditionalIntroductionDeclaration.verify_args"]], "biconditionalintroductioninclusion (class in punctilious)": [[102, "punctilious.BiconditionalIntroductionInclusion"]], "infer_formula() (punctilious.biconditionalintroductioninclusion method)": [[102, "punctilious.BiconditionalIntroductionInclusion.infer_formula"]], "infer_statement() (punctilious.biconditionalintroductioninclusion method)": [[102, "punctilious.BiconditionalIntroductionInclusion.infer_statement"]], "conjunctionelimination1declaration (class in punctilious)": [[103, "punctilious.ConjunctionElimination1Declaration"]], "compose_paragraph_proof() (punctilious.conjunctionelimination1declaration method)": [[103, "punctilious.ConjunctionElimination1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.conjunctionelimination1declaration method)": [[103, "punctilious.ConjunctionElimination1Declaration.infer_formula"]], "verify_args() (punctilious.conjunctionelimination1declaration method)": [[103, "punctilious.ConjunctionElimination1Declaration.verify_args"]], "conjunctionelimination1inclusion (class in punctilious)": [[104, "punctilious.ConjunctionElimination1Inclusion"]], "infer_formula() (punctilious.conjunctionelimination1inclusion method)": [[104, "punctilious.ConjunctionElimination1Inclusion.infer_formula"]], "infer_statement() (punctilious.conjunctionelimination1inclusion method)": [[104, "punctilious.ConjunctionElimination1Inclusion.infer_statement"]], "conjunctionelimination2declaration (class in punctilious)": [[105, "punctilious.ConjunctionElimination2Declaration"]], "compose_paragraph_proof() (punctilious.conjunctionelimination2declaration method)": [[105, "punctilious.ConjunctionElimination2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.conjunctionelimination2declaration method)": [[105, "punctilious.ConjunctionElimination2Declaration.infer_formula"]], "verify_args() (punctilious.conjunctionelimination2declaration method)": [[105, "punctilious.ConjunctionElimination2Declaration.verify_args"]], "conjunctionelimination2inclusion (class in punctilious)": [[106, "punctilious.ConjunctionElimination2Inclusion"]], "infer_formula() (punctilious.conjunctionelimination2inclusion method)": [[106, "punctilious.ConjunctionElimination2Inclusion.infer_formula"]], "infer_statement() (punctilious.conjunctionelimination2inclusion method)": [[106, "punctilious.ConjunctionElimination2Inclusion.infer_statement"]], "conjunctionintroductiondeclaration (class in punctilious)": [[107, "punctilious.ConjunctionIntroductionDeclaration"]], "compose_paragraph_proof() (punctilious.conjunctionintroductiondeclaration method)": [[107, "punctilious.ConjunctionIntroductionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.conjunctionintroductiondeclaration method)": [[107, "punctilious.ConjunctionIntroductionDeclaration.infer_formula"]], "verify_args() (punctilious.conjunctionintroductiondeclaration method)": [[107, "punctilious.ConjunctionIntroductionDeclaration.verify_args"]], "conjunctionintroductioninclusion (class in punctilious)": [[108, "punctilious.ConjunctionIntroductionInclusion"]], "infer_formula() (punctilious.conjunctionintroductioninclusion method)": [[108, "punctilious.ConjunctionIntroductionInclusion.infer_formula"]], "infer_statement() (punctilious.conjunctionintroductioninclusion method)": [[108, "punctilious.ConjunctionIntroductionInclusion.infer_statement"]], "disjunctionintroduction1declaration (class in punctilious)": [[109, "punctilious.DisjunctionIntroduction1Declaration"]], "compose_paragraph_proof() (punctilious.disjunctionintroduction1declaration method)": [[109, "punctilious.DisjunctionIntroduction1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.disjunctionintroduction1declaration method)": [[109, "punctilious.DisjunctionIntroduction1Declaration.infer_formula"]], "verify_args() (punctilious.disjunctionintroduction1declaration method)": [[109, "punctilious.DisjunctionIntroduction1Declaration.verify_args"]], "disjunctionintroduction1inclusion (class in punctilious)": [[110, "punctilious.DisjunctionIntroduction1Inclusion"]], "infer_formula() (punctilious.disjunctionintroduction1inclusion method)": [[110, "punctilious.DisjunctionIntroduction1Inclusion.infer_formula"]], "infer_statement() (punctilious.disjunctionintroduction1inclusion method)": [[110, "punctilious.DisjunctionIntroduction1Inclusion.infer_statement"]], "disjunctionintroduction2declaration (class in punctilious)": [[111, "punctilious.DisjunctionIntroduction2Declaration"]], "compose_paragraph_proof() (punctilious.disjunctionintroduction2declaration method)": [[111, "punctilious.DisjunctionIntroduction2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.disjunctionintroduction2declaration method)": [[111, "punctilious.DisjunctionIntroduction2Declaration.infer_formula"]], "verify_args() (punctilious.disjunctionintroduction2declaration method)": [[111, "punctilious.DisjunctionIntroduction2Declaration.verify_args"]], "disjunctionintroduction2inclusion (class in punctilious)": [[112, "punctilious.DisjunctionIntroduction2Inclusion"]], "infer_formula() (punctilious.disjunctionintroduction2inclusion method)": [[112, "punctilious.DisjunctionIntroduction2Inclusion.infer_formula"]], "infer_statement() (punctilious.disjunctionintroduction2inclusion method)": [[112, "punctilious.DisjunctionIntroduction2Inclusion.infer_statement"]], "doublenegationeliminationdeclaration (class in punctilious)": [[113, "punctilious.DoubleNegationEliminationDeclaration"]], "compose_paragraph_proof() (punctilious.doublenegationeliminationdeclaration method)": [[113, "punctilious.DoubleNegationEliminationDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.doublenegationeliminationdeclaration method)": [[113, "punctilious.DoubleNegationEliminationDeclaration.infer_formula"]], "verify_args() (punctilious.doublenegationeliminationdeclaration method)": [[113, "punctilious.DoubleNegationEliminationDeclaration.verify_args"]], "doublenegationeliminationinclusion (class in punctilious)": [[114, "punctilious.DoubleNegationEliminationInclusion"]], "infer_formula() (punctilious.doublenegationeliminationinclusion method)": [[114, "punctilious.DoubleNegationEliminationInclusion.infer_formula"]], "infer_statement() (punctilious.doublenegationeliminationinclusion method)": [[114, "punctilious.DoubleNegationEliminationInclusion.infer_statement"]], "doublenegationintroductiondeclaration (class in punctilious)": [[115, "punctilious.DoubleNegationIntroductionDeclaration"]], "compose_paragraph_proof() (punctilious.doublenegationintroductiondeclaration method)": [[115, "punctilious.DoubleNegationIntroductionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.doublenegationintroductiondeclaration method)": [[115, "punctilious.DoubleNegationIntroductionDeclaration.infer_formula"]], "verify_args() (punctilious.doublenegationintroductiondeclaration method)": [[115, "punctilious.DoubleNegationIntroductionDeclaration.verify_args"]], "doublenegationintroductioninclusion (class in punctilious)": [[116, "punctilious.DoubleNegationIntroductionInclusion"]], "infer_formula() (punctilious.doublenegationintroductioninclusion method)": [[116, "punctilious.DoubleNegationIntroductionInclusion.infer_formula"]], "infer_statement() (punctilious.doublenegationintroductioninclusion method)": [[116, "punctilious.DoubleNegationIntroductionInclusion.infer_statement"]], "equaltermssubstitutiondeclaration (class in punctilious)": [[117, "punctilious.EqualTermsSubstitutionDeclaration"]], "compose_paragraph_proof() (punctilious.equaltermssubstitutiondeclaration method)": [[117, "punctilious.EqualTermsSubstitutionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.equaltermssubstitutiondeclaration method)": [[117, "punctilious.EqualTermsSubstitutionDeclaration.infer_formula"]], "verify_args() (punctilious.equaltermssubstitutiondeclaration method)": [[117, "punctilious.EqualTermsSubstitutionDeclaration.verify_args"]], "equaltermssubstitutioninclusion (class in punctilious)": [[118, "punctilious.EqualTermsSubstitutionInclusion"]], "infer_formula() (punctilious.equaltermssubstitutioninclusion method)": [[118, "punctilious.EqualTermsSubstitutionInclusion.infer_formula"]], "infer_statement() (punctilious.equaltermssubstitutioninclusion method)": [[118, "punctilious.EqualTermsSubstitutionInclusion.infer_statement"]], "equalitycommutativitydeclaration (class in punctilious)": [[119, "punctilious.EqualityCommutativityDeclaration"]], "compose_paragraph_proof() (punctilious.equalitycommutativitydeclaration method)": [[119, "punctilious.EqualityCommutativityDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.equalitycommutativitydeclaration method)": [[119, "punctilious.EqualityCommutativityDeclaration.infer_formula"]], "verify_args() (punctilious.equalitycommutativitydeclaration method)": [[119, "punctilious.EqualityCommutativityDeclaration.verify_args"]], "equalitycommutativityinclusion (class in punctilious)": [[120, "punctilious.EqualityCommutativityInclusion"]], "infer_formula() (punctilious.equalitycommutativityinclusion method)": [[120, "punctilious.EqualityCommutativityInclusion.infer_formula"]], "infer_statement() (punctilious.equalitycommutativityinclusion method)": [[120, "punctilious.EqualityCommutativityInclusion.infer_statement"]], "inconsistencyintroduction1declaration (class in punctilious)": [[121, "punctilious.InconsistencyIntroduction1Declaration"]], "compose_paragraph_proof() (punctilious.inconsistencyintroduction1declaration method)": [[121, "punctilious.InconsistencyIntroduction1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.inconsistencyintroduction1declaration method)": [[121, "punctilious.InconsistencyIntroduction1Declaration.infer_formula"]], "verify_args() (punctilious.inconsistencyintroduction1declaration method)": [[121, "punctilious.InconsistencyIntroduction1Declaration.verify_args"]], "inconsistencyintroduction1inclusion (class in punctilious)": [[122, "punctilious.InconsistencyIntroduction1Inclusion"]], "infer_formula() (punctilious.inconsistencyintroduction1inclusion method)": [[122, "punctilious.InconsistencyIntroduction1Inclusion.infer_formula"]], "infer_statement() (punctilious.inconsistencyintroduction1inclusion method)": [[122, "punctilious.InconsistencyIntroduction1Inclusion.infer_statement"]], "inconsistencyintroduction2declaration (class in punctilious)": [[123, "punctilious.InconsistencyIntroduction2Declaration"]], "compose_paragraph_proof() (punctilious.inconsistencyintroduction2declaration method)": [[123, "punctilious.InconsistencyIntroduction2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.inconsistencyintroduction2declaration method)": [[123, "punctilious.InconsistencyIntroduction2Declaration.infer_formula"]], "verify_args() (punctilious.inconsistencyintroduction2declaration method)": [[123, "punctilious.InconsistencyIntroduction2Declaration.verify_args"]], "inconsistencyintroduction2inclusion (class in punctilious)": [[124, "punctilious.InconsistencyIntroduction2Inclusion"]], "infer_formula() (punctilious.inconsistencyintroduction2inclusion method)": [[124, "punctilious.InconsistencyIntroduction2Inclusion.infer_formula"]], "infer_statement() (punctilious.inconsistencyintroduction2inclusion method)": [[124, "punctilious.InconsistencyIntroduction2Inclusion.infer_statement"]], "inconsistencyintroduction3declaration (class in punctilious)": [[125, "punctilious.InconsistencyIntroduction3Declaration"]], "compose_paragraph_proof() (punctilious.inconsistencyintroduction3declaration method)": [[125, "punctilious.InconsistencyIntroduction3Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.inconsistencyintroduction3declaration method)": [[125, "punctilious.InconsistencyIntroduction3Declaration.infer_formula"]], "verify_args() (punctilious.inconsistencyintroduction3declaration method)": [[125, "punctilious.InconsistencyIntroduction3Declaration.verify_args"]], "inconsistencyintroduction3inclusion (class in punctilious)": [[126, "punctilious.InconsistencyIntroduction3Inclusion"]], "infer_formula() (punctilious.inconsistencyintroduction3inclusion method)": [[126, "punctilious.InconsistencyIntroduction3Inclusion.infer_formula"]], "infer_statement() (punctilious.inconsistencyintroduction3inclusion method)": [[126, "punctilious.InconsistencyIntroduction3Inclusion.infer_statement"]], "inferenceruledeclarationdict (class in punctilious)": [[127, "punctilious.InferenceRuleDeclarationDict"]], "modusponensdeclaration (class in punctilious)": [[128, "punctilious.ModusPonensDeclaration"]], "compose_paragraph_proof() (punctilious.modusponensdeclaration method)": [[128, "punctilious.ModusPonensDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.modusponensdeclaration method)": [[128, "punctilious.ModusPonensDeclaration.infer_formula"]], "verify_args() (punctilious.modusponensdeclaration method)": [[128, "punctilious.ModusPonensDeclaration.verify_args"]], "modusponensinclusion (class in punctilious)": [[129, "punctilious.ModusPonensInclusion"]], "infer_formula() (punctilious.modusponensinclusion method)": [[129, "punctilious.ModusPonensInclusion.infer_formula"]], "infer_statement() (punctilious.modusponensinclusion method)": [[129, "punctilious.ModusPonensInclusion.infer_statement"]], "proofbycontradiction1declaration (class in punctilious)": [[130, "punctilious.ProofByContradiction1Declaration"]], "compose_paragraph_proof() (punctilious.proofbycontradiction1declaration method)": [[130, "punctilious.ProofByContradiction1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.proofbycontradiction1declaration method)": [[130, "punctilious.ProofByContradiction1Declaration.infer_formula"]], "verify_args() (punctilious.proofbycontradiction1declaration method)": [[130, "punctilious.ProofByContradiction1Declaration.verify_args"]], "proofbycontradiction1inclusion (class in punctilious)": [[131, "punctilious.ProofByContradiction1Inclusion"]], "infer_formula() (punctilious.proofbycontradiction1inclusion method)": [[131, "punctilious.ProofByContradiction1Inclusion.infer_formula"]], "infer_statement() (punctilious.proofbycontradiction1inclusion method)": [[131, "punctilious.ProofByContradiction1Inclusion.infer_statement"]], "proofbycontradiction2declaration (class in punctilious)": [[132, "punctilious.ProofByContradiction2Declaration"]], "compose_paragraph_proof() (punctilious.proofbycontradiction2declaration method)": [[132, "punctilious.ProofByContradiction2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.proofbycontradiction2declaration method)": [[132, "punctilious.ProofByContradiction2Declaration.infer_formula"]], "verify_args() (punctilious.proofbycontradiction2declaration method)": [[132, "punctilious.ProofByContradiction2Declaration.verify_args"]], "proofbycontradiction2inclusion (class in punctilious)": [[133, "punctilious.ProofByContradiction2Inclusion"]], "infer_formula() (punctilious.proofbycontradiction2inclusion method)": [[133, "punctilious.ProofByContradiction2Inclusion.infer_formula"]], "infer_statement() (punctilious.proofbycontradiction2inclusion method)": [[133, "punctilious.ProofByContradiction2Inclusion.infer_statement"]], "proofbyrefutation1declaration (class in punctilious)": [[134, "punctilious.ProofByRefutation1Declaration"]], "compose_paragraph_proof() (punctilious.proofbyrefutation1declaration method)": [[134, "punctilious.ProofByRefutation1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.proofbyrefutation1declaration method)": [[134, "punctilious.ProofByRefutation1Declaration.infer_formula"]], "verify_args() (punctilious.proofbyrefutation1declaration method)": [[134, "punctilious.ProofByRefutation1Declaration.verify_args"]], "proofbyrefutation1inclusion (class in punctilious)": [[135, "punctilious.ProofByRefutation1Inclusion"]], "infer_formula() (punctilious.proofbyrefutation1inclusion method)": [[135, "punctilious.ProofByRefutation1Inclusion.infer_formula"]], "infer_statement() (punctilious.proofbyrefutation1inclusion method)": [[135, "punctilious.ProofByRefutation1Inclusion.infer_statement"]], "proofbyrefutation2declaration (class in punctilious)": [[136, "punctilious.ProofByRefutation2Declaration"]], "compose_paragraph_proof() (punctilious.proofbyrefutation2declaration method)": [[136, "punctilious.ProofByRefutation2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.proofbyrefutation2declaration method)": [[136, "punctilious.ProofByRefutation2Declaration.infer_formula"]], "verify_args() (punctilious.proofbyrefutation2declaration method)": [[136, "punctilious.ProofByRefutation2Declaration.verify_args"]], "proofbyrefutation2inclusion (class in punctilious)": [[137, "punctilious.ProofByRefutation2Inclusion"]], "infer_formula() (punctilious.proofbyrefutation2inclusion method)": [[137, "punctilious.ProofByRefutation2Inclusion.infer_formula"]], "infer_statement() (punctilious.proofbyrefutation2inclusion method)": [[137, "punctilious.ProofByRefutation2Inclusion.infer_statement"]], "universeofdiscourse (class in punctilious)": [[139, "punctilious.UniverseOfDiscourse"]], "cross_reference_axiom() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.cross_reference_axiom"]], "cross_reference_definition() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.cross_reference_definition"]], "cross_reference_formula() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.cross_reference_formula"]], "cross_reference_inference_rule() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.cross_reference_inference_rule"]], "cross_reference_relation() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.cross_reference_relation"]], "cross_reference_simple_objct() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.cross_reference_simple_objct"]], "cross_reference_symbolic_objct() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.cross_reference_symbolic_objct"]], "cross_reference_theory() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.cross_reference_theory"]], "declare_axiom() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.declare_axiom"]], "declare_definition() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.declare_definition"]], "declare_formula() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.declare_formula"]], "declare_free_variable() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.declare_free_variable"]], "declare_theory() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.declare_theory"]], "f() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.f"]], "get_symbol_max_index() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.get_symbol_max_index"]], "i (punctilious.universeofdiscourse property)": [[139, "punctilious.UniverseOfDiscourse.i"]], "index_symbol() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.index_symbol"]], "inference_rules (punctilious.universeofdiscourse property)": [[139, "punctilious.UniverseOfDiscourse.inference_rules"]], "o (punctilious.universeofdiscourse property)": [[139, "punctilious.UniverseOfDiscourse.o"]], "r (punctilious.universeofdiscourse property)": [[139, "punctilious.UniverseOfDiscourse.r"]], "relations (punctilious.universeofdiscourse property)": [[139, "punctilious.UniverseOfDiscourse.relations"]], "simple_objcts (punctilious.universeofdiscourse property)": [[139, "punctilious.UniverseOfDiscourse.simple_objcts"]], "t() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.t"]], "take_note() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.take_note"]], "v() (punctilious.universeofdiscourse method)": [[139, "punctilious.UniverseOfDiscourse.v"]], "variablesubstitutiondeclaration (class in punctilious)": [[140, "punctilious.VariableSubstitutionDeclaration"]], "compose_paragraph_proof() (punctilious.variablesubstitutiondeclaration method)": [[140, "punctilious.VariableSubstitutionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.variablesubstitutiondeclaration method)": [[140, "punctilious.VariableSubstitutionDeclaration.infer_formula"]], "verify_args() (punctilious.variablesubstitutiondeclaration method)": [[140, "punctilious.VariableSubstitutionDeclaration.verify_args"]], "variablesubstitutioninclusion (class in punctilious)": [[141, "punctilious.VariableSubstitutionInclusion"]], "infer_formula() (punctilious.variablesubstitutioninclusion method)": [[141, "punctilious.VariableSubstitutionInclusion.infer_formula"]], "infer_statement() (punctilious.variablesubstitutioninclusion method)": [[141, "punctilious.VariableSubstitutionInclusion.infer_statement"]], "create_universe_of_discourse() (in module punctilious)": [[142, "punctilious.create_universe_of_discourse"]]}})