Search.setIndex({"docnames": ["_tags/absorption", "_tags/axiom", "_tags/axiom-interpretation", "_tags/biconditional-elimination-1", "_tags/biconditional-elimination-2", "_tags/biconditional-introduction", "_tags/class", "_tags/collection", "_tags/concept", "_tags/conjunction-elimination-1", "_tags/conjunction-elimination-2", "_tags/conjunction-introduction", "_tags/constructive-dilemma", "_tags/data-model", "_tags/declaration", "_tags/definition-interpretation", "_tags/destructive-dilemma", "_tags/disjunction-introduction-1", "_tags/disjunction-introduction-2", "_tags/disjunctive-resolution", "_tags/disjunctive-syllogism-1", "_tags/disjunctive-syllogism-2", "_tags/double-negation-elimination", "_tags/double-negation-introduction", "_tags/equal-terms-substitution", "_tags/equality-commutativity", "_tags/equivalence", "_tags/formula", "_tags/hypothetical-syllogism", "_tags/inclusion", "_tags/inconsistency-introduction-1", "_tags/inconsistency-introduction-2", "_tags/inconsistency-introduction-3", "_tags/inference-rule", "_tags/inferred-statement", "_tags/math", "_tags/modus-ponens", "_tags/modus-tollens", "_tags/proof-by-contradiction-1", "_tags/proof-by-contradiction-2", "_tags/proof-by-refutation-1", "_tags/proof-by-refutation-2", "_tags/python", "_tags/sample", "_tags/statement", "_tags/tagsindex", "_tags/universe-of-discourse", "_tags/variable", "_tags/variable-substitution", "back_matter", "back_matter/bibliography_back_matter", "back_matter_reference_table", "front_matter", "front_matter/about_front_matter", "front_matter/contributing_front_matter", "front_matter/project_front_matter", "front_matter/roadmap_front_matter", "front_matter/support_front_matter", "front_matter/title_front_matter", "index", "math", "math/concept/alpha_equivalence_math_concept", "math/concept/atomic_formula_math_concept", "math/concept/axiom_math_concept", "math/concept/axiomatic_method_math_concept", "math/concept/compound_formula_math_concept", "math/concept/connective_math_concept", "math/concept/definition_math_concept", "math/concept/elimination_rule_math_concept", "math/concept/formula_math_concept", "math/concept/formula_statement_math_concept", "math/concept/hypothesis_math_concept", "math/concept/inference_rule_math_concept", "math/concept/inferred_statement_math_concept", "math/concept/introduction_rule_math_concept", "math/concept/is_a_math_concept", "math/concept/meta_object_math_concept", "math/concept/notation_form_math_concept", "math/concept/object_creation_math_concept", "math/concept/object_declaration_math_concept", "math/concept/object_inclusion_math_concept", "math/concept/object_math_concept", "math/concept/paragraph_proof_math_concept", "math/concept/statement_math_concept", "math/concept/theory_derivation_math_concept", "math/concept/universe_of_discourse_math_concept", "math/concept/validity_of_formula_math_concept", "math/concept/variable_math_concept", "math/inference_rule/absorption_math_inference_rule", "math/inference_rule/axiom_interpretation_math_inference_rule", "math/inference_rule/biconditional_elimination_1_math_inference_rule", "math/inference_rule/biconditional_elimination_2_math_inference_rule", "math/inference_rule/biconditional_introduction_math_inference_rule", "math/inference_rule/conjunction_elimination_1_math_inference_rule", "math/inference_rule/conjunction_elimination_2_math_inference_rule", "math/inference_rule/conjunction_introduction_math_inference_rule", "math/inference_rule/constructive_dilemma_math_inference_rule", "math/inference_rule/definition_interpretation_math_inference_rule", "math/inference_rule/destructive_dilemma_math_inference_rule", "math/inference_rule/disjunction_introduction_1_math_inference_rule", "math/inference_rule/disjunction_introduction_2_math_inference_rule", "math/inference_rule/disjunctive_resolution_math_inference_rule", "math/inference_rule/disjunctive_syllogism_1_math_inference_rule", "math/inference_rule/disjunctive_syllogism_2_math_inference_rule", "math/inference_rule/double_negation_elimination_math_inference_rule", "math/inference_rule/double_negation_introduction_math_inference_rule", "math/inference_rule/equal_terms_substitution_math_inference_rule", "math/inference_rule/equality_commutativity_math_inference_rule", "math/inference_rule/hypothetical_syllogism_math_inference_rule", "math/inference_rule/inconsistency_introduction_1_math_inference_rule", "math/inference_rule/inconsistency_introduction_2_math_inference_rule", "math/inference_rule/inconsistency_introduction_3_math_inference_rule", "math/inference_rule/modus_ponens_math_inference_rule", "math/inference_rule/modus_tollens_math_inference_rule", "math/inference_rule/proof_by_contradiction_1_math_inference_rule", "math/inference_rule/proof_by_contradiction_2_math_inference_rule", "math/inference_rule/proof_by_refutation_1_math_inference_rule", "math/inference_rule/proof_by_refutation_2_math_inference_rule", "math/inference_rule/variable_substitution_math_inference_rule", "math/theory/mgz_2021/classical_logic_k0", "math/theory/mgz_2021/intuitionistic_logic_j0", "math/theory/mgz_2021/minimal_logic_m0", "math/theory/tao_2006/the_peano_axioms", "math_concept", "math_inference_rule", "math_theory", "python", "python/class/absorption_declaration_python_class", "python/class/absorption_inclusion_python_class", "python/class/axiom_interpretation_declaration_python_class", "python/class/axiom_interpretation_inclusion_python_class", "python/class/biconditional_elimination_1_declaration_python_class", "python/class/biconditional_elimination_1_inclusion_python_class", "python/class/biconditional_elimination_2_declaration_python_class", "python/class/biconditional_elimination_2_inclusion_python_class", "python/class/biconditional_introduction_declaration_python_class", "python/class/biconditional_introduction_inclusion_python_class", "python/class/class_diagram", "python/class/conjunction_elimination_1_declaration_python_class", "python/class/conjunction_elimination_1_inclusion_python_class", "python/class/conjunction_elimination_2_declaration_python_class", "python/class/conjunction_elimination_2_inclusion_python_class", "python/class/conjunction_introduction_declaration_python_class", "python/class/conjunction_introduction_inclusion_python_class", "python/class/constructive_dilemma_declaration_python_class", "python/class/constructive_dilemma_inclusion_python_class", "python/class/definition_interpretation_declaration_python_class", "python/class/definition_interpretation_inclusion_python_class", "python/class/destructive_dilemma_declaration_python_class", "python/class/destructive_dilemma_inclusion_python_class", "python/class/disjunction_introduction_1_declaration_python_class", "python/class/disjunction_introduction_1_inclusion_python_class", "python/class/disjunction_introduction_2_declaration_python_class", "python/class/disjunction_introduction_2_inclusion_python_class", "python/class/disjunctive_resolution_declaration_python_class", "python/class/disjunctive_resolution_inclusion_python_class", "python/class/disjunctive_syllogism_1_declaration_python_class", "python/class/disjunctive_syllogism_1_inclusion_python_class", "python/class/disjunctive_syllogism_2_declaration_python_class", "python/class/disjunctive_syllogism_2_inclusion_python_class", "python/class/double_negation_elimination_declaration_python_class", "python/class/double_negation_elimination_inclusion_python_class", "python/class/double_negation_introduction_declaration_python_class", "python/class/double_negation_introduction_inclusion_python_class", "python/class/equal_terms_substitution_declaration_python_class", "python/class/equal_terms_substitution_inclusion_python_class", "python/class/equality_commutativity_declaration_python_class", "python/class/equality_commutativity_inclusion_python_class", "python/class/hypothetical_syllogism_declaration_python_class", "python/class/hypothetical_syllogism_inclusion_python_class", "python/class/inconsistency_introduction_1_declaration_python_class", "python/class/inconsistency_introduction_1_inclusion_python_class", "python/class/inconsistency_introduction_2_declaration_python_class", "python/class/inconsistency_introduction_2_inclusion_python_class", "python/class/inconsistency_introduction_3_declaration_python_class", "python/class/inconsistency_introduction_3_inclusion_python_class", "python/class/inference_rule_declaration_collection_python_class", "python/class/inference_rule_declaration_python_class", "python/class/inference_rule_inclusion_collection_python_class", "python/class/inference_rule_inclusion_python_class", "python/class/inferred_statement_python_class", "python/class/modus_ponens_declaration_python_class", "python/class/modus_ponens_inclusion_python_class", "python/class/modus_tollens_declaration_python_class", "python/class/modus_tollens_inclusion_python_class", "python/class/proof_by_contradiction_1_declaration_python_class", "python/class/proof_by_contradiction_1_inclusion_python_class", "python/class/proof_by_contradiction_2_declaration_python_class", "python/class/proof_by_contradiction_2_inclusion_python_class", "python/class/proof_by_refutation_1_declaration_python_class", "python/class/proof_by_refutation_1_inclusion_python_class", "python/class/proof_by_refutation_2_declaration_python_class", "python/class/proof_by_refutation_2_inclusion_python_class", "python/class/universe_of_discourse_python_class", "python/class/variable_python_class", "python/class/variable_substitution_declaration_python_class", "python/class/variable_substitution_inclusion_python_class", "python/function/create_universe_of_discourse", "python/installation_python", "python/prerequisites_python", "python/sample/absorption_python_sample", "python/sample/axiom_interpretation_python_sample", "python/sample/biconditional_elimination_1_python_sample", "python/sample/biconditional_elimination_2_python_sample", "python/sample/biconditional_introduction_python_sample", "python/sample/conjunction_elimination_1_python_sample", "python/sample/conjunction_elimination_2_python_sample", "python/sample/conjunction_introduction_python_sample", "python/sample/constructive_dilemma_python_sample", "python/sample/definition_interpretation_python_sample", "python/sample/destructive_dilemma_python_sample", "python/sample/disjunction_introduction_1_python_sample", "python/sample/disjunction_introduction_2_python_sample", "python/sample/disjunctive_resolution_python_sample", "python/sample/disjunctive_syllogism_1_python_sample", "python/sample/disjunctive_syllogism_2_python_sample", "python/sample/double_negation_elimination_python_sample", "python/sample/double_negation_introduction_python_sample", "python/sample/equal_terms_substitution_python_sample", "python/sample/equality_commutativity_python_sample", "python/sample/hypothetical_syllogism_python_sample", "python/sample/inconsistency_introduction_1_python_sample", "python/sample/inconsistency_introduction_2_python_sample", "python/sample/inconsistency_introduction_3_python_sample", "python/sample/modus_ponens_python_sample", "python/sample/modus_tollens_python_sample", "python/sample/proof_by_contradiction_1_python_sample", "python/sample/proof_by_contradiction_2_python_sample", "python/sample/proof_by_refutation_1_python_sample", "python/sample/proof_by_refutation_2_python_sample", "python/sample/variable_python_sample", "python/sample/variable_substitution_python_sample", "python/source_code_repository_python", "python_class_index", "python_function_index", "python_sample_index", "quote/moller_2013_modellingcomputingsystems_p55", "reference_table/inference_rule_reference_table", "theory_mgz_2021", "theory_tao_2006"], "filenames": ["_tags/absorption.rst", "_tags/axiom.rst", "_tags/axiom-interpretation.rst", "_tags/biconditional-elimination-1.rst", "_tags/biconditional-elimination-2.rst", "_tags/biconditional-introduction.rst", "_tags/class.rst", "_tags/collection.rst", "_tags/concept.rst", "_tags/conjunction-elimination-1.rst", "_tags/conjunction-elimination-2.rst", "_tags/conjunction-introduction.rst", "_tags/constructive-dilemma.rst", "_tags/data-model.rst", "_tags/declaration.rst", "_tags/definition-interpretation.rst", "_tags/destructive-dilemma.rst", "_tags/disjunction-introduction-1.rst", "_tags/disjunction-introduction-2.rst", "_tags/disjunctive-resolution.rst", "_tags/disjunctive-syllogism-1.rst", "_tags/disjunctive-syllogism-2.rst", "_tags/double-negation-elimination.rst", "_tags/double-negation-introduction.rst", "_tags/equal-terms-substitution.rst", "_tags/equality-commutativity.rst", "_tags/equivalence.rst", "_tags/formula.rst", "_tags/hypothetical-syllogism.rst", "_tags/inclusion.rst", "_tags/inconsistency-introduction-1.rst", "_tags/inconsistency-introduction-2.rst", "_tags/inconsistency-introduction-3.rst", "_tags/inference-rule.rst", "_tags/inferred-statement.rst", "_tags/math.rst", "_tags/modus-ponens.rst", "_tags/modus-tollens.rst", "_tags/proof-by-contradiction-1.rst", "_tags/proof-by-contradiction-2.rst", "_tags/proof-by-refutation-1.rst", "_tags/proof-by-refutation-2.rst", "_tags/python.rst", "_tags/sample.rst", "_tags/statement.rst", "_tags/tagsindex.rst", "_tags/universe-of-discourse.rst", "_tags/variable.rst", "_tags/variable-substitution.rst", "back_matter.rst", "back_matter/bibliography_back_matter.rst", "back_matter_reference_table.rst", "front_matter.rst", "front_matter/about_front_matter.rst", "front_matter/contributing_front_matter.rst", "front_matter/project_front_matter.rst", "front_matter/roadmap_front_matter.rst", "front_matter/support_front_matter.rst", "front_matter/title_front_matter.rst", "index.rst", "math.rst", "math/concept/alpha_equivalence_math_concept.rst", "math/concept/atomic_formula_math_concept.rst", "math/concept/axiom_math_concept.rst", "math/concept/axiomatic_method_math_concept.rst", "math/concept/compound_formula_math_concept.rst", "math/concept/connective_math_concept.rst", "math/concept/definition_math_concept.rst", "math/concept/elimination_rule_math_concept.rst", "math/concept/formula_math_concept.rst", "math/concept/formula_statement_math_concept.rst", "math/concept/hypothesis_math_concept.rst", "math/concept/inference_rule_math_concept.rst", "math/concept/inferred_statement_math_concept.rst", "math/concept/introduction_rule_math_concept.rst", "math/concept/is_a_math_concept.rst", "math/concept/meta_object_math_concept.rst", "math/concept/notation_form_math_concept.rst", "math/concept/object_creation_math_concept.rst", "math/concept/object_declaration_math_concept.rst", "math/concept/object_inclusion_math_concept.rst", "math/concept/object_math_concept.rst", "math/concept/paragraph_proof_math_concept.rst", "math/concept/statement_math_concept.rst", "math/concept/theory_derivation_math_concept.rst", "math/concept/universe_of_discourse_math_concept.rst", "math/concept/validity_of_formula_math_concept.rst", "math/concept/variable_math_concept.rst", "math/inference_rule/absorption_math_inference_rule.rst", "math/inference_rule/axiom_interpretation_math_inference_rule.rst", "math/inference_rule/biconditional_elimination_1_math_inference_rule.rst", "math/inference_rule/biconditional_elimination_2_math_inference_rule.rst", "math/inference_rule/biconditional_introduction_math_inference_rule.rst", "math/inference_rule/conjunction_elimination_1_math_inference_rule.rst", "math/inference_rule/conjunction_elimination_2_math_inference_rule.rst", "math/inference_rule/conjunction_introduction_math_inference_rule.rst", "math/inference_rule/constructive_dilemma_math_inference_rule.rst", "math/inference_rule/definition_interpretation_math_inference_rule.rst", "math/inference_rule/destructive_dilemma_math_inference_rule.rst", "math/inference_rule/disjunction_introduction_1_math_inference_rule.rst", "math/inference_rule/disjunction_introduction_2_math_inference_rule.rst", "math/inference_rule/disjunctive_resolution_math_inference_rule.rst", "math/inference_rule/disjunctive_syllogism_1_math_inference_rule.rst", "math/inference_rule/disjunctive_syllogism_2_math_inference_rule.rst", "math/inference_rule/double_negation_elimination_math_inference_rule.rst", "math/inference_rule/double_negation_introduction_math_inference_rule.rst", "math/inference_rule/equal_terms_substitution_math_inference_rule.rst", "math/inference_rule/equality_commutativity_math_inference_rule.rst", "math/inference_rule/hypothetical_syllogism_math_inference_rule.rst", "math/inference_rule/inconsistency_introduction_1_math_inference_rule.rst", "math/inference_rule/inconsistency_introduction_2_math_inference_rule.rst", "math/inference_rule/inconsistency_introduction_3_math_inference_rule.rst", "math/inference_rule/modus_ponens_math_inference_rule.rst", "math/inference_rule/modus_tollens_math_inference_rule.rst", "math/inference_rule/proof_by_contradiction_1_math_inference_rule.rst", "math/inference_rule/proof_by_contradiction_2_math_inference_rule.rst", "math/inference_rule/proof_by_refutation_1_math_inference_rule.rst", "math/inference_rule/proof_by_refutation_2_math_inference_rule.rst", "math/inference_rule/variable_substitution_math_inference_rule.rst", "math/theory/mgz_2021/classical_logic_k0.rst", "math/theory/mgz_2021/intuitionistic_logic_j0.rst", "math/theory/mgz_2021/minimal_logic_m0.rst", "math/theory/tao_2006/the_peano_axioms.rst", "math_concept.rst", "math_inference_rule.rst", "math_theory.rst", "python.rst", "python/class/absorption_declaration_python_class.rst", "python/class/absorption_inclusion_python_class.rst", "python/class/axiom_interpretation_declaration_python_class.rst", "python/class/axiom_interpretation_inclusion_python_class.rst", "python/class/biconditional_elimination_1_declaration_python_class.rst", "python/class/biconditional_elimination_1_inclusion_python_class.rst", "python/class/biconditional_elimination_2_declaration_python_class.rst", "python/class/biconditional_elimination_2_inclusion_python_class.rst", "python/class/biconditional_introduction_declaration_python_class.rst", "python/class/biconditional_introduction_inclusion_python_class.rst", "python/class/class_diagram.rst", "python/class/conjunction_elimination_1_declaration_python_class.rst", "python/class/conjunction_elimination_1_inclusion_python_class.rst", "python/class/conjunction_elimination_2_declaration_python_class.rst", "python/class/conjunction_elimination_2_inclusion_python_class.rst", "python/class/conjunction_introduction_declaration_python_class.rst", "python/class/conjunction_introduction_inclusion_python_class.rst", "python/class/constructive_dilemma_declaration_python_class.rst", "python/class/constructive_dilemma_inclusion_python_class.rst", "python/class/definition_interpretation_declaration_python_class.rst", "python/class/definition_interpretation_inclusion_python_class.rst", "python/class/destructive_dilemma_declaration_python_class.rst", "python/class/destructive_dilemma_inclusion_python_class.rst", "python/class/disjunction_introduction_1_declaration_python_class.rst", "python/class/disjunction_introduction_1_inclusion_python_class.rst", "python/class/disjunction_introduction_2_declaration_python_class.rst", "python/class/disjunction_introduction_2_inclusion_python_class.rst", "python/class/disjunctive_resolution_declaration_python_class.rst", "python/class/disjunctive_resolution_inclusion_python_class.rst", "python/class/disjunctive_syllogism_1_declaration_python_class.rst", "python/class/disjunctive_syllogism_1_inclusion_python_class.rst", "python/class/disjunctive_syllogism_2_declaration_python_class.rst", "python/class/disjunctive_syllogism_2_inclusion_python_class.rst", "python/class/double_negation_elimination_declaration_python_class.rst", "python/class/double_negation_elimination_inclusion_python_class.rst", "python/class/double_negation_introduction_declaration_python_class.rst", "python/class/double_negation_introduction_inclusion_python_class.rst", "python/class/equal_terms_substitution_declaration_python_class.rst", "python/class/equal_terms_substitution_inclusion_python_class.rst", "python/class/equality_commutativity_declaration_python_class.rst", "python/class/equality_commutativity_inclusion_python_class.rst", "python/class/hypothetical_syllogism_declaration_python_class.rst", "python/class/hypothetical_syllogism_inclusion_python_class.rst", "python/class/inconsistency_introduction_1_declaration_python_class.rst", "python/class/inconsistency_introduction_1_inclusion_python_class.rst", "python/class/inconsistency_introduction_2_declaration_python_class.rst", "python/class/inconsistency_introduction_2_inclusion_python_class.rst", "python/class/inconsistency_introduction_3_declaration_python_class.rst", "python/class/inconsistency_introduction_3_inclusion_python_class.rst", "python/class/inference_rule_declaration_collection_python_class.rst", "python/class/inference_rule_declaration_python_class.rst", "python/class/inference_rule_inclusion_collection_python_class.rst", "python/class/inference_rule_inclusion_python_class.rst", "python/class/inferred_statement_python_class.rst", "python/class/modus_ponens_declaration_python_class.rst", "python/class/modus_ponens_inclusion_python_class.rst", "python/class/modus_tollens_declaration_python_class.rst", "python/class/modus_tollens_inclusion_python_class.rst", "python/class/proof_by_contradiction_1_declaration_python_class.rst", "python/class/proof_by_contradiction_1_inclusion_python_class.rst", "python/class/proof_by_contradiction_2_declaration_python_class.rst", "python/class/proof_by_contradiction_2_inclusion_python_class.rst", "python/class/proof_by_refutation_1_declaration_python_class.rst", "python/class/proof_by_refutation_1_inclusion_python_class.rst", "python/class/proof_by_refutation_2_declaration_python_class.rst", "python/class/proof_by_refutation_2_inclusion_python_class.rst", "python/class/universe_of_discourse_python_class.rst", "python/class/variable_python_class.rst", "python/class/variable_substitution_declaration_python_class.rst", "python/class/variable_substitution_inclusion_python_class.rst", "python/function/create_universe_of_discourse.rst", "python/installation_python.rst", "python/prerequisites_python.rst", "python/sample/absorption_python_sample.rst", "python/sample/axiom_interpretation_python_sample.rst", "python/sample/biconditional_elimination_1_python_sample.rst", "python/sample/biconditional_elimination_2_python_sample.rst", "python/sample/biconditional_introduction_python_sample.rst", "python/sample/conjunction_elimination_1_python_sample.rst", "python/sample/conjunction_elimination_2_python_sample.rst", "python/sample/conjunction_introduction_python_sample.rst", "python/sample/constructive_dilemma_python_sample.rst", "python/sample/definition_interpretation_python_sample.rst", "python/sample/destructive_dilemma_python_sample.rst", "python/sample/disjunction_introduction_1_python_sample.rst", "python/sample/disjunction_introduction_2_python_sample.rst", "python/sample/disjunctive_resolution_python_sample.rst", "python/sample/disjunctive_syllogism_1_python_sample.rst", "python/sample/disjunctive_syllogism_2_python_sample.rst", "python/sample/double_negation_elimination_python_sample.rst", "python/sample/double_negation_introduction_python_sample.rst", "python/sample/equal_terms_substitution_python_sample.rst", "python/sample/equality_commutativity_python_sample.rst", "python/sample/hypothetical_syllogism_python_sample.rst", "python/sample/inconsistency_introduction_1_python_sample.rst", "python/sample/inconsistency_introduction_2_python_sample.rst", "python/sample/inconsistency_introduction_3_python_sample.rst", "python/sample/modus_ponens_python_sample.rst", "python/sample/modus_tollens_python_sample.rst", "python/sample/proof_by_contradiction_1_python_sample.rst", "python/sample/proof_by_contradiction_2_python_sample.rst", "python/sample/proof_by_refutation_1_python_sample.rst", "python/sample/proof_by_refutation_2_python_sample.rst", "python/sample/variable_python_sample.rst", "python/sample/variable_substitution_python_sample.rst", "python/source_code_repository_python.rst", "python_class_index.rst", "python_function_index.rst", "python_sample_index.rst", "quote/moller_2013_modellingcomputingsystems_p55.rst", "reference_table/inference_rule_reference_table.rst", "theory_mgz_2021.rst", "theory_tao_2006.rst"], "titles": ["My tags: absorption", "My tags: axiom", "My tags: axiom-interpretation", "My tags: biconditional-elimination-1", "My tags: biconditional-elimination-2", "My tags: biconditional-introduction", "My tags: class", "My tags: collection", "My tags: concept", "My tags: conjunction-elimination-1", "My tags: conjunction-elimination-2", "My tags: conjunction-introduction", "My tags: constructive-dilemma", "My tags: data-model", "My tags: declaration", "My tags: definition-interpretation", "My tags: destructive-dilemma", "My tags: disjunction-introduction-1", "My tags: disjunction-introduction-2", "My tags: disjunctive-resolution", "My tags: disjunctive-syllogism-1", "My tags: disjunctive-syllogism-2", "My tags: double-negation-elimination", "My tags: double-negation-introduction", "My tags: equal-terms-substitution", "My tags: equality-commutativity", "My tags: equivalence", "My tags: formula", "My tags: hypothetical-syllogism", "My tags: inclusion", "My tags: inconsistency-introduction-1", "My tags: inconsistency-introduction-2", "My tags: inconsistency-introduction-3", "My tags: inference-rule", "My tags: inferred-statement", "My tags: math", "My tags: modus-ponens", "My tags: modus-tollens", "My tags: proof-by-contradiction-1", "My tags: proof-by-contradiction-2", "My tags: proof-by-refutation-1", "My tags: proof-by-refutation-2", "My tags: python", "My tags: sample", "My tags: statement", "Tags overview", "My tags: universe-of-discourse", "My tags: variable", "My tags: variable-substitution", "Back matter", "Bibliography", "Reference tables", "Front matter", "About <em>punctilious</em>", "Contributing to <em>punctilious</em>", "The <em>punctilious</em> project", "Roadmap", "Support", "Punctilious", "punctilious", "Math", "alpha-equivalence", "atomic-formula", "axiom", "axiomatic-method", "compound-formula", "connective", "definition", "elimination-rule", "formula", "formula-statement", "hypothesis", "inference-rule", "inferred-statement", "introduction-rule", "is-a", "meta-object", "notation-form", "object-creation", "object-declaration", "object-inclusion", "object", "paragraph-proof (proof-style)", "statement", "theory-derivation", "universe-of-discourse", "validity-of-formula", "variable", "absorption (math concept)", "axiom-interpretation (math concept)", "biconditional-elimination-1 (math concept)", "biconditional-elimination-2 (math concept)", "biconditional-introduction (math concept)", "conjunction-elimination-1 (math concept)", "conjunction-elimination-2 (math concept)", "conjunction-introduction (math concept)", "constructive-dilemma (math concept)", "definition-interpretation (math concept)", "destructive-dilemma (math concept)", "disjunction-introduction-1 (math concept)", "disjunction-introduction-2 (math concept)", "disjunctive-resolution (math concept)", "disjunctive-syllogism-1 (math concept)", "disjunctive-syllogism-2 (math concept)", "double-negation-elimination (math concept)", "double-negation-introduction (math concept)", "equal-terms-substitution (math concept)", "equality-commutativity (math concept)", "hypothetical-syllogism (math concept)", "inconsistency-introduction-1 (math concept)", "inconsistency-introduction-2 (math concept)", "inconsistency-introduction-3 (math concept)", "modus-ponens (math concept)", "modus-tollens (math concept)", "proof-by-contradiction-1 (math concept)", "proof-by-contradiction-2 (math concept)", "proof-by-refutation-1 (math concept)", "proof-by-refutation-2 (math concept)", "variable-substitution (math concept)", "Classical logic ( <span class=\"math notranslate nohighlight\">\\(K_0\\)</span> )", "Intuitionistic logic ( <span class=\"math notranslate nohighlight\">\\(J_0\\)</span> )", "Minimal logic ( <span class=\"math notranslate nohighlight\">\\(M_0\\)</span> )", "The Peano axioms", "Math concept", "Math inference_rule", "Math theory", "Python", "AbsorptionDeclaration (python class)", "AbsorptionInclusion (python class)", "AxiomInterpretationDeclaration (python class)", "AxiomInterpretationInclusion (python class)", "BiconditionalElimination1Declaration (python class)", "BiconditionalElimination1Inclusion (python class)", "BiconditionalElimination2Declaration (python class)", "BiconditionalElimination2Inclusion (python class)", "BiconditionalIntroductionDeclaration (python class)", "BiconditionalIntroductionInclusion (python class)", "Class diagram", "ConjunctionElimination1Declaration (python class)", "ConjunctionElimination1Inclusion (python class)", "ConjunctionElimination2Declaration (python class)", "ConjunctionElimination2Inclusion (python class)", "ConjunctionIntroductionDeclaration (python class)", "ConjunctionIntroductionInclusion (python class)", "ConstructiveDilemmaDeclaration (python class)", "ConstructiveDilemmaInclusion (python class)", "DefinitionInterpretationDeclaration (python class)", "DefinitionInterpretationInclusion (python class)", "DestructiveDilemmaDeclaration (python class)", "DestructiveDilemmaInclusion (python class)", "DisjunctionIntroduction1Declaration (python class)", "DisjunctionIntroduction1Inclusion (python class)", "DisjunctionIntroduction2Declaration (python class)", "DisjunctionIntroduction2Inclusion (python class)", "DisjunctiveResolutionDeclaration (python class)", "DisjunctiveResolutionInclusion (python class)", "DisjunctiveSyllogism1Declaration (python class)", "DisjunctiveSyllogism1Inclusion (python class)", "DisjunctiveSyllogism2Declaration (python class)", "DisjunctiveSyllogism2Inclusion (python class)", "DoubleNegationEliminationDeclaration (python class)", "DoubleNegationEliminationInclusion (python class)", "DoubleNegationIntroductionDeclaration (python class)", "DoubleNegationIntroductionInclusion (python class)", "EqualTermsSubstitutionDeclaration (python class)", "EqualTermsSubstitutionInclusion (python class)", "EqualityCommutativityDeclaration (python class)", "EqualityCommutativityInclusion (python class)", "HypotheticalSyllogismDeclaration (python class)", "HypotheticalSyllogismInclusion (python class)", "InconsistencyIntroduction1Declaration (python class)", "InconsistencyIntroduction1Inclusion (python class)", "InconsistencyIntroduction2Declaration (python class)", "InconsistencyIntroduction2Inclusion (python class)", "InconsistencyIntroduction3Declaration (python class)", "InconsistencyIntroduction3Inclusion (python class)", "InferenceRuleDeclarationCollection (python class)", "InferenceRuleDeclaration (python class)", "InferenceRuleInclusionCollection (python class)", "InferenceRuleInclusion (python class)", "InferredStatement (python class)", "ModusPonensDeclaration (python class)", "ModusPonensInclusion (python class)", "ModusTollensDeclaration (python class)", "ModusTollensInclusion (python class)", "ProofByContradiction1Declaration (python class)", "ProofByContradiction1Inclusion (python class)", "ProofByContradiction2Declaration (python class)", "ProofByContradiction2Inclusion (python class)", "ProofByRefutation1Declaration (python class)", "ProofByRefutation1Inclusion (python class)", "ProofByRefutation2Declaration (python class)", "ProofByRefutation2Inclusion (python class)", "UniverseOfDiscourse (python class)", "Variable (python class)", "VariableSubstitutionDeclaration (python class)", "VariableSubstitutionInclusion (python class)", "create_universe_of_discourse", "Installation", "Prerequisites", "absorption (python sample)", "axiom-interpretation (python sample)", "biconditional-elimination-1 (python sample)", "biconditional-elimination-2 (python sample)", "biconditional-introduction (python sample)", "conjunction-elimination-1 (python sample)", "conjunction-elimination-2 (python sample)", "conjunction-introduction (python sample)", "constructive-dilemma (python sample)", "definition-interpretation (python sample)", "destructive-dilemma (python sample)", "disjunction-introduction-1 (python sample)", "disjunction-introduction-2 (python sample)", "disjunctive-resolution (python sample)", "disjunctive-syllogism-1 (python sample)", "disjunctive-syllogism-2 (python sample)", "double-negation-elimination (python sample)", "double-negation-introduction (python sample)", "equal-terms-substitution (python sample)", "equality-commutativity (python sample)", "hypothetical-syllogism (python sample)", "inconsistency-introduction-1 (python sample)", "inconsistency-introduction-2 (python sample)", "inconsistency-introduction-3 (python sample)", "modus-ponens (python sample)", "modus-tollens (python sample)", "proof-by-contradiction-1 (python sample)", "proof-by-contradiction-2 (python sample)", "proof-by-refutation-1 (python sample)", "proof-by-refutation-2 (python sample)", "variable (python sample)", "variable-substitution (python sample)", "Source code repository", "Python classes", "Python functions", "Python samples", "&lt;no title&gt;", "Inference rules reference table", "MGZ 2021", "Tao 2006"], "terms": {"math": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 45, 48, 50, 58, 59, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "concept": [0, 2, 3, 4, 5, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 45, 48, 59, 60, 75, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "absorptiondeclar": [0, 6, 14, 42, 59, 128, 233], "python": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 53, 59, 60, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 137, 232], "class": [0, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 59, 61, 75, 76, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "absorptioninclus": [0, 6, 29, 42, 59, 178, 233], "sampl": [0, 2, 3, 4, 5, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 59, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196], "axiominterpretationdeclar": [2, 6, 14, 42, 130], "axiominterpretationinclus": [2, 6, 29, 42, 178], "biconditionalelimination1declar": [3, 6, 14, 42, 59, 132, 134, 233], "biconditionalelimination1inclus": [3, 6, 29, 42, 59, 178, 233], "biconditionalelimination2declar": [4, 6, 14, 42, 59, 233], "biconditionalelimination2inclus": [4, 6, 29, 42, 59, 178, 233], "biconditionalintroductiondeclar": [5, 6, 14, 42, 59, 136, 233], "biconditionalintroductioninclus": [5, 6, 29, 42, 59, 178, 233], "conjunctionelimination1declar": [6, 9, 14, 42, 59, 139, 178, 233], "conjunctionelimination1inclus": [6, 9, 29, 42, 59, 178, 233], "conjunctionelimination2declar": [6, 10, 14, 42, 59, 141, 233], "conjunctionelimination2inclus": [6, 10, 29, 42, 59, 178, 233], "conjunctionintroductiondeclar": [6, 11, 14, 42, 59, 143, 233], "conjunctionintroductioninclus": [6, 11, 29, 42, 59, 178, 233], "constructivedilemmadeclar": [6, 12, 14, 42, 59, 145, 233], "constructivedilemmainclus": [6, 12, 29, 42, 59, 178, 233], "definitioninterpretationdeclar": [6, 14, 15, 42, 147], "definitioninterpretationinclus": [6, 15, 29, 42, 178], "destructivedilemmadeclar": [6, 14, 16, 42, 59, 149, 233], "destructivedilemmainclus": [6, 16, 29, 42, 59, 178, 233], "disjunctionintroduction1declar": [6, 14, 17, 42, 59, 151, 233], "disjunctionintroduction1inclus": [6, 17, 29, 42, 59, 233], "disjunctionintroduction2declar": [6, 14, 18, 42, 59, 153, 233], "disjunctionintroduction2inclus": [6, 18, 29, 42, 59, 233], "disjunctiveresolutiondeclar": [6, 14, 19, 42, 59, 155, 233], "disjunctiveresolutioninclus": [6, 19, 29, 42, 59, 233], "disjunctivesyllogism1declar": [6, 14, 20, 42, 59, 157, 233], "disjunctivesyllogism1inclus": [6, 20, 29, 42, 59, 233], "disjunctivesyllogism2declar": [6, 14, 21, 42, 59, 159, 233], "disjunctivesyllogism2inclus": [6, 21, 29, 42, 59, 233], "doublenegationeliminationdeclar": [6, 14, 22, 42, 59, 161, 233], "doublenegationeliminationinclus": [6, 22, 29, 42, 59, 178, 233], "doublenegationintroductiondeclar": [6, 14, 23, 42, 59, 163, 233], "doublenegationintroductioninclus": [6, 23, 29, 42, 59, 178, 233], "equaltermssubstitutiondeclar": [6, 14, 24, 42, 59, 165, 233], "equaltermssubstitutioninclus": [6, 24, 29, 42, 59, 233], "equalitycommutativitydeclar": [6, 14, 25, 42, 59, 167, 233], "equalitycommutativityinclus": [6, 25, 29, 42, 59, 233], "hypotheticalsyllogismdeclar": [6, 14, 28, 42, 59, 169, 233], "hypotheticalsyllogisminclus": [6, 28, 29, 42, 59, 233], "inconsistencyintroduction1declar": [6, 14, 30, 42, 59, 171, 233], "inconsistencyintroduction1inclus": [6, 29, 30, 42, 59, 233], "inconsistencyintroduction2declar": [6, 14, 31, 42, 59, 173, 233], "inconsistencyintroduction2inclus": [6, 29, 31, 42, 59, 233], "inconsistencyintroduction3declar": [6, 14, 32, 42, 59, 175, 233], "inconsistencyintroduction3inclus": [6, 29, 32, 42, 59, 233], "inferenceruledeclarationcollect": [6, 7, 14, 33, 42, 59, 193, 233], "inferenceruledeclar": [6, 14, 33, 42, 59, 129, 146, 180, 193, 233], "inferenceruleinclusioncollect": [6, 7, 29, 33, 42, 59, 233], "inferenceruleinclus": [6, 29, 33, 42, 59, 130, 147, 178, 233], "inferredstat": [6, 34, 42, 44, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "modusponensdeclar": [6, 14, 36, 42, 59, 182, 233], "modusponensinclus": [6, 29, 36, 42, 59, 178, 233], "modustollensdeclar": [6, 14, 37, 42, 59, 184, 233], "modustollensinclus": [6, 29, 37, 42, 59, 233], "proofbycontradiction1declar": [6, 14, 38, 42, 59, 186, 233], "proofbycontradiction1inclus": [6, 29, 38, 42, 59, 178, 233], "proofbycontradiction2declar": [6, 14, 39, 42, 59, 188, 233], "proofbycontradiction2inclus": [6, 29, 39, 42, 59, 233], "proofbyrefutation1declar": [6, 14, 40, 42, 59, 190, 233], "proofbyrefutation1inclus": [6, 29, 40, 42, 59, 178, 233], "proofbyrefutation2declar": [6, 14, 41, 42, 59, 192, 233], "proofbyrefutation2inclus": [6, 29, 41, 42, 59, 233], "universeofdiscours": [6, 42, 46, 59, 127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 181, 183, 185, 187, 189, 191, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 233], "variabl": [6, 8, 33, 35, 42, 43, 45, 59, 60, 61, 62, 65, 79, 121, 122, 123, 124, 178, 193, 195, 196, 226, 227, 228, 229, 233, 236, 237], "variablesubstitutiondeclar": [6, 14, 42, 48, 59, 196, 233], "variablesubstitutioninclus": [6, 29, 42, 48, 59, 178, 233], "absorpt": [8, 33, 35, 42, 43, 45, 59, 60, 124, 127, 128, 131, 178, 201, 209, 237], "axiom": [8, 33, 35, 42, 43, 45, 59, 60, 64, 84, 85, 86, 97, 119, 120, 121, 123, 124, 125, 129, 130, 146, 178, 193, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237, 239], "interpret": [8, 33, 35, 42, 43, 45, 59, 60, 86, 119, 120, 121, 122, 124, 129, 130, 146, 147, 178, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237], "bicondit": [8, 33, 35, 42, 43, 45, 59, 60, 68, 74, 124, 131, 132, 133, 134, 135, 136, 178, 237], "elimin": [8, 33, 35, 42, 43, 45, 50, 59, 60, 72, 74, 123, 124, 131, 132, 133, 134, 138, 139, 140, 141, 160, 161, 178, 237, 238], "1": [8, 33, 35, 42, 43, 45, 50, 55, 59, 60, 62, 65, 68, 74, 85, 119, 120, 121, 122, 124, 129, 131, 132, 133, 135, 138, 139, 142, 144, 146, 148, 150, 151, 152, 154, 156, 157, 158, 159, 160, 164, 168, 170, 171, 172, 174, 178, 181, 183, 185, 186, 187, 189, 190, 191, 194, 195, 200, 201, 203, 204, 206, 207, 209, 212, 218, 219, 220, 224, 225, 227, 229, 236, 237], "2": [8, 33, 35, 42, 43, 45, 50, 59, 60, 68, 74, 119, 120, 121, 122, 124, 133, 134, 140, 141, 144, 146, 148, 152, 153, 158, 159, 170, 172, 173, 178, 187, 188, 191, 192, 200, 201, 202, 204, 205, 207, 209, 211, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 231, 237], "introduct": [8, 33, 35, 42, 43, 45, 50, 59, 60, 72, 104, 122, 123, 124, 135, 136, 142, 143, 150, 151, 152, 153, 162, 163, 170, 171, 172, 173, 174, 175, 178, 208, 210, 213, 214, 215, 226, 227, 228, 229, 237, 238], "conjunct": [8, 33, 35, 42, 43, 45, 50, 59, 60, 65, 68, 74, 122, 124, 138, 139, 140, 141, 142, 143, 178, 208, 210, 213, 214, 215, 226, 228, 237], "construct": [8, 33, 35, 42, 43, 45, 59, 60, 124, 144, 145, 178, 237], "dilemma": [8, 33, 35, 42, 43, 45, 59, 60, 124, 144, 145, 148, 149, 178, 237], "definit": [8, 33, 35, 42, 43, 45, 59, 60, 86, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 237], "destruct": [8, 33, 35, 42, 43, 45, 59, 60, 124, 148, 149, 178, 237], "disjunct": [8, 33, 35, 42, 43, 45, 59, 60, 65, 68, 74, 124, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 237], "resolut": [8, 33, 35, 42, 43, 45, 59, 60, 124, 154, 155, 237], "syllog": [8, 33, 35, 42, 43, 45, 59, 60, 124, 156, 157, 158, 159, 168, 169, 237], "doubl": [8, 33, 35, 42, 43, 45, 50, 59, 60, 68, 74, 124, 160, 161, 162, 163, 178, 237], "negat": [8, 33, 35, 42, 43, 45, 50, 59, 60, 65, 68, 74, 109, 116, 117, 124, 160, 161, 162, 163, 178, 226, 227, 228, 237], "equal": [8, 33, 35, 42, 43, 45, 59, 60, 62, 110, 111, 115, 117, 122, 124, 164, 165, 166, 167, 222, 227, 237], "term": [8, 33, 35, 42, 43, 45, 50, 59, 60, 62, 68, 74, 110, 122, 124, 164, 165, 237], "substitut": [8, 33, 35, 42, 43, 45, 59, 60, 121, 122, 124, 164, 165, 178, 194, 195, 196, 226, 227, 228, 229, 237], "commut": [8, 33, 35, 42, 43, 45, 59, 60, 122, 124, 166, 167, 237], "hypothet": [8, 33, 35, 42, 43, 45, 59, 60, 124, 168, 169, 237], "inconsist": [8, 33, 35, 42, 43, 45, 59, 60, 114, 115, 116, 117, 122, 124, 170, 171, 172, 173, 174, 175, 226, 227, 228, 229, 237], "3": [8, 33, 35, 42, 43, 45, 50, 59, 60, 61, 119, 121, 122, 124, 174, 175, 230, 237], "modu": [8, 33, 35, 42, 43, 45, 59, 60, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 220, 226, 227, 228, 229, 237], "ponen": [8, 33, 35, 42, 43, 45, 59, 60, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 220, 225, 226, 227, 228, 229, 237], "tollen": [8, 33, 35, 42, 43, 45, 59, 60, 124, 183, 184, 237], "proof": [8, 33, 35, 42, 43, 45, 50, 56, 58, 59, 60, 95, 105, 110, 111, 119, 120, 121, 122, 123, 124, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 237, 238], "contradict": [8, 33, 35, 42, 43, 45, 50, 59, 60, 116, 117, 122, 124, 185, 186, 187, 188, 228, 229, 237], "refut": [8, 33, 35, 42, 43, 45, 50, 59, 60, 122, 124, 189, 190, 191, 192, 237], "alpha": [26, 59, 60, 123], "refer": [33, 49, 59, 60, 72, 123, 124, 125, 126, 193], "tabl": [33, 72], "4": [45, 50, 119, 120, 121, 122], "69": [], "collect": [45, 75, 84, 85, 176, 178, 193], "31": 45, "declar": [45, 59, 60, 78, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "33": 45, "equival": [45, 59, 60, 62, 66, 85, 122, 123, 194], "inclus": [45, 59, 60, 78, 79, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "infer": [45, 49, 51, 56, 59, 60, 68, 74, 80, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "rule": [45, 49, 50, 51, 56, 59, 60, 69, 73, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "37": 45, "statement": [45, 59, 60, 62, 65, 68, 71, 72, 74, 78, 79, 80, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 106, 107, 116, 118, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 236], "101": [], "32": 45, "univers": [45, 50, 59, 60, 79, 80, 123, 127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 177, 178, 181, 183, 185, 187, 189, 191, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "discours": [45, 59, 60, 79, 80, 123, 127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 177, 178, 181, 183, 185, 187, 189, 191, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "bibliographi": [49, 59], "ast10": [50, 82], "loui": 50, "astorino": 50, "style": 50, "2010": 50, "url": [50, 72, 237], "http": [50, 55, 72, 237], "www": 50, "arlingtonschool": 50, "org": [50, 72, 237], "cm": 50, "lib": 50, "ny02215626": 50, "centric": 50, "domain": 50, "4295": 50, "proofs_1": 50, "pdf": [50, 56], "visit": 50, "2023": 50, "08": 50, "14": 50, "bau10": [50, 114, 115, 116, 117], "andrej": 50, "bauer": 50, "mathemat": [50, 53, 60, 72, 85, 122, 123, 124, 125, 126, 179, 230], "comput": [50, 178], "march": 50, "com": [50, 55], "03": 50, "29": 50, "10": [50, 121], "12": 50, "coo09": [50, 62, 65, 69, 99, 100], "roi": 50, "t": [50, 83, 85, 86, 109, 110, 111, 128, 130, 132, 134, 136, 139, 140, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 160, 161, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 182, 184, 186, 188, 190, 192, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237], "cook": 50, "A": [50, 58, 59, 62, 64, 65, 66, 69, 73, 83, 84, 85, 89, 110, 111, 119, 120, 121, 122, 140, 160, 180, 193, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 236, 237], "dictionari": [50, 193], "philosoph": 50, "logic": [50, 56, 59, 60, 61, 62, 64, 65, 72, 73, 87, 95, 105, 125, 194, 236, 238], "edinburgh": 50, "press": 50, "2009": 50, "isbn": 50, "978": 50, "0": [50, 122, 127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 181, 183, 185, 187, 189, 191, 195], "7486": 50, "2559": 50, "8": [50, 99, 100, 121, 122], "ccm14": [50, 72, 73, 88, 93, 94, 95, 96, 99, 100, 102, 103, 108, 112, 113], "irv": 50, "m": [50, 122], "copi": 50, "carl": 50, "cohen": 50, "kenneth": 50, "macmahon": 50, "pearson": 50, "custom": 50, "librari": [50, 232], "educ": 50, "limit": 50, "harlow": 50, "ed": 50, "new": [50, 71, 118, 193, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "intern": 50, "edit": 50, "2014": 50, "292": 50, "02482": 50, "dow09": [50, 66], "dougla": 50, "down": [50, 118], "3rd": 50, "barron": 50, "": [50, 96, 98, 193, 237], "profession": [50, 54], "guid": 50, "13": 50, "7641": 50, "4139": 50, "congress": 50, "control": 50, "number": [50, 118, 122, 127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 181, 183, 185, 187, 189, 191, 195], "2008931689": 50, "mgz21": [50, 84, 110, 111, 119, 120, 121, 238], "paolo": 50, "mancosu": 50, "sergio": 50, "galvan": 50, "richard": 50, "zach": 50, "an": [50, 62, 65, 68, 71, 72, 73, 74, 75, 78, 79, 80, 84, 85, 86, 89, 97, 111, 114, 115, 116, 117, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 209, 230, 236, 238], "theori": [50, 54, 59, 60, 64, 71, 73, 79, 80, 85, 86, 89, 97, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238, 239], "normal": [50, 238], "cut": [50, 238], "consist": [50, 62, 89, 97, 110, 111, 116, 119, 120, 121, 122, 178, 238], "oxford": 50, "pressoxford": 50, "2021": [50, 59, 60, 125], "doi": 50, "1093": 50, "oso": 50, "9780192895936": 50, "001": 50, "0001": 50, "plvh08": [50, 68, 74], "bruce": 50, "porter": 50, "vladimir": 50, "lifschitz": 50, "frank": 50, "van": 50, "harmelen": 50, "editor": 50, "handbook": 50, "knowledg": 50, "represent": [50, 61, 66], "foundat": 50, "artifici": 50, "intellig": 50, "elsevi": 50, "amsterdam": 50, "boston": 50, "1st": 50, "2008": 50, "tao06": [50, 122, 239], "terenc": 50, "tao": [50, 56, 59, 60, 125], "analysi": [50, 56, 239], "i": [50, 53, 54, 59, 60, 61, 62, 65, 66, 68, 69, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 238, 239], "text": [50, 56, 61, 82, 114, 122, 237], "read": 50, "hindustan": 50, "book": 50, "agenc": 50, "2006": [50, 56, 59, 60, 125], "81": 50, "85931": 50, "62": 50, "ts00": [50, 61], "troelstra": 50, "helmut": 50, "schwichtenberg": 50, "basic": [50, 69, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "43": 50, "cambridg": 50, "tract": 50, "theoret": 50, "scienc": 50, "2nd": 50, "2000": 50, "521": 50, "77911": 50, "war18": [50, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 108, 112, 113], "steve": 50, "warner": 50, "pure": 50, "beginn": 50, "rigor": 50, "set": [50, 56, 66, 75, 85, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 228, 231], "abstract": [50, 177, 179], "algebra": 50, "real": [50, 56], "topologi": 50, "complex": [50, 62, 65], "linear": 50, "get": [50, 54], "800": 50, "septemb": 50, "25": 50, "2018": 50, "9780999811757": 50, "0999811757": 50, "encyclopediaomathematics20": [50, 64], "encyclopedia": [50, 72], "axiomat": [50, 59, 60, 63, 123], "method": [50, 59, 60, 63, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "2020": 50, "encyclopediaofmath": [50, 72], "index": [50, 72, 177, 180, 193, 194], "php": [50, 72], "titl": [50, 52, 59, 72], "axiomatic_method": 50, "oldid": [50, 72], "45531": 50, "09": 50, "23": 50, "mcadams14": [50, 66], "david": 50, "e": [50, 53, 61, 85, 89, 97, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196], "mcadam": 50, "all": [50, 56, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 230], "word": [50, 61, 122], "second": [50, 118], "life": 50, "stori": 50, "problem": 50, "llc": 50, "nlab17": [50, 116, 117], "nlab": 50, "mai": [50, 54, 62, 71, 72, 73, 89, 95, 97, 105, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 230], "2017": 50, "ncatlab": 50, "show": [50, 68, 74, 110, 111, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "06": 50, "11": [50, 121], "proofwiki22a": [50, 105], "proofwiki": 50, "2022": 50, "wiki": [50, 72, 237], "double_neg": 50, "double_negation_introduct": [50, 162, 163, 178, 217], "proof_rul": 50, "21": 50, "proofwiki22b": [50, 95], "june": 50, "rule_of_conjunct": 50, "22": 50, "about": [52, 59, 79, 80], "contribut": [52, 57, 59], "roadmap": [52, 54, 59], "project": [52, 53, 54, 59], "support": [52, 56, 59, 77, 87, 176, 178, 194], "open": 53, "sourc": [53, 59, 126], "In": [53, 61, 62, 71, 75, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 109, 110, 111, 114, 115, 116, 117, 118, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 230], "clear": [53, 54], "intend": 53, "facilit": 53, "studi": 53, "human": [53, 58, 59, 177, 179, 180], "beings": 53, "There": [53, 62, 65, 236], "exist": [53, 78, 79, 85, 178], "multipl": [53, 118, 230], "includ": [53, 84, 85, 95, 105, 118, 119, 120, 121, 122, 177, 178, 179, 180, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "coq": 53, "isabel": 53, "lean": 53, "mani": 53, "more": [53, 65, 79], "The": [53, 54, 59, 60, 62, 65, 72, 73, 77, 85, 95, 105, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 236, 239], "page": [53, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "wikipedia": [53, 72, 237], "contain": [53, 62, 71, 79, 85, 178, 180, 193, 230], "gener": [53, 78, 79, 80, 130, 143, 147, 151, 153, 163, 177, 179, 193, 196], "purpos": [53, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229], "comparison": 53, "contrast": 53, "ridicul": 53, "lilliputian": 53, "neither": 53, "length": 53, "nor": 53, "breadth": 53, "time": [53, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 230], "proven": [53, 140, 160], "system": [50, 53, 122], "besid": 53, "being": [53, 84], "fun": 53, "thrill": 53, "learn": 53, "experi": 53, "focu": 53, "point": [53, 71], "ar": [53, 54, 56, 61, 62, 64, 65, 71, 77, 93, 94, 95, 106, 110, 111, 118, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 230, 236], "friendli": [53, 58, 59], "input": [53, 56], "write": [53, 230], "we": [53, 54, 55, 56, 57, 61, 62, 68, 71, 74, 79, 85, 95, 105, 109, 110, 111, 122, 226, 227, 228, 229, 230], "eas": 53, "us": [53, 62, 65, 75, 79, 85, 118, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236], "output": [53, 56], "readabl": [53, 177, 179, 180], "doe": [53, 69, 89, 97, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "pai": 53, "much": 53, "attent": [53, 89, 97, 178], "perform": 53, "larg": 53, "scale": 53, "applic": [53, 200], "everyon": 54, "warmli": 54, "welcom": 54, "here": [54, 56, 78, 79, 80, 197, 230], "some": [54, 56, 68, 72, 74, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "idea": 54, "how": [54, 68, 74, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "start": 54, "If": [54, 57, 62, 69, 85, 95, 105, 122, 178, 194, 230], "you": [54, 57, 230], "feel": [54, 57], "like": 54, "develop": [54, 58, 59, 61, 87, 194], "whether": 54, "have": [54, 110, 111, 118, 122, 230], "featur": 54, "would": 54, "work": 54, "just": 54, "free": [54, 57, 61, 87, 194], "touch": 54, "our": [54, 57, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 228, 231], "github": [54, 55, 57, 232], "discuss": [54, 57], "thread": [54, 57], "most": [54, 230], "happi": 54, "help": [54, 57], "from": [54, 56, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 84, 88, 92, 99, 100, 114, 115, 116, 117, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "mathematician": 54, "student": 54, "amateur": 54, "look": 54, "wish": [54, 230], "try": 55, "manag": [55, 193, 230], "thi": [55, 60, 61, 75, 84, 89, 95, 97, 105, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "user": [55, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "daviddoret": 55, "list": [56, 72, 127, 129, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 181, 183, 185, 187, 189, 191, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237], "high": 56, "level": 56, "intent": 56, "regard": [56, 61, 86], "futur": [56, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "punctili": [56, 57, 60, 61, 62, 75, 76, 77, 85, 87, 89, 97, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 238, 239], "continu": 56, "document": 56, "properli": 56, "naiv": 56, "proposit": [56, 61, 62, 64, 65, 66, 73, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 105, 109, 114, 115, 116, 119, 120, 121, 122, 127, 129, 146, 176, 177, 179, 180, 193, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 236], "fundament": 56, "geometri": 56, "meta": [56, 59, 60, 123], "provid": [56, 61, 177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238, 239], "simpl": [56, 62, 85, 119, 120, 121, 122, 193, 230], "understand": 56, "error": [56, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "inform": [56, 122, 193], "messag": 56, "when": [56, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 230], "invalid": [56, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "function": [56, 59, 77, 114, 115, 116, 126, 193, 197], "import": [56, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "natur": [56, 89, 95, 97, 105, 118, 122, 178], "ascii": 56, "unicod": [56, 119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "latex": [56, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "two": [56, 61, 62, 65, 66, 110, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 230, 236], "column": 56, "export": 56, "json": 56, "xml": 56, "csv": 56, "need": [57, 61, 69, 72, 73, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "contact": 57, "u": [57, 61, 68, 74, 76, 79, 127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 177, 178, 181, 183, 185, 187, 189, 191, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "do": [57, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "best": 57, "effort": 57, "assist": [58, 59], "front": 59, "matter": 59, "formula": [45, 59, 60, 61, 66, 68, 71, 74, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 106, 107, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 236, 237], "hypothesi": [59, 60, 114, 115, 116, 117, 122, 123, 226, 227, 228, 229], "object": [59, 60, 75, 85, 111, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "notat": [59, 60, 66, 123], "form": [59, 60, 62, 65, 66, 68, 69, 74, 105, 106, 107, 118, 122, 123, 140, 160, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 228], "creation": [59, 60, 79, 80, 85, 123, 197], "paragraph": [59, 60, 123, 130, 143, 147, 151, 153, 163, 177, 196], "relat": [60, 126], "deriv": [59, 60, 68, 71, 72, 73, 74, 80, 85, 86, 110, 111, 114, 115, 116, 117, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238, 239], "valid": [59, 60, 72, 73, 83, 95, 100, 104, 105, 106, 107, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "mgz": [59, 60, 125], "minim": [59, 60, 125, 238], "intuitionist": [59, 60, 125, 238], "classic": [50, 59, 60, 125, 238], "peano": [59, 60, 125, 239], "prerequisit": [59, 126], "instal": [59, 126], "code": [59, 126, 193, 197], "repositori": [59, 126], "create_universe_of_discours": [59, 226, 228, 230, 231, 234], "absorption_python_sampl": [59, 235], "biconditional_elimination_1_python_sampl": [59, 235], "biconditional_elimination_2_python_sampl": [59, 235], "biconditional_introduction_python_sampl": [59, 235], "conjunction_elimination_1_python_sampl": [59, 235], "conjunction_elimination_2_python_sampl": [59, 235], "conjunction_introduction_python_sampl": [59, 235], "disjunction_introduction_1_python_sampl": [59, 235], "disjunction_introduction_2_python_sampl": [59, 235], "double_negation_elimination_python_sampl": [59, 235], "double_negation_introduction_python_sampl": [59, 235], "equal_terms_substitution_python_sampl": [59, 235], "equality_commutativity_python_sampl": [59, 235], "inconsistency_introduction_1_python_sampl": [59, 235], "inconsistency_introduction_2_python_sampl": [59, 235], "inconsistency_introduction_3_python_sampl": [59, 235], "modus_ponens_python_sampl": [59, 235], "proof_by_contradiction_1_python_sampl": [59, 235], "proof_by_contradiction_2_python_sampl": [59, 235], "proof_by_refutation_1_python_sampl": [59, 235], "proof_by_refutation_2_python_sampl": [59, 235], "variable_python_sampl": [59, 235], "variable_substitution_python_sampl": [59, 235], "back": 59, "rational": [60, 126], "keep": [60, 126], "clearli": [60, 126], "distinct": [60, 78, 79, 80, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 221, 222, 223, 230], "cross": [60, 126, 193], "referenc": [60, 126], "tag": [61, 62, 63, 65, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237], "phi": [61, 83, 84, 85, 118, 193, 194, 195, 196, 200, 226, 227, 228, 229, 230, 231, 237], "psi": [61, 230], "onli": [61, 89, 90, 91, 92, 97, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196], "thei": [61, 85, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 176, 178, 179, 182, 184, 186, 188, 190, 192, 196], "differ": [61, 122, 230], "name": [61, 78, 177, 179, 180, 193, 194, 197, 230, 237], "symbol": [61, 62, 66, 69, 75, 177, 179, 180, 193, 194, 226, 227, 228, 229, 230, 231], "given": [61, 193, 194, 211, 212, 213, 214, 215], "As": [61, 105], "todai": 61, "focus": [61, 87, 194], "appli": [61, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "accur": [61, 79, 177], "first": [61, 62, 87, 118, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "order": [61, 62, 66, 87, 118, 194], "consid": [61, 62, 78, 79, 80, 85, 119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "should": [61, 79, 177], "account": 61, "bound": [61, 87, 194], "For": [61, 68, 74, 85], "reason": 61, "onc": 61, "punctioli": 61, "cover": [61, 89, 97, 178], "refin": 61, "probabl": 61, "distinguish": [61, 75, 78], "sever": [61, 62], "type": [61, 95, 105, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196], "express": [61, 62, 89, 97, 105, 178], "mathcal": [61, 85, 89, 97, 109, 110, 111, 114, 115, 116, 117, 237], "which": [61, 62, 64, 65, 72, 73, 79, 80, 84, 86, 110, 111, 114, 115, 116, 117, 180, 194, 221, 223, 226, 228, 230, 236], "ident": [61, 106], "sometim": [61, 230], "sai": 61, "other": [61, 65, 79, 84, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196], "interest": [61, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "certain": [61, 64], "concret": 61, "modulo": 61, "renam": [61, 66], "p": [61, 62, 65, 68, 69, 72, 73, 74, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 236, 237], "wai": [64, 197, 230], "arriv": 64, "scientif": 64, "primit": 64, "assumpt": 64, "so": 64, "call": [62, 64, 65, 77, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 194, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236], "cf": 64, "postul": [64, 71, 85, 89, 97, 119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "basi": 64, "while": 64, "remain": 64, "obtain": 64, "consequ": [62, 64], "allow": [68, 72, 74, 99, 100, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "syntact": [66, 68, 72, 74, 89, 97, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196], "defin": [62, 65, 68, 74, 85, 119, 120, 121, 122, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236], "premis": [68, 72, 74, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "each": [68, 74, 84], "tell": [68, 74], "instanc": [68, 74, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 193, 194, 196, 230], "can": [68, 74, 95, 105], "both": [68, 74, 88, 93, 94, 95, 110, 111, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196], "one": [68, 74, 84, 89, 97, 99, 100, 178, 194, 230], "6": [68, 74, 121, 122], "7": [50, 68, 74, 121], "special": [62, 65, 71, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 182, 184, 186, 188, 190, 192, 194, 196, 236], "branch": 71, "out": 71, "child": 71, "parent": [71, 114, 115, 116, 117, 230], "true": [62, 65, 66, 71, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 114, 116, 122, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 180, 182, 184, 186, 188, 190, 192, 193, 194, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236], "note": [62, 71, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 230], "part": 71, "sequenc": [69, 71, 84, 118, 119, 120, 121, 122], "It": [66, 71, 75, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "follow": [62, 66, 71, 77, 88, 90, 91, 92, 93, 94, 95, 99, 100, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "its": [66, 71, 78, 79, 80, 82, 85, 109, 118, 193, 194, 221, 222, 223, 227, 230], "predecessor": 71, "successor": [71, 122], "straightforward": [71, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 109, 110, 111, 114, 115, 117, 118, 178], "languag": [62, 65, 69, 71, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 109, 110, 111, 114, 115, 116, 117, 118, 178, 236], "ani": [66, 69, 71, 122], "pose": [71, 116, 226, 227, 228, 229], "That": 71, "what": [71, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "assum": [71, 114, 115, 116, 117, 194, 226, 227, 228, 229, 237], "someth": 71, "transform": 72, "thought": [72, 73], "toolbox": [72, 73], "tool": [72, 73], "taken": [72, 73], "prove": [72, 73, 109, 110, 111, 116, 221, 222, 223, 226, 227, 228, 229], "368": [72, 73, 102, 103, 108, 112, 113], "derivation_rul": 72, "33737": 72, "en": [72, 237], "list_of_rules_of_infer": [72, 237], "statement_math_concept": 73, "ha": [62, 66, 73], "been": [73, 118], "inference_rule_math_concept": 73, "theory_derivation_math_concept": 73, "n": [62, 73, 118, 121, 122, 193], "binari": [65, 75, 119, 120, 121, 122], "denot": [75, 122, 194], "belong": 75, "arbitrari": [75, 89, 97, 178], "design": 75, "choic": 75, "loos": 75, "membership": 75, "simpleobjctdict": [76, 193], "fix": [66, 77], "post": 77, "pre": 77, "todo": [66, 78, 127, 129, 146], "mean": [66, 78, 79, 80], "summon": 78, "footnote2": 79, "extend": [79, 80, 84, 119, 120, 121, 122], "make": [79, 80, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196], "possibl": [79, 80, 110, 111, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "speak": 79, "formal": [69, 79, 110, 111, 119, 120, 121, 122, 177, 179, 180, 238, 239], "whenev": [79, 118, 122], "let": [62, 79, 119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "newli": [79, 118], "creat": [79, 85, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "x": [79, 106, 107, 110, 115, 117, 122, 146, 147, 193, 194, 209, 226, 227, 228, 229, 230, 231, 237], "y": [79, 106, 107, 110, 115, 117, 122, 146, 147, 193, 209, 226, 227, 228, 229, 230, 231, 237], "To": [79, 193], "even": 79, "accret": 79, "footnot": [79, 80, 85], "footnote1": 80, "constitut": 80, "element": [80, 194], "present": [82, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196], "singl": [62, 82], "detail": 82, "step": [82, 127, 129, 146], "justif": 82, "conclus": 82, "pair": [66, 118], "member": 66, "b": [66, 120, 121], "arb": 66, "either": [62, 65, 66, 84, 99, 100, 236], "fals": [62, 65, 66, 114, 119, 120, 121, 122, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 180, 182, 184, 186, 188, 190, 192, 193, 194, 196, 204, 207, 208, 210, 213, 214, 215, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 236], "repres": [62, 65, 66, 236], "assign": [66, 118, 230], "composit": 66, "\ud835\udf11": 66, "establish": [66, 226, 228, 231], "between": [66, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "paramet": [66, 127, 129, 130, 140, 146, 147, 160, 177, 179, 180, 193], "ariti": [66, 207, 211, 212, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 231], "signal": 66, "tupl": [83, 84, 85, 118, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 226, 227, 228, 229, 231], "where": [62, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 106, 107, 114, 115, 116, 117, 118, 193, 194], "left": [84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 193, 237], "boldsymbol": [84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 237], "right": [84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 237], "finit": [84, 118, 194], "phi_1": 84, "ldot": [84, 85], "phi_n": 84, "schema": [84, 122], "previou": 84, "theorem": 84, "20": [62, 84], "possibli": [85, 193], "empti": [85, 193, 194], "o_1": 85, "o_2": 85, "o_n": 85, "o_i": 85, "organ": 85, "desir": 85, "mutual": 85, "exclus": 85, "necessarili": [85, 193, 230], "exhaust": 85, "categori": 85, "c": [85, 121, 193], "_1": 85, "_2": 85, "_n": 85, "_i": 85, "implement": [85, 118, 125, 194], "d": [85, 97, 122, 146, 147, 193, 209, 237], "o": [85, 122, 130, 143, 147, 151, 153, 163, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "r": [62, 65, 85, 96, 98, 101, 108, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237], "lifecycl": 85, "must": [85, 89, 97, 122, 177, 178, 179, 180], "And": [85, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "final": [85, 116, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "aka": 85, "ordinari": 85, "sens": 85, "properti": [86, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "current": [87, 140, 160, 180, 194], "yet": [87, 194], "impli": [88, 90, 91, 92, 96, 98, 108, 112, 113, 200, 201, 204, 208, 210, 214, 215, 220, 224, 225, 226, 227, 228, 229, 230, 231, 237], "mathbf": [88, 90, 91, 92, 93, 94, 95, 99, 100, 106, 237], "q": [62, 65, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 112, 113, 118, 122, 127, 133, 135, 138, 140, 142, 143, 150, 151, 152, 153, 160, 172, 178, 207, 211, 212, 222, 226, 227, 228, 229, 231, 236, 237], "vdash": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 237], "land": [88, 93, 94, 95, 205, 206, 226, 228, 237], "369": [88, 93, 94, 96], "truth": [89, 97, 178], "g": [89, 97, 178, 230], "translat": [89, 97, 178], "author": [89, 97, 178], "critic": [89, 97, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "semant": [89, 97, 178], "accuraci": [89, 97, 178], "effect": [89, 97, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196], "verifi": [89, 97, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196], "introduc": [89, 97, 178], "iff": [90, 91, 92, 237], "114": [90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 108, 112, 113], "simplif": [93, 94], "argument": [95, 105, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "deal": [95, 105], "predic": [62, 95, 105], "particular": [95, 105], "deduct": [95, 105], "conclud": [95, 105], "\u03d5": [95, 105], "\u03c8": 95, "compound": [27, 59, 60, 62, 95, 123, 236], "370": [95, 99, 100], "lor": [96, 98, 99, 100, 101, 102, 103, 208, 210, 213, 214, 215, 237], "neg": [98, 101, 102, 103, 109, 113, 114, 116, 237], "addit": [99, 100, 130, 147], "well": [69, 100, 104, 105, 106, 107, 118, 133, 135, 138, 140, 160, 178, 193, 194], "known": [100, 104, 105, 106, 107, 133, 135, 138, 140, 160, 178, 193], "p8": [100, 121, 122, 226, 228], "lnot": [104, 105, 210, 213, 214, 215, 216, 221, 225, 226, 228, 237], "except": 106, "everi": [106, 118, 122, 194], "occurr": [106, 118, 230], "inc": [109, 110, 111, 114, 115, 116, 117, 122, 221, 222, 223, 226, 227, 228, 229, 237], "neq": [110, 111, 115, 117, 122, 172, 174, 222, 223, 227, 229, 237], "inequ": [110, 227, 229], "appeal": [110, 111], "contentu": [110, 111], "consider": [110, 111, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "complet": [110, 111], "unproblemat": [110, 111], "question": [110, 111], "never": [110, 111, 194], "\ud835\udc4e": [110, 111, 122, 193], "altern": [110, 111, 114, 115, 116, 117, 230], "\ud835\udc4f": [110, 111], "5": [62, 110, 111, 121, 122, 194], "itself": [111, 114, 115, 116, 117], "h": [114, 115, 116, 117, 185, 186, 187, 188, 189, 190, 191, 192, 226, 227, 228, 229, 237], "mathit": [114, 115, 116, 237], "base": [114, 115, 116, 117, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 180, 182, 184, 186, 188, 190, 192, 193, 196], "elabor": [114, 115, 116, 117, 119, 120, 121, 122, 180, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "reductio": [114, 115], "ad": [114, 115], "absurdum": [114, 115], "textit": [115, 116, 117, 237], "plain": 116, "modifi": 118, "version": [118, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "whose": 118, "correspond": 118, "algorithm": [118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "pars": 118, "top": 118, "encount": 118, "dure": 118, "sequenti": 118, "packag": [119, 120, 121, 122], "chapter": [119, 120, 121, 122], "plaintext": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "without": [119, 120, 121, 122], "With": [119, 120, 121, 122, 230], "report": [119, 120, 121, 122, 177, 179, 180], "content": [119, 120, 121, 122, 193], "\ud835\uddbc\ud835\uddc5\ud835\uddba\ud835\uddcc\ud835\uddcc\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddc5": 119, "\ud835\uddc5\ud835\uddc8\ud835\uddc0\ud835\uddc2\ud835\uddbc": [119, 120, 121], "\ud835\udde7\ud835\uddf5\ud835\uddf2\ud835\uddfc\ud835\uddff\ud835\ude06": [119, 120, 121, 122], "\ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddfd\ud835\uddf2\ud835\uddff\ud835\ude01\ud835\uddf6\ud835\uddf2\ud835\ude00": [119, 120, 121, 122], "\ud835\uddd6\ud835\uddfc\ud835\uddfb\ud835\ude00\ud835\uddf6\ud835\ude00\ud835\ude01\ud835\uddf2\ud835\uddfb\ud835\uddf0\ud835\ude06": [119, 120, 121, 122], "undetermin": [119, 120, 121, 122], "\ud835\udde6\ud835\ude01\ud835\uddee\ud835\uddef\ud835\uddf6\ud835\uddf9\ud835\uddf6\ud835\ude07\ud835\uddf2\ud835\uddf1": [119, 120, 121, 122], "\ud835\uddd8\ud835\ude05\ud835\ude01\ud835\uddf2\ud835\uddfb\ud835\uddf1\ud835\uddf2\ud835\uddf1": [119, 120, 121, 122], "\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\uddfc\ud835\uddff\ud835\ude06": [119, 120, 121, 122], "\ud835\uddc2\ud835\uddc7\ud835\uddcd\ud835\uddce\ud835\uddc2\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7\ud835\uddc2\ud835\uddcc\ud835\uddcd\ud835\uddc2\ud835\uddbc": [119, 120], "\ud835\udda9\u2080": [119, 120], "\ud835\udde6\ud835\uddf6\ud835\uddfa\ud835\uddfd\ud835\uddf9\ud835\uddf2": [119, 120, 121, 122], "\ud835\uddfc\ud835\uddef\ud835\uddf7\ud835\uddf2\ud835\uddf0\ud835\ude01\ud835\ude00": [119, 120, 121, 122], "\ud835\uddf1\ud835\uddf2\ud835\uddf0\ud835\uddf9\ud835\uddee\ud835\uddff\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00": [119, 120, 121, 122], "\ud835\uddab\ud835\uddbe\ud835\uddcd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "\ud835\uddbb\ud835\uddbe": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "\ud835\udc60\ud835\udc56\ud835\udc5a\ud835\udc5d\ud835\udc59\ud835\udc52": [119, 120, 121, 122], "\ud835\udc5c\ud835\udc4f\ud835\udc57\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc60": [119, 120, 121, 122], "\ud835\uddc2\ud835\uddc7": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udcb0\u2083": 119, "\ud835\udde5\ud835\uddf2\ud835\uddf9\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00": [119, 120, 121, 122], "\ud835\uddba": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "\ud835\udc62\ud835\udc5b\ud835\udc4e\ud835\udc5f\ud835\udc66": [119, 120, 121, 122], "\ud835\udc5f\ud835\udc52\ud835\udc59\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [119, 120, 121], "\ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc4e\ud835\udc5f\ud835\udc66": [119, 120, 121, 122], "\ud835\udc5f\ud835\udc52\ud835\udc59\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b\ud835\udc60": [119, 120, 121, 122], "\ud835\udddc\ud835\uddfb\ud835\uddf3\ud835\uddf2\ud835\uddff\ud835\uddf2\ud835\uddfb\ud835\uddf0\ud835\uddf2": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddff\ud835\ude02\ud835\uddf9\ud835\uddf2\ud835\ude00": [119, 120, 121, 122], "\ud835\uddb3\ud835\uddc1\ud835\uddbe": [119, 120, 121, 122], "\ud835\uddbf\ud835\uddc8\ud835\uddc5\ud835\uddc5\ud835\uddc8\ud835\uddd0\ud835\uddc2\ud835\uddc7\ud835\uddc0": [119, 120, 121, 122], "\ud835\uddc2\ud835\uddc7\ud835\uddbf\ud835\uddbe\ud835\uddcb\ud835\uddbe\ud835\uddc7\ud835\uddbc\ud835\uddbe": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddcb\ud835\uddce\ud835\uddc5\ud835\uddbe\ud835\uddcc": [119, 120, 121, 122], "\ud835\uddba\ud835\uddcb\ud835\uddbe": [119, 120, 121, 122], "\ud835\uddbc\ud835\uddc8\ud835\uddc7\ud835\uddcc\ud835\uddc2\ud835\uddbd\ud835\uddbe\ud835\uddcb\ud835\uddbe\ud835\uddbd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddcf\ud835\uddba\ud835\uddc5\ud835\uddc2\ud835\uddbd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddce\ud835\uddc7\ud835\uddbd\ud835\uddbe\ud835\uddcb": [119, 120, 121, 122], "\ud835\uddcd\ud835\uddc1\ud835\uddc2\ud835\uddcc": [119, 120, 121, 122], "\ud835\uddcd\ud835\uddc1\ud835\uddbe\ud835\uddc8\ud835\uddcb\ud835\uddd2": [119, 120, 121, 122, 226, 227, 228, 229], "\ud835\udc4e\ud835\udc65\ud835\udc56\ud835\udc5c\ud835\udc5a": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udc56\ud835\udc5b\ud835\udc61\ud835\udc52\ud835\udc5f\ud835\udc5d\ud835\udc5f\ud835\udc52\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddba\ud835\uddc7": [119, 120, 121, 122, 209], "\ud835\udc56\ud835\udc5b\ud835\udc53\ud835\udc52\ud835\udc5f\ud835\udc52\ud835\udc5b\ud835\udc50\ud835\udc52": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udc5f\ud835\udc62\ud835\udc59\ud835\udc52": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddbd\ud835\uddbe\ud835\uddbf\ud835\uddc2\ud835\uddc7\ud835\uddbe\ud835\uddbd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddba\ud835\uddcc": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udcd0": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udc0f": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddf2\ud835\uddf9\ud835\uddee\ud835\uddef\ud835\uddfc\ud835\uddff\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [119, 120, 121, 122], "\ud835\ude00\ud835\uddf2\ud835\uddfe\ud835\ude02\ud835\uddf2\ud835\uddfb\ud835\uddf0\ud835\uddf2": [119, 120, 121, 122], "\ud835\udfed": [119, 120, 121, 122], "\ud835\uddd6\ud835\uddf9\ud835\uddee\ud835\ude00\ud835\ude00\ud835\uddf6\ud835\uddf0\ud835\uddee\ud835\uddf9": 119, "\ud835\uddf9\ud835\uddfc\ud835\uddf4\ud835\uddf6\ud835\uddf0": [119, 120, 121], "\ud835\uddd4\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udde3\ud835\udddf\ud835\udfed\ud835\udfee": 119, "\ud835\uddaa\u2080": 119, "\ud835\uddaf\ud835\uddab\u2081": [119, 120, 121], "\ud835\uddaf\ud835\uddab\u2081\u2082": 119, "\ud835\udc34": [119, 120, 121, 231], "\ud835\uddc2\ud835\uddc7\ud835\uddbc\ud835\uddc5\ud835\uddce\ud835\uddbd\ud835\uddbe\ud835\uddbd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddc9\ud835\uddc8\ud835\uddcc\ud835\uddcd\ud835\uddce\ud835\uddc5\ud835\uddba\ud835\uddcd\ud835\uddbe\ud835\uddbd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddff\ud835\ude02\ud835\uddf9\ud835\uddf2": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddba\ud835\uddc7\ud835\uddbd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udde3\ud835\uddff\ud835\uddfc\ud835\uddfd\ud835\uddfc\ud835\ude00\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udc43\u2082\u2083": [119, 122], "\ud835\udc00": [119, 120, 121], "\ud835\udde3\ud835\uddff\ud835\uddfc\ud835\uddfc\ud835\uddf3": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddc2\ud835\uddcc": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddbb\ud835\uddd2": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddee\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 231], "\ud835\uddc9\ud835\uddcb\ud835\uddc8\ud835\uddc9\ud835\uddc8\ud835\uddcc\ud835\uddc2\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7\ud835\uddba\ud835\uddc5": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 231], "\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6\ud835\uddce\ud835\uddc5\ud835\uddba": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 231], "\ud835\uddc2\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddcb\ud835\uddc9\ud835\uddcb\ud835\uddbe\ud835\uddcd\ud835\uddbe\ud835\uddbd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 231], "\ud835\uddbf\ud835\uddcb\ud835\uddc8\ud835\uddc6": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddcd\ud835\uddc1\ud835\uddba\ud835\uddcd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddba\ud835\uddd1\ud835\uddc2\ud835\uddc8\ud835\uddc6": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 231], "\ud835\uddb3\ud835\uddc1\ud835\uddbe\ud835\uddcb\ud835\uddbe\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddbe": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddcd\ud835\uddc1\ud835\uddbe": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddcb\ud835\uddce\ud835\uddc5\ud835\uddbe": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddc2\ud835\uddcd": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddbf\ud835\uddc8\ud835\uddc5\ud835\uddc5\ud835\uddc8\ud835\uddd0\ud835\uddcc": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "stabil": [119, 120, 121, 122, 193, 221, 222, 223, 226, 227, 228, 229, 231], "u3": [119, 201], "unari": [119, 120, 121, 122], "under": [119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 238, 239], "pl12": 119, "k0": 119, "pl1": [119, 120, 121], "p23": [119, 122], "therefor": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "qed": [119, 120, 121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddc6\ud835\uddc2\ud835\uddc7\ud835\uddc2\ud835\uddc6\ud835\uddba\ud835\uddc5": [120, 121], "\ud835\uddac\u2080": [120, 121], "\ud835\udcb0\u2082": [120, 200], "\ud835\udddc\ud835\uddfb\ud835\ude01\ud835\ude02\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\uddf6\ud835\ude00\ud835\ude01\ud835\uddf6\ud835\uddf0": 120, "\ud835\udde3\ud835\udddf\ud835\udfed\ud835\udfed": 120, "\ud835\uddaf\ud835\uddab\u2081\u2081": 120, "\ud835\udc35": [120, 121], "\ud835\udc43\u2082\u2082": [120, 122], "\ud835\udc01": [120, 121], "u2": 120, "pl11": 120, "j0": 120, "p22": [120, 122], "\ud835\udcb0\u2081": 121, "\ud835\udc5a\ud835\udc5c\ud835\udc51\ud835\udc62\ud835\udc60": [121, 122, 224, 225, 226, 227, 228, 229], "\ud835\udc5d\ud835\udc5c\ud835\udc5b\ud835\udc52\ud835\udc5b\ud835\udc60": [121, 122, 224, 226, 227, 228, 229], "\ud835\udc0f\u2083": [121, 122, 227, 229], "\ud835\udc10\u2082": [121, 122, 226, 227, 228, 229], "\ud835\udc63\ud835\udc4e\ud835\udc5f\ud835\udc56\ud835\udc4e\ud835\udc4f\ud835\udc59\ud835\udc52": [121, 122, 226, 227, 228, 229, 231], "\ud835\udc60\ud835\udc62\ud835\udc4f\ud835\udc60\ud835\udc61\ud835\udc56\ud835\udc61\ud835\udc62\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [121, 122, 218, 226, 227, 228, 229, 231], "\ud835\udc0f\u2081": [121, 122, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "\ud835\udc0e\u2081": [121, 122, 226, 227, 228, 229], "\ud835\udc10\u2081": [121, 122, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 224, 225, 226, 227, 228, 229], "\ud835\udde0\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\uddfa\ud835\uddee\ud835\uddf9": 121, "\ud835\uddd4\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa\ud835\ude00": 121, "\ud835\udde3\ud835\udddf\ud835\udfed": 121, "\ud835\udc43\u2081": [121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "\ud835\udde3\ud835\udddf\ud835\udfee": 121, "\ud835\uddaf\ud835\uddab\u2082": 121, "\ud835\udc43\u2082": [121, 122, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "\ud835\udde3\ud835\udddf\ud835\udfef": 121, "\ud835\uddaf\ud835\uddab\u2083": 121, "\ud835\udc36": 121, "\ud835\udc43\u2083": [121, 122, 204, 207, 208, 210, 213, 214, 215, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229], "\ud835\udc02": 121, "\ud835\udde3\ud835\udddf\ud835\udff0": 121, "\ud835\uddaf\ud835\uddab\u2084": 121, "\ud835\udc43\u2084": [121, 122, 208, 210, 226, 227, 228, 229], "\ud835\udde3\ud835\udddf\ud835\udff1": 121, "\ud835\uddaf\ud835\uddab\u2085": 121, "\ud835\udc43\u2085": [121, 122, 226, 227, 228, 229], "\ud835\udde3\ud835\udddf\ud835\udff2": 121, "\ud835\uddaf\ud835\uddab\u2086": 121, "\ud835\udc43\u2086": [121, 122, 226, 227, 228, 229], "\ud835\udde3\ud835\udddf\ud835\udff3": 121, "\ud835\uddaf\ud835\uddab\u2087": 121, "\ud835\udc43\u2087": [121, 122, 226, 227, 228, 229], "\ud835\udde3\ud835\udddf\ud835\udff4": 121, "\ud835\uddaf\ud835\uddab\u2088": 121, "\ud835\udc43\u2088": [121, 122, 226, 228], "\ud835\udde3\ud835\udddf\ud835\udff5": 121, "\ud835\uddaf\ud835\uddab\u2089": 121, "\ud835\udc43\u2089": [121, 122, 226, 228], "\ud835\udde3\ud835\udddf\ud835\udfed\ud835\udfec": 121, "\ud835\uddaf\ud835\uddab\u2081\u2080": 121, "\ud835\udc43\u2081\u2080": [121, 122], "\ud835\udfee": [121, 122], "\ud835\uddd9\ud835\uddf6\ud835\uddff\ud835\ude00\ud835\ude01": 121, "\ud835\uddf1\ud835\uddf2\ud835\uddff\ud835\uddf6\ud835\ude03\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": 121, "\ud835\udc43\u2081\u2081": [121, 122], "\ud835\udc29\u2081": 121, "\ud835\udc29\u2082": 121, "\ud835\udc43\u2081\u2082": [121, 122], "\ud835\udfef": [121, 122], "\ud835\udc43\u2081\u2083": [121, 122], "\ud835\udff0": [121, 122], "\ud835\udc43\u2081\u2084": [121, 122], "\ud835\udff1": [121, 122], "\ud835\udc43\u2081\u2085": [121, 122], "\ud835\udff2": [121, 122], "\ud835\udc43\u2081\u2086": [121, 122], "\ud835\udff3": 121, "\ud835\udc43\u2081\u2087": [121, 122], "\ud835\udff4": [121, 122], "\ud835\udc43\u2081\u2088": [121, 122], "\ud835\udff5": 121, "\ud835\udc43\u2081\u2089": [121, 122], "\ud835\udfed\ud835\udfec": 121, "\ud835\udc43\u2082\u2080": [121, 122], "\ud835\udfed\ud835\udfed": 121, "\ud835\udc43\u2082\u2081": [121, 122], "\ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddfd": [121, 122, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "u1": [121, 197, 200], "p3": [121, 122, 204, 207, 208, 210, 213, 214, 215, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229], "q2": [121, 122, 226, 227, 228, 229], "p1": [121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "o1": [121, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "q1": [121, 122, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 224, 225, 226, 227, 228, 229], "m0": 121, "pl2": 121, "p2": [121, 122, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "pl3": 121, "pl4": 121, "p4": [121, 122, 208, 210, 226, 227, 228, 229], "pl5": 121, "p5": [121, 122, 226, 227, 228, 229], "pl6": 121, "p6": [121, 122, 226, 227, 228, 229], "pl7": 121, "p7": [121, 122, 226, 227, 228, 229], "pl8": 121, "pl9": 121, "p9": [121, 122, 226, 228], "pl10": 121, "p10": [121, 122, 226, 228], "p11": [121, 122], "p12": [121, 122], "p13": [121, 122], "p14": [121, 122], "p15": [121, 122], "p16": [121, 122], "p17": [121, 122], "p18": [121, 122], "9": 121, "p19": [121, 122], "p20": [121, 122], "p21": [121, 122], "prop": [121, 122, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\uddaf\ud835\uddbe\ud835\uddba\ud835\uddc7\ud835\uddc8": 122, "\ud835\uddba\ud835\uddd1\ud835\uddc2\ud835\uddc8\ud835\uddc6\ud835\uddcc": 122, "\ud835\udc5b\ud835\udc4e\ud835\udc61\ud835\udc62\ud835\udc5f\ud835\udc4e\ud835\udc59": 122, "\ud835\udc5b\ud835\udc62\ud835\udc5a\ud835\udc4f\ud835\udc52\ud835\udc5f": 122, "\ud835\udcb0\u2084": [122, 201], "\ud835\udc3c\ud835\udc5b\ud835\udc50": [122, 221, 222, 223, 226, 227, 228, 229], "\ud835\udc56\ud835\udc60": 122, "\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc57\ud835\udc62\ud835\udc5b\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [122, 205, 206, 207, 226, 228], "\ud835\udc56\ud835\udc5b\ud835\udc61\ud835\udc5f\ud835\udc5c\ud835\udc51\ud835\udc62\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [122, 204, 207, 211, 212, 217, 221, 222, 223, 226, 227, 228, 229], "\ud835\udc0f\u2088": 122, "\ud835\udc10\u2085": 122, "\ud835\udc51\ud835\udc52\ud835\udc53\ud835\udc56\ud835\udc5b\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [122, 209], "\ud835\udcd3": [122, 209], "\ud835\udc31": [122, 194, 209, 230, 231], "\ud835\udc32": [122, 209, 230, 231], "\ud835\udc52\ud835\udc5e\ud835\udc62\ud835\udc4e\ud835\udc59": [122, 218], "\ud835\udc61\ud835\udc52\ud835\udc5f\ud835\udc5a\ud835\udc60": [122, 218], "\ud835\udc0f\u2086": [122, 227, 229], "\ud835\udc31\u2083": 122, "\ud835\udc32\u2083": 122, "\ud835\udc10\u2084": [122, 227, 229], "\ud835\udc52\ud835\udc5e\ud835\udc62\ud835\udc4e\ud835\udc59\ud835\udc56\ud835\udc61\ud835\udc66": [122, 219], "\ud835\udc50\ud835\udc5c\ud835\udc5a\ud835\udc5a\ud835\udc62\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc56\ud835\udc61\ud835\udc66": [122, 219], "\ud835\udc31\u2081": [122, 218, 219, 226, 227, 228, 229], "\ud835\udc32\u2081": [122, 218, 219, 226, 227, 228, 229], "\ud835\udc56\ud835\udc5b\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc60\ud835\udc56\ud835\udc60\ud835\udc61\ud835\udc52\ud835\udc5b\ud835\udc50\ud835\udc66": [122, 221, 222, 223, 226, 227, 228, 229], "\ud835\udc0f\u2089": 122, "\ud835\udc10\u2086": 122, "\ud835\udcaf\u2081": [122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udc5d\ud835\udc5f\ud835\udc5c\ud835\udc5c\ud835\udc53": [122, 226, 227, 228, 229], "\ud835\udc4f\ud835\udc66": [122, 226, 227, 228, 229], "\ud835\udc5f\ud835\udc52\ud835\udc53\ud835\udc62\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [122, 228, 229], "\ud835\udc07\u2081": [122, 226, 227, 228, 229], "\ud835\udc53\ud835\udc5c\ud835\udc5f\ud835\udc5a\ud835\udc62\ud835\udc59\ud835\udc4e\ud835\udc61\ud835\udc52": [122, 226, 227, 228, 229], "\ud835\udc31\u2087": 122, "\ud835\udc32\u2087": 122, "\ud835\udde7\ud835\uddf5\ud835\uddf2": 122, "\ud835\uddfb\ud835\uddee\ud835\ude01\ud835\ude02\ud835\uddff\ud835\uddee\ud835\uddf9": 122, "\ud835\uddfb\ud835\ude02\ud835\uddfa\ud835\uddef\ud835\uddf2\ud835\uddff\ud835\ude00": 122, "\ud835\uddfd\ud835\uddf2\ud835\uddee\ud835\uddfb\ud835\uddfc": 122, "\ud835\uddee\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa\ud835\ude00": 122, "\ud835\udddc\ud835\uddfb\ud835\uddf3\ud835\uddfc\ud835\uddff\ud835\uddfa\ud835\uddee\ud835\uddf9": 122, "\ud835\uddf1\ud835\uddf2\ud835\uddf3\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": 122, "\ud835\uddfc\ud835\uddf3": 122, "\ud835\uddfb\ud835\ude02\ud835\uddfa\ud835\uddef\ud835\uddf2\ud835\uddff": 122, "\ud835\udc34\u2081": [122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "\ud835\udc9c\u2081": [122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "\ud835\udfe2": 122, "\ud835\ude2a\ud835\ude34": [122, 226, 227, 228, 229], "\ud835\ude22": 122, "\ud835\ude2f\ud835\ude22\ud835\ude35\ud835\ude36\ud835\ude33\ud835\ude22\ud835\ude2d": 122, "\ud835\ude2f\ud835\ude36\ud835\ude2e\ud835\ude23\ud835\ude26\ud835\ude33": 122, "\ud835\udc34\u2082": [122, 226, 227, 228, 229], "\ud835\udc9c\u2082": [122, 226, 227, 228, 229], "\ud835\ude10\ud835\ude27": 122, "\ud835\ude2f": 122, "\ud835\ude35\ud835\ude29\ud835\ude26\ud835\ude2f": 122, "\ud835\udc27\u2081": 122, "\ud835\uddd7\ud835\uddf2\ud835\uddf3\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [122, 209], "\ud835\udc37\u2081": [122, 209], "\ud835\udc9f\u2081": [122, 209], "\ud835\ude1e\ud835\ude26": 122, "\ud835\ude25\ud835\ude26\ud835\ude27\ud835\ude2a\ud835\ude2f\ud835\ude26": 122, "\ud835\udfe3": 122, "\ud835\ude35\ud835\ude30": [122, 226, 228, 231], "\ud835\ude23\ud835\ude26": 122, "\ud835\ude35\ud835\ude29\ud835\ude26": 122, "\ud835\udfe4": 122, "\ud835\udfe5": 122, "\ud835\ude26\ud835\ude35\ud835\ude24": 122, "\ud835\ude10\ud835\ude2f": 122, "\ud835\ude30\ud835\ude35\ud835\ude29\ud835\ude26\ud835\ude33": 122, "\ud835\ude38\ud835\ude30\ud835\ude33\ud835\ude25\ud835\ude34": 122, "\ud835\ude35\ud835\ude29\ud835\ude2a\ud835\ude34": 122, "\ud835\ude35\ud835\ude26\ud835\ude39\ud835\ude35": 122, "\ud835\ude10": 122, "\ud835\ude36\ud835\ude34\ud835\ude26": 122, "\ud835\ude39": 122, "\ud835\ude3a": 122, "\ud835\ude25\ud835\ude26\ud835\ude2f\ud835\ude30\ud835\ude35\ud835\ude26": 122, "\ud835\ude34\ud835\ude35\ud835\ude22\ud835\ude35\ud835\ude26\ud835\ude2e\ud835\ude26\ud835\ude2f\ud835\ude35": 122, "\ud835\ude35\ud835\ude29\ud835\ude22\ud835\ude35": 122, "\ud835\ude25\ud835\ude26\ud835\ude27\ud835\ude2a\ud835\ude2f\ud835\ude26\ud835\ude25": 122, "\ud835\ude26\ud835\ude32\ud835\ude36\ud835\ude22\ud835\ude2d": 122, "\ud835\uddf6\ud835\ude00": 122, "\ud835\uddee": 122, "\ud835\udc43\u2082\u2084": 122, "\ud835\udc43\u2082\u2085": 122, "\ud835\udc43\u2082\u2086": 122, "\ud835\udc34\u2083": 122, "\ud835\udc9c\u2083": 122, "\ud835\ude2f\ud835\ude30\ud835\ude35": 122, "\ud835\ude34\ud835\ude36\ud835\ude24\ud835\ude24\ud835\ude26\ud835\ude34\ud835\ude34\ud835\ude30\ud835\ude33": 122, "\ud835\ude30\ud835\ude27": 122, "\ud835\ude22\ud835\ude2f\ud835\ude3a": 122, "\ud835\ude2a": 122, "\ud835\ude26": 122, "\ud835\ude38\ud835\ude26": 122, "\ud835\ude29\ud835\ude22\ud835\ude37\ud835\ude26": 122, "\ud835\ude27\ud835\ude30\ud835\ude33": [122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229], "\ud835\ude26\ud835\ude37\ud835\ude26\ud835\ude33\ud835\ude3a": 122, "\ud835\udc43\u2082\u2087": 122, "\ud835\udc27\u2082": 122, "\ud835\uddfb\ud835\uddfc\ud835\ude01": 122, "\ud835\uddf2\ud835\uddfe\ud835\ude02\ud835\uddee\ud835\uddf9": 122, "\ud835\ude01\ud835\uddfc": 122, "\ud835\udfec": 122, "\ud835\udc43\u2082\u2088": 122, "\ud835\udc43\u2082\u2089": 122, "\ud835\udc43\u2083\u2080": 122, "\ud835\udc34\u2084": 122, "\ud835\udc9c\u2084": 122, "\ud835\ude0b\ud835\ude2a\ud835\ude27\ud835\ude27\ud835\ude26\ud835\ude33\ud835\ude26\ud835\ude2f\ud835\ude35": 122, "\ud835\ude2f\ud835\ude36\ud835\ude2e\ud835\ude23\ud835\ude26\ud835\ude33\ud835\ude34": 122, "\ud835\ude2e\ud835\ude36\ud835\ude34\ud835\ude35": 122, "\ud835\ude25\ud835\ude2a\ud835\ude27\ud835\ude27\ud835\ude26\ud835\ude33\ud835\ude26\ud835\ude2f\ud835\ude35": 122, "\ud835\ude34\ud835\ude36\ud835\ude24\ud835\ude24\ud835\ude26\ud835\ude34\ud835\ude34\ud835\ude30\ud835\ude33\ud835\ude34": 122, "\ud835\ude2a\ud835\ude27": 122, "\ud835\ude2e": 122, "\ud835\ude22\ud835\ude33\ud835\ude26": 122, "\ud835\ude22\ud835\ude2f\ud835\ude25": 122, "\ud835\ude0c\ud835\ude32\ud835\ude36\ud835\ude2a\ud835\ude37\ud835\ude22\ud835\ude2d\ud835\ude26\ud835\ude2f\ud835\ude35\ud835\ude2d\ud835\ude3a": 122, "\ud835\udc43\u2083\u2081": 122, "\ud835\udc27\u2083": 122, "\ud835\udc26\u2081": 122, "\ud835\udc43\u2083\u2082": 122, "\ud835\udc27\u2084": 122, "\ud835\udc26\u2082": 122, "\ud835\udc43\u2083\u2083": 122, "\ud835\udc43\u2083\u2084": 122, "\ud835\udc43\u2083\u2085": 122, "\ud835\udc43\u2083\u2086": 122, "\ud835\udc43\u2083\u2087": 122, "\ud835\udc43\u2083\u2088": 122, "\ud835\udc43\u2083\u2089": 122, "\ud835\udc43\u2084\u2080": 122, "\ud835\udc43\u2084\u2081": 122, "\ud835\udc43\u2084\u2082": 122, "\ud835\udc43\u2084\u2083": 122, "\ud835\udc43\u2084\u2084": 122, "\ud835\udc43\u2084\u2085": 122, "\ud835\udc43\u2084\u2086": 122, "\ud835\udc43\u2084\u2087": 122, "\ud835\udc43\u2084\u2088": 122, "\ud835\udc43\u2084\u2089": 122, "\ud835\udc43\u2085\u2080": 122, "\ud835\udc43\u2085\u2081": 122, "\ud835\udc43\u2085\u2082": 122, "\ud835\uddef\ud835\ude06": 122, "\ud835\uddf0\ud835\uddfc\ud835\uddfb\ud835\ude01\ud835\uddff\ud835\uddee\ud835\uddf1\ud835\uddf6\ud835\uddf0\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": 122, "\ud835\udddb\ud835\ude06\ud835\uddfd\ud835\uddfc\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\ude00\ud835\uddf6\ud835\ude00": [122, 226, 227, 228, 229], "\ud835\udc3b\u2081": [122, 226, 227, 228, 229], "\ud835\udc43\u2086\u2086": 122, "\u210b\u2081": [122, 226, 227, 228, 229], "\ud835\udc43\u2086\u2087": 122, "\ud835\uddd7\ud835\uddf6\ud835\uddff\ud835\uddf2\ud835\uddf0\ud835\ude01": 122, "\ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddfc\ud835\uddf3": 122, "\ud835\udc43\u2086\u2088": 122, "\ud835\udc43\u2086\u2089": 122, "\ud835\udc43\u2087\u2080": 122, "\ud835\udc43\u2087\u2081": 122, "\ud835\udc43\u2087\u2082": 122, "\ud835\udc43\u2087\u2083": 122, "\ud835\udc43\u2087\u2084": 122, "\ud835\ude01\ud835\uddf5\ud835\uddf2": 122, "\ud835\uddfd\ud835\uddff\ud835\uddf6\ud835\uddfb\ud835\uddf0\ud835\uddf6\ud835\uddfd\ud835\uddf9\ud835\uddf2": 122, "\ud835\uddfa\ud835\uddee\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\uddfa\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddf0\ud835\uddee\ud835\uddf9": 122, "\ud835\uddf6\ud835\uddfb\ud835\uddf1\ud835\ude02\ud835\uddf0\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": 122, "\ud835\ude00\ud835\uddf0\ud835\uddf5\ud835\uddf2\ud835\uddfa\ud835\uddee": 122, "\ud835\udc34\u2086": 122, "principl": 122, "induct": 122, "\ud835\udc9c\u2086": 122, "\ud835\ude13\ud835\ude26\ud835\ude35": 122, "\ud835\ude17": 122, "\ud835\ude31\ud835\ude33\ud835\ude30\ud835\ude31\ud835\ude26\ud835\ude33\ud835\ude35\ud835\ude3a": 122, "\ud835\ude31\ud835\ude26\ud835\ude33\ud835\ude35\ud835\ude22\ud835\ude2a\ud835\ude2f\ud835\ude2a\ud835\ude2f\ud835\ude28": 122, "\ud835\ude1a\ud835\ude36\ud835\ude31\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude26": 122, "\ud835\ude16": 122, "\ud835\ude35\ud835\ude33\ud835\ude36\ud835\ude26": [122, 226, 227, 228, 229], "\ud835\ude34\ud835\ude36\ud835\ude31\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude26": 122, "\ud835\ude38\ud835\ude29\ud835\ude26\ud835\ude2f\ud835\ude26\ud835\ude37\ud835\ude26\ud835\ude33": 122, "\ud835\ude22\ud835\ude2d\ud835\ude34\ud835\ude30": 122, "\ud835\ude1b\ud835\ude29\ud835\ude26\ud835\ude2f": 122, "\ud835\udc43\u2087\u2085": 122, "\ud835\udc27\u2085": 122, "\ud835\udc0f\u2081\u2080": [122, 226, 228], "\ud835\udc26\u2083": 122, "\ud835\ude00\ud835\ude06\ud835\ude00\ud835\ude01\ud835\uddf2\ud835\uddfa": 122, "\ud835\uddfb": 122, "\ud835\udde5\ud835\uddf2\ud835\uddf0\ud835\ude02\ud835\uddff\ud835\ude00\ud835\uddf6\ud835\ude03\ud835\uddf2": 122, "\ud835\uddf1\ud835\uddf2\ud835\uddf3\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00": 122, "\ud835\uddf1\ud835\uddf2\ud835\uddf3": [122, 209], "\ud835\uddc2\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddcb\ud835\uddc9\ud835\uddcb\ud835\uddbe\ud835\uddcd\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [122, 209], "\ud835\uddc8\ud835\uddbf": [122, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 228], "\ud835\uddbd\ud835\uddbe\ud835\uddbf\ud835\uddc2\ud835\uddc7\ud835\uddc2\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [122, 209], "\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6": [122, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 228], "\ud835\uddb3\ud835\uddc1\ud835\uddc2\ud835\uddcc": [122, 226, 227, 228, 229], "\ud835\uddc1\ud835\uddd2\ud835\uddc9\ud835\uddc8\ud835\uddcd\ud835\uddc1\ud835\uddbe\ud835\uddcc\ud835\uddc2\ud835\uddcc": [122, 226, 227, 228, 229], "\ud835\uddbe\ud835\uddc5\ud835\uddba\ud835\uddbb\ud835\uddc8\ud835\uddcb\ud835\uddba\ud835\uddcd\ud835\uddbe\ud835\uddbd": [122, 226, 227, 228, 229], "\ud835\udc77": [122, 221, 222, 223, 226, 227, 228, 229], "\ud835\udc78": [122, 222, 227, 229], "\ud835\udc43\u2086\u2085": 122, "\ud835\uddf5\ud835\ude06\ud835\uddfd": [122, 226, 227, 228, 229], "u4": 122, "q5": 122, "x3": 122, "y3": 122, "q4": [122, 227, 229], "x1": [122, 218, 219, 226, 227, 228, 229], "y1": [122, 218, 219, 226, 227, 228, 229], "q6": 122, "t1": [62, 122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "h1": [122, 226, 227, 228, 229], "formul": [122, 226, 227, 228, 229], "x7": 122, "y7": 122, "a1": [122, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "a2": [122, 226, 227, 228, 229], "n1": 122, "d1": [122, 209], "etc": 122, "p24": 122, "p25": 122, "p26": 122, "a3": 122, "p27": 122, "n2": 122, "p28": 122, "p29": 122, "p30": 122, "a4": 122, "p31": 122, "n3": 122, "m1": 122, "p32": 122, "n4": 122, "m2": 122, "p33": 122, "p34": 122, "p35": 122, "p36": 122, "p37": 122, "p38": 122, "p39": 122, "p40": 122, "p41": 122, "p42": 122, "p43": 122, "p44": 122, "p45": 122, "p46": 122, "p47": 122, "p48": 122, "p49": 122, "p50": 122, "p51": 122, "p52": 122, "p66": 122, "p67": 122, "direct": 122, "p68": 122, "p69": 122, "p70": 122, "p71": 122, "p72": 122, "p73": 122, "p74": 122, "a6": 122, "pertain": 122, "suppos": 122, "also": 122, "Then": 122, "p75": 122, "n5": 122, "m3": 122, "recurs": 122, "def": [122, 209], "p65": 122, "hyp": [122, 226, 227, 228, 229], "kei": [123, 124, 238], "section": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 238], "model": [45, 50, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "target": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "instanci": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "expos": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196], "automat": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 230], "access": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196], "echo": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "none": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "add": [127, 129, 146], "data": [45, 127, 129, 137, 146, 179, 194], "assur": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196], "p_implies_q": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 200, 204, 208, 210, 220, 224, 225, 226, 227, 228, 229], "union": [127, 129, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 181, 183, 185, 187, 189, 191, 195], "theoreticalobject": [], "formulastat": [127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 181, 183, 185, 187, 189, 191, 195], "alia": [127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 181, 183, 185, 187, 189, 191, 195], "field": [127, 129, 131, 133, 135, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 181, 183, 185, 187, 189, 191, 195], "construct_formula": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "return": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "infer_formula_stat": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "former": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "produc": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "later": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "take": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196], "exampl": [62, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "requir": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "One": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 238, 239], "pass": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 227], "On": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "hand": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "scenarii": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "build": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "same": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 230], "formula_stat": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "theoryelaborationsequ": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 182, 184, 186, 188, 190, 192, 196], "check_premises_valid": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "constructor": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "execut": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "case": [62, 65, 128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 178, 179, 182, 184, 186, 188, 190, 192, 194, 196, 230, 236], "succe": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "fail": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "rais": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "punctiliousexcept": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 179, 182, 184, 186, 188, 190, 192, 196], "bool": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 176, 177, 179, 180, 182, 184, 186, 188, 190, 192, 193, 194, 196], "overrid": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 182, 184, 186, 188, 190, 192, 196], "inherit": [128, 129, 130, 132, 134, 136, 139, 141, 143, 145, 146, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 182, 184, 186, 188, 190, 192, 196], "ref": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 180, 182, 184, 186, 188, 190, 192, 193, 196], "paragraph_head": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 180, 182, 184, 186, 188, 190, 192, 193, 196], "subtitl": [128, 130, 132, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 180, 182, 184, 186, 188, 190, 192, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "axiom_interpret": [129, 130, 178, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "axiominterpret": 129, "verif": [129, 146], "lock": [129, 130, 146, 147, 193, 204, 207, 208, 210, 213, 214, 215, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231], "flexibleaxiom": 129, "flexibleformula": [129, 146], "namedtupl": [129, 146], "behind": [129, 146], "scene": [129, 146], "structur": [129, 146], "manipul": [129, 146], "axiomdeclar": [129, 193], "axiominclus": 129, "str": [129, 146], "compose_paragraph_proof": [130, 143, 147, 151, 153, 163, 177, 196], "compos": [62, 65, 130, 143, 147, 151, 153, 163, 177, 179, 196], "forbid": [130, 147], "biconditional_elimination_1": [131, 132, 178, 202], "acronym": [131, 133, 135, 138, 140, 160, 177, 179, 180, 193, 194], "be1": [131, 237], "p_iff_q": [131, 132, 133, 134, 202, 203], "biconditional_elimination_2": [133, 134, 178, 203], "ber": [133, 178], "biconditional_introduct": [135, 136, 178, 204], "bi": [135, 178, 204, 237], "q_implies_p": [135, 136, 204], "conjunction_elimination_1": [138, 139, 178, 205], "cel": [138, 178], "p_and_q": [138, 139, 140, 141, 205, 206], "conjunction_elimination_2": [140, 141, 178, 206], "cer": [140, 160, 178], "p_land_q": [140, 160], "conjunction_introduct": [142, 143, 178, 207, 226, 228], "constructive_dilemma": [144, 145, 178, 208], "r_implies_": [144, 145, 148, 149, 208, 210], "p_or_r": [144, 145, 208], "definition_interpret": [146, 147, 178, 209], "definitioninterpret": 146, "flexibledefinit": 146, "definitiondeclar": [146, 193], "definitioninclus": 146, "destructive_dilemma": [148, 149, 178, 210], "not_q_or_not_": [148, 149, 210], "disjunction_introduction_1": [150, 151, 211], "disjunction_introduction_2": [152, 153, 212], "disjunctive_resolut": [154, 155, 213], "p_or_q": [154, 155, 156, 157, 158, 159, 213, 214, 215], "not_p_or_r": [154, 155, 213], "disjunctive_syllogism_1": [156, 157, 214], "not_p": [156, 157, 170, 171, 214, 221, 226, 228], "disjunctive_syllogism_2": [158, 159, 215], "not_q": [158, 159, 183, 184, 215, 225], "double_negation_elimin": [160, 161, 178, 216], "not_not_p": [160, 161, 216], "equal_terms_substitut": [164, 165, 218], "x_equal_i": [164, 165, 166, 167, 172, 173, 218, 219, 222, 227, 229], "equality_commut": [166, 167, 219], "hypothetical_syllog": [168, 169, 220], "q_implies_r": [168, 169, 220], "inconsistency_introduction_1": [170, 171, 221, 226, 228], "theoryderiv": [170, 172, 174, 193], "inconsistency_introduction_2": [172, 173, 222, 227, 229], "x_unequal_i": [172, 173, 222, 227, 229], "inconsistency_introduction_3": [174, 175, 223], "x_unequal_x": [174, 175, 223], "complement": [176, 178], "conveni": [176, 178], "catalog": [176, 178], "nativ": [176, 178], "is_strictly_proposit": [176, 177, 179, 180, 193, 194], "By": [176, 177, 179, 180, 226, 227, 228, 229], "compose_paragraph_proof_method": 177, "auto_index": [177, 180, 193, 194, 227, 230], "dashed_nam": [177, 179, 180, 193, 194], "abridged_nam": [177, 179, 180, 193, 194], "explicit_nam": [177, 179, 180, 193, 194], "nameset": [177, 179, 180, 193, 194], "kwarg": [177, 179, 180], "yield": [177, 179, 180, 193], "demonstr": [177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "overridden": 177, "compose_report": [177, 179, 180], "otherwis": [177, 179, 180, 193, 194], "print": [177, 226, 230], "consol": 177, "sy": 177, "stdout": 177, "absorb": 178, "unabridg": [178, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 237], "abridg": [178, 193, 237], "\ud835\udc9c": [178, 231], "bel": 178, "cd": [178, 237], "universe_of_discours": [178, 193], "inference_rul": [178, 180, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "ci": [178, 237], "\ud835\udc9f": 178, "dne": [178, 237], "dni": [178, 237], "modus_ponen": [178, 181, 182, 224, 226, 227, 228, 229], "mp": [178, 237], "implic": [65, 178, 226, 227, 228, 229, 231], "result": 178, "extract": 178, "valu": [178, 194], "pbc": 178, "proof_by_contradict": 178, "pbr": 178, "proof_by_refut": 178, "proof_by_contradiction_1": [178, 185, 186, 226], "proof_by_refutation_1": [178, 189, 190, 228], "variable_substitut": [178, 195, 196, 226, 227, 228, 229, 231], "compose_class": 179, "default": 179, "echo_proof": [180, 226, 227], "upon": 180, "modus_tollen": [183, 184, 225], "inc_h": [185, 186, 187, 188, 189, 190, 191, 192, 226, 227, 228, 229], "proof_by_contradiction_2": [187, 188, 227], "proof_by_refutation_2": [191, 192, 229], "cross_reference_axiom": 193, "cross_reference_definit": 193, "cross_reference_formula": 193, "cross_reference_inference_rul": 193, "ir": 193, "cross_reference_rel": [], "cross_reference_simple_objct": 193, "objct": 193, "simpleobjct": 193, "cross_reference_symbolic_objct": 193, "cross_reference_theori": 193, "declare_axiom": [193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "natural_languag": [193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "declare_definit": [193, 209], "declare_formula": 193, "lock_variable_scop": [193, 230], "shortcut": 193, "self": [193, 194], "state": 193, "becaus": [193, 221, 222, 223], "declare_theori": 193, "extended_theori": 193, "extended_theory_limit": 193, "is_theory_foundation_system": 193, "declare_vari": [193, 230], "freevari": [193, 194], "f": [193, 218, 226, 227, 228, 229, 230, 231], "elaborate_formula": 193, "get_symbol_max_index": 193, "highest": 193, "int": 193, "index_symbol": 193, "unindex": 193, "uniqu": 193, "integ": 193, "identifi": 193, "styledtext": 193, "simple_objct": 193, "connectivedict": 193, "directli": 193, "avail": 193, "take_not": 193, "comment": 193, "remark": 193, "with_vari": [193, 226, 227, 228, 229, 230, 231], "expect": 193, "scope": [193, 194, 230], "v": [65, 193, 237], "extens": 193, "expressli": [193, 230], "instead": 193, "statu": 194, "Being": 194, "posit": [194, 228, 229], "is_masked_formula_similar_to": 194, "mask": 194, "_valu": 194, "o\u2081": 194, "o\u2082": 194, "\ud835\udc0c": 194, "similar": 194, "weaker": 194, "condit": 194, "strictli": 194, "observ": 194, "compon": 194, "similitud": 194, "reflex": 194, "symmetr": 194, "transit": 194, "obviou": 194, "counterexampl": 194, "why": 194, "strict": 194, "constraint": 194, "impos": 194, "through": 194, "non": 194, "simplest": 197, "pu": [197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "insert": 197, "pip": 198, "download": 198, "infer_stat": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "create_univers": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "sake": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "o2": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231], "o3": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 224, 225, 226, 228, 230, 231], "r1": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225], "signal_proposit": [200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 231], "r2": [200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 218, 219, 220, 224, 225], "dummi": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "necessari": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 228, 231], "theory_axiom": [200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229], "include_axiom": [200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "proposition_of_interest": [200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "html": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "\ud835\udc62\ud835\udc5b\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc60\ud835\udc52": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "\ud835\udc5c\ud835\udc53": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc50\ud835\udc5c\ud835\udc62\ud835\udc5f\ud835\udc60\ud835\udc52": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "\ud835\udc61\u210e\ud835\udc52\ud835\udc5c\ud835\udc5f\ud835\udc66": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\udc51\ud835\udc52\ud835\udc5f\ud835\udc56\ud835\udc63\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\ude0b\ud835\ude36\ud835\ude2e\ud835\ude2e\ud835\ude3a": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\ude22\ud835\ude39\ud835\ude2a\ud835\ude30\ud835\ude2e": [200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "\ud835\ude25\ud835\ude26\ud835\ude2e\ud835\ude30\ud835\ude2f\ud835\ude34\ud835\ude35\ud835\ude33\ud835\ude22\ud835\ude35\ud835\ude2a\ud835\ude30\ud835\ude2f": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229], "\ud835\ude31\ud835\ude36\ud835\ude33\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude26\ud835\ude34": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229], "\ud835\udc5f\u2081": [200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 216, 217, 218, 219, 220, 221, 224, 225], "\ud835\udc5c\u2081": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "\ud835\udc5c\u2082": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229], "\ud835\udc5f\u2082": [200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 218, 219, 220, 224, 225], "\ud835\udc5c\u2083": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 224, 225, 226, 228], "\ud835\udc4e\ud835\udc4f\ud835\udc60\ud835\udc5c\ud835\udc5f\ud835\udc5d\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": 200, "\ud835\uddba\ud835\uddc9\ud835\uddc9\ud835\uddc5\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": 200, "\ud835\udc3c\u2082": 200, "i2": [200, 226], "Will": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "phi1": [202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215], "\ud835\udcb0\u2086": 202, "\ud835\udc4f\ud835\udc56\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b\ud835\udc4e\ud835\udc59": [202, 203, 204], "\ud835\udc52\ud835\udc59\ud835\udc56\ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [202, 203, 205, 206, 216], "u5": 202, "\ud835\udcb0\u2088": 203, "u7": 203, "phi2": [204, 207, 208, 210, 213, 214, 215], "biconditional_infer": 204, "\ud835\udcb0\u2081\u2080": 204, "u9": 204, "\ud835\udcb0\u2081\u2082": 205, "u11": 205, "\ud835\udcb0\u2081\u2084": 206, "u13": 206, "\ud835\udcb0\u2081\u2086": 207, "u15": 207, "constructive_": 208, "o4": [208, 210, 213, 214, 215], "phi3": [208, 210], "\ud835\udcb0\u2081\u2088": 208, "\ud835\udc5c\u2084": [208, 210, 214, 215], "\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc60\ud835\udc61\ud835\udc5f\ud835\udc62\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52": 208, "\ud835\udc51\ud835\udc56\ud835\udc59\ud835\udc52\ud835\udc5a\ud835\udc5a\ud835\udc4e": [208, 210], "\ud835\udc11\u2081": [208, 210, 213, 220], "\ud835\udc12\u2081": [208, 210], "u17": 208, "s1": [208, 210], "theory_definit": 209, "include_definit": 209, "\ud835\udcb0\u2082\u2080": 209, "\ud835\ude25\ud835\ude26\ud835\ude27\ud835\ude2a\ud835\ude2f\ud835\ude2a\ud835\ude35\ud835\ude2a\ud835\ude30\ud835\ude2f": 209, "u19": 209, "\ud835\udcb0\u2082\u2082": 210, "\ud835\udc51\ud835\udc52\ud835\udc60\ud835\udc61\ud835\udc5f\ud835\udc62\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52": 210, "u21": 210, "\ud835\udcb0\u2082\u2084": 211, "\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc57\ud835\udc62\ud835\udc5b\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [211, 212], "\ud835\uddc0\ud835\uddc2\ud835\uddcf\ud835\uddbe\ud835\uddc7": [211, 212, 213, 214, 215], "u23": 211, "\ud835\udcb0\u2082\u2086": 212, "u25": 212, "\ud835\udcb0\u2082\u2088": 213, "\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc57\ud835\udc62\ud835\udc5b\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52": [213, 214, 215], "\ud835\udc5f\ud835\udc52\ud835\udc60\ud835\udc5c\ud835\udc59\ud835\udc62\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": 213, "u27": 213, "\ud835\udcb0\u2083\u2080": 214, "\ud835\udc60\ud835\udc66\ud835\udc59\ud835\udc59\ud835\udc5c\ud835\udc54\ud835\udc56\ud835\udc60\ud835\udc5a": [214, 215, 220], "u29": 214, "\ud835\udcb0\u2083\u2082": 215, "u31": 215, "\ud835\udcb0\u2083\u2084": 216, "\ud835\udc51\ud835\udc5c\ud835\udc62\ud835\udc4f\ud835\udc59\ud835\udc52": [216, 217], "\ud835\udc5b\ud835\udc52\ud835\udc54\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [216, 217], "u33": 216, "\ud835\udcb0\u2083\u2086": 217, "u35": 217, "proposition_x_equal_i": 218, "dummy_proposit": 218, "et": [218, 237], "\ud835\udcb0\u2084\u2080": 218, "u39": 218, "\ud835\udcb0\u2083\u2088": 219, "u37": 219, "\ud835\udcb0\u2085\u2082": 220, "\u210e\ud835\udc66\ud835\udc5d\ud835\udc5c\ud835\udc61\u210e\ud835\udc52\ud835\udc61\ud835\udc56\ud835\udc50\ud835\udc4e\ud835\udc59": 220, "u51": 220, "t2": [62, 221, 222, 223], "could": [221, 222, 223], "own": [221, 222, 223], "\ud835\udcb0\u2085\u2084": 221, "\ud835\udcaf\u2082": [221, 222, 223], "\ud835\uddd0\ud835\uddc1\ud835\uddc2\ud835\uddbc\ud835\uddc1": [221, 223, 226, 228], "u53": 221, "unequ": [222, 223], "\ud835\udcb0\u2085\u2086": 222, "u55": 222, "\ud835\udcb0\u2085\u2088": 223, "u57": 223, "\ud835\udcb0\u2086\u2080": 224, "u59": 224, "\ud835\udcb0\u2086\u2082": 225, "\ud835\udc61\ud835\udc5c\ud835\udc59\ud835\udc59\ud835\udc52\ud835\udc5b\ud835\udc60": 225, "u61": 225, "ground": [226, 228, 231], "configur": [226, 227, 230], "z": [226, 228], "pose_hypothesi": [226, 227, 228, 229], "hypothesis_formula": [226, 227, 228, 229], "child_theori": [226, 227, 228, 229], "iterate_statements_in_theory_chain": 226, "h_inconsist": [226, 227, 228, 229], "child_stat": [226, 227, 228, 229], "\ud835\udcb0\u2086\u2086": 226, "\ud835\ude26\ud835\ude34\ud835\ude35\ud835\ude22\ud835\ude23\ud835\ude2d\ud835\ude2a\ud835\ude34\ud835\ude29": [226, 228, 231], "\ud835\ude34\ud835\ude30\ud835\ude2e\ud835\ude26": [226, 228, 231], "\ud835\ude28\ud835\ude33\ud835\ude30\ud835\ude36\ud835\ude2f\ud835\ude25": [226, 228, 231], "\ud835\ude31\ud835\ude33\ud835\ude30\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude2a\ud835\ude35\ud835\ude2a\ud835\ude30\ud835\ude2f\ud835\ude34": [226, 228, 231], "\ud835\udc53\u2081": [226, 228, 229], "\ud835\udc33\u2081": [226, 228], "\ud835\ude09\ud835\ude3a": [226, 227, 228, 229], "\ud835\ude29\ud835\ude3a\ud835\ude31\ud835\ude30\ud835\ude35\ud835\ude29\ud835\ude26\ud835\ude34\ud835\ude2a\ud835\ude34": [226, 227, 228, 229], "\ud835\ude22\ud835\ude34\ud835\ude34\ud835\ude36\ud835\ude2e\ud835\ude26": [226, 227, 228, 229], "i1": 226, "\ud835\udc0f\u2082": [226, 228], "\ud835\udc0f\u2084": [226, 228], "\ud835\udc10\u2083": [226, 228], "\ud835\udc0f\u2087": [226, 228], "\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc61\ud835\udc5f\ud835\udc4e\ud835\udc51\ud835\udc56\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [226, 227], "u65": 226, "f1": [226, 228, 229], "z1": [226, 228], "q3": [226, 228], "f_o1_eq_f_02": [227, 229], "eq": [227, 229], "uncov": 227, "\ud835\udcb0\u2086\u2088": 227, "\ud835\udc53": [227, 230, 231], "\ud835\udc31\u2084": [227, 229], "\ud835\udc32\u2084": [227, 229], "u67": 227, "x4": [227, 229], "y4": [227, 229], "\ud835\udcb0\u2087\u2080": 228, "u69": 228, "\ud835\udcb0\u2087\u2082": 229, "u71": 229, "prefer": 230, "approach": 230, "want": 230, "your": 230, "plu": 230, "formula_rep": 230, "infix": 230, "But": 230, "often": 230, "implicit": 230, "typic": [62, 65, 230, 236], "precis": 230, "them": 230, "abov": [62, 65, 230, 236], "illustr": 230, "exactli": 230, "confus": 230, "contextlib": 230, "contextmanag": 230, "close": 230, "omega": 230, "\ud835\udcb0\u2087\u2086": 230, "\ud835\udc54": 230, "u75": 230, "\ud835\udcb0\u2087\u2088": 231, "\ud835\udc43": 231, "\ud835\udc5c": 231, "\ud835\udc0e": 231, "\ud835\udc10": 231, "u77": 231, "live": 232, "ab": 237, "ai": 237, "be2": 237, "ce1": 237, "ce2": 237, "di": 237, "dd": 237, "di1": 237, "di2": 237, "dr": 237, "ds1": 237, "ds2": 237, "ec": 237, "ii1": 237, "ii2": 237, "ii3": 237, "mt": 237, "pbc1": 237, "pbc2": 237, "pbf1": 237, "pbf2": 237, "describ": [238, 239], "per": [238, 239], "origin": [238, 239], "diagram": [6, 13, 42, 59, 233], "atom": [27, 59, 60, 65, 123, 236], "70": 45, "102": 45, "ch": [], "miss": [], "year": [], "cavagnaro_2001_dictionari": [], "ari": 62, "singular": 62, "might": 62, "constant": [62, 193], "l": 62, "tn": 62, "place": 62, "view": 62, "molecul": 65, "simpler": 65, "prefix": 65, "join": 65, "togeth": 65, "connect": [59, 60, 62, 65, 75, 85, 119, 120, 121, 122, 123, 193, 236], "materi": 65, "quantifi": 65, "modal": 65, "oper": 65, "squar": 65, "diamond": 65, "55": [62, 65, 236], "vocabulari": 69, "conform": 69, "format": 69, "124": 69, "125": 69, "constantdeclarationdict": 193, "cross_reference_const": 193, "constantdeclar": 193, "ch01": [50, 62], "catherin": 50, "cavagnaro": 50, "william": 50, "haight": 50, "crc": 50, "2001": 50, "58488": 50, "050": 50, "alk": 50, "paper": 50, "ms13": [50, 62, 65, 236], "faron": 50, "moller": 50, "georg": 50, "struth": 50, "undergradu": 50, "topic": 50, "springer": 50, "london": 50, "2013": 50, "84800": 50, "321": 50, "322": 50, "1007": 50, "written": [62, 65, 236], "built": [62, 65, 236], "up": [62, 65, 236], "summaris": [62, 65, 236], "figur": [62, 65, 236], "alwai": [62, 65, 236], "syntax": [62, 65, 236], "leaf": 62, "tree": 62, "found": 62, "litteratur": 62, "context": 62, "rather": 62, "adopt": 62, "propos": 62, "compoundformula": [127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 230], "cross_reference_connect": 193}, "objects": {"punctilious": [[127, 0, 1, "", "AbsorptionDeclaration"], [128, 0, 1, "", "AbsorptionInclusion"], [129, 0, 1, "", "AxiomInterpretationDeclaration"], [130, 0, 1, "", "AxiomInterpretationInclusion"], [131, 0, 1, "", "BiconditionalElimination1Declaration"], [132, 0, 1, "", "BiconditionalElimination1Inclusion"], [133, 0, 1, "", "BiconditionalElimination2Declaration"], [134, 0, 1, "", "BiconditionalElimination2Inclusion"], [135, 0, 1, "", "BiconditionalIntroductionDeclaration"], [136, 0, 1, "", "BiconditionalIntroductionInclusion"], [138, 0, 1, "", "ConjunctionElimination1Declaration"], [139, 0, 1, "", "ConjunctionElimination1Inclusion"], [140, 0, 1, "", "ConjunctionElimination2Declaration"], [141, 0, 1, "", "ConjunctionElimination2Inclusion"], [142, 0, 1, "", "ConjunctionIntroductionDeclaration"], [143, 0, 1, "", "ConjunctionIntroductionInclusion"], [144, 0, 1, "", "ConstructiveDilemmaDeclaration"], [145, 0, 1, "", "ConstructiveDilemmaInclusion"], [146, 0, 1, "", "DefinitionInterpretationDeclaration"], [147, 0, 1, "", "DefinitionInterpretationInclusion"], [148, 0, 1, "", "DestructiveDilemmaDeclaration"], [149, 0, 1, "", "DestructiveDilemmaInclusion"], [150, 0, 1, "", "DisjunctionIntroduction1Declaration"], [151, 0, 1, "", "DisjunctionIntroduction1Inclusion"], [152, 0, 1, "", "DisjunctionIntroduction2Declaration"], [153, 0, 1, "", "DisjunctionIntroduction2Inclusion"], [154, 0, 1, "", "DisjunctiveResolutionDeclaration"], [155, 0, 1, "", "DisjunctiveResolutionInclusion"], [156, 0, 1, "", "DisjunctiveSyllogism1Declaration"], [157, 0, 1, "", "DisjunctiveSyllogism1Inclusion"], [158, 0, 1, "", "DisjunctiveSyllogism2Declaration"], [159, 0, 1, "", "DisjunctiveSyllogism2Inclusion"], [160, 0, 1, "", "DoubleNegationEliminationDeclaration"], [161, 0, 1, "", "DoubleNegationEliminationInclusion"], [162, 0, 1, "", "DoubleNegationIntroductionDeclaration"], [163, 0, 1, "", "DoubleNegationIntroductionInclusion"], [164, 0, 1, "", "EqualTermsSubstitutionDeclaration"], [165, 0, 1, "", "EqualTermsSubstitutionInclusion"], [166, 0, 1, "", "EqualityCommutativityDeclaration"], [167, 0, 1, "", "EqualityCommutativityInclusion"], [168, 0, 1, "", "HypotheticalSyllogismDeclaration"], [169, 0, 1, "", "HypotheticalSyllogismInclusion"], [170, 0, 1, "", "InconsistencyIntroduction1Declaration"], [171, 0, 1, "", "InconsistencyIntroduction1Inclusion"], [172, 0, 1, "", "InconsistencyIntroduction2Declaration"], [173, 0, 1, "", "InconsistencyIntroduction2Inclusion"], [174, 0, 1, "", "InconsistencyIntroduction3Declaration"], [175, 0, 1, "", "InconsistencyIntroduction3Inclusion"], [177, 0, 1, "", "InferenceRuleDeclaration"], [176, 0, 1, "", "InferenceRuleDeclarationCollection"], [179, 0, 1, "", "InferenceRuleInclusion"], [178, 0, 1, "", "InferenceRuleInclusionCollection"], [180, 0, 1, "", "InferredStatement"], [181, 0, 1, "", "ModusPonensDeclaration"], [182, 0, 1, "", "ModusPonensInclusion"], [183, 0, 1, "", "ModusTollensDeclaration"], [184, 0, 1, "", "ModusTollensInclusion"], [185, 0, 1, "", "ProofByContradiction1Declaration"], [186, 0, 1, "", "ProofByContradiction1Inclusion"], [187, 0, 1, "", "ProofByContradiction2Declaration"], [188, 0, 1, "", "ProofByContradiction2Inclusion"], [189, 0, 1, "", "ProofByRefutation1Declaration"], [190, 0, 1, "", "ProofByRefutation1Inclusion"], [191, 0, 1, "", "ProofByRefutation2Declaration"], [192, 0, 1, "", "ProofByRefutation2Inclusion"], [193, 0, 1, "", "UniverseOfDiscourse"], [194, 0, 1, "", "Variable"], [195, 0, 1, "", "VariableSubstitutionDeclaration"], [196, 0, 1, "", "VariableSubstitutionInclusion"], [197, 4, 1, "", "create_universe_of_discourse"]], "punctilious.AbsorptionDeclaration": [[127, 0, 1, "", "Premises"], [127, 2, 1, "", "construct_formula"]], "punctilious.AbsorptionDeclaration.Premises": [[127, 1, 1, "", "p_implies_q"]], "punctilious.AbsorptionInclusion": [[128, 2, 1, "", "check_premises_validity"], [128, 2, 1, "", "construct_formula"], [128, 3, 1, "", "i"], [128, 2, 1, "", "infer_formula_statement"]], "punctilious.AxiomInterpretationDeclaration": [[129, 0, 1, "", "Premises"], [129, 2, 1, "", "construct_formula"]], "punctilious.AxiomInterpretationDeclaration.Premises": [[129, 1, 1, "", "a"], [129, 1, 1, "", "p"]], "punctilious.AxiomInterpretationInclusion": [[130, 2, 1, "", "check_premises_validity"], [130, 2, 1, "", "compose_paragraph_proof"], [130, 2, 1, "", "construct_formula"], [130, 3, 1, "", "i"], [130, 2, 1, "", "infer_formula_statement"]], "punctilious.BiconditionalElimination1Declaration": [[131, 0, 1, "", "Premises"], [131, 2, 1, "", "construct_formula"]], "punctilious.BiconditionalElimination1Declaration.Premises": [[131, 1, 1, "", "p_iff_q"]], "punctilious.BiconditionalElimination1Inclusion": [[132, 2, 1, "", "check_premises_validity"], [132, 2, 1, "", "construct_formula"], [132, 3, 1, "", "i"], [132, 2, 1, "", "infer_formula_statement"]], "punctilious.BiconditionalElimination2Declaration": [[133, 0, 1, "", "Premises"], [133, 2, 1, "", "construct_formula"]], "punctilious.BiconditionalElimination2Declaration.Premises": [[133, 1, 1, "", "p_iff_q"]], "punctilious.BiconditionalElimination2Inclusion": [[134, 2, 1, "", "check_premises_validity"], [134, 2, 1, "", "construct_formula"], [134, 3, 1, "", "i"], [134, 2, 1, "", "infer_formula_statement"]], "punctilious.BiconditionalIntroductionDeclaration": [[135, 0, 1, "", "Premises"], [135, 2, 1, "", "construct_formula"]], "punctilious.BiconditionalIntroductionDeclaration.Premises": [[135, 1, 1, "", "p_implies_q"], [135, 1, 1, "", "q_implies_p"]], "punctilious.BiconditionalIntroductionInclusion": [[136, 2, 1, "", "check_premises_validity"], [136, 2, 1, "", "construct_formula"], [136, 3, 1, "", "i"], [136, 2, 1, "", "infer_formula_statement"]], "punctilious.ConjunctionElimination1Declaration": [[138, 0, 1, "", "Premises"], [138, 2, 1, "", "construct_formula"]], "punctilious.ConjunctionElimination1Declaration.Premises": [[138, 1, 1, "", "p_and_q"]], "punctilious.ConjunctionElimination1Inclusion": [[139, 2, 1, "", "check_premises_validity"], [139, 2, 1, "", "construct_formula"], [139, 3, 1, "", "i"], [139, 2, 1, "", "infer_formula_statement"]], "punctilious.ConjunctionElimination2Declaration": [[140, 0, 1, "", "Premises"], [140, 2, 1, "", "construct_formula"]], "punctilious.ConjunctionElimination2Declaration.Premises": [[140, 1, 1, "", "p_and_q"]], "punctilious.ConjunctionElimination2Inclusion": [[141, 2, 1, "", "check_premises_validity"], [141, 2, 1, "", "construct_formula"], [141, 3, 1, "", "i"], [141, 2, 1, "", "infer_formula_statement"]], "punctilious.ConjunctionIntroductionDeclaration": [[142, 0, 1, "", "Premises"], [142, 2, 1, "", "construct_formula"]], "punctilious.ConjunctionIntroductionDeclaration.Premises": [[142, 1, 1, "", "p"], [142, 1, 1, "", "q"]], "punctilious.ConjunctionIntroductionInclusion": [[143, 2, 1, "", "check_premises_validity"], [143, 2, 1, "", "compose_paragraph_proof"], [143, 2, 1, "", "construct_formula"], [143, 3, 1, "", "i"], [143, 2, 1, "", "infer_formula_statement"]], "punctilious.ConstructiveDilemmaDeclaration": [[144, 0, 1, "", "Premises"], [144, 2, 1, "", "construct_formula"]], "punctilious.ConstructiveDilemmaDeclaration.Premises": [[144, 1, 1, "", "p_implies_q"], [144, 1, 1, "", "p_or_r"], [144, 1, 1, "", "r_implies_s"]], "punctilious.ConstructiveDilemmaInclusion": [[145, 2, 1, "", "check_premises_validity"], [145, 2, 1, "", "construct_formula"], [145, 3, 1, "", "i"], [145, 2, 1, "", "infer_formula_statement"]], "punctilious.DefinitionInterpretationDeclaration": [[146, 0, 1, "", "Premises"], [146, 2, 1, "", "construct_formula"]], "punctilious.DefinitionInterpretationDeclaration.Premises": [[146, 1, 1, "", "d"], [146, 1, 1, "", "x"], [146, 1, 1, "", "y"]], "punctilious.DefinitionInterpretationInclusion": [[147, 2, 1, "", "check_premises_validity"], [147, 2, 1, "", "compose_paragraph_proof"], [147, 2, 1, "", "construct_formula"], [147, 3, 1, "", "i"], [147, 2, 1, "", "infer_formula_statement"]], "punctilious.DestructiveDilemmaDeclaration": [[148, 0, 1, "", "Premises"], [148, 2, 1, "", "construct_formula"]], "punctilious.DestructiveDilemmaDeclaration.Premises": [[148, 1, 1, "", "not_q_or_not_s"], [148, 1, 1, "", "p_implies_q"], [148, 1, 1, "", "r_implies_s"]], "punctilious.DestructiveDilemmaInclusion": [[149, 2, 1, "", "check_premises_validity"], [149, 2, 1, "", "construct_formula"], [149, 3, 1, "", "i"], [149, 2, 1, "", "infer_formula_statement"]], "punctilious.DisjunctionIntroduction1Declaration": [[150, 0, 1, "", "Premises"], [150, 2, 1, "", "construct_formula"]], "punctilious.DisjunctionIntroduction1Declaration.Premises": [[150, 1, 1, "", "p"], [150, 1, 1, "", "q"]], "punctilious.DisjunctionIntroduction1Inclusion": [[151, 2, 1, "", "check_premises_validity"], [151, 2, 1, "", "compose_paragraph_proof"], [151, 2, 1, "", "construct_formula"], [151, 3, 1, "", "i"], [151, 2, 1, "", "infer_formula_statement"]], "punctilious.DisjunctionIntroduction2Declaration": [[152, 0, 1, "", "Premises"], [152, 2, 1, "", "construct_formula"]], "punctilious.DisjunctionIntroduction2Declaration.Premises": [[152, 1, 1, "", "p"], [152, 1, 1, "", "q"]], "punctilious.DisjunctionIntroduction2Inclusion": [[153, 2, 1, "", "check_premises_validity"], [153, 2, 1, "", "compose_paragraph_proof"], [153, 2, 1, "", "construct_formula"], [153, 3, 1, "", "i"], [153, 2, 1, "", "infer_formula_statement"]], "punctilious.DisjunctiveResolutionDeclaration": [[154, 0, 1, "", "Premises"], [154, 2, 1, "", "construct_formula"]], "punctilious.DisjunctiveResolutionDeclaration.Premises": [[154, 1, 1, "", "not_p_or_r"], [154, 1, 1, "", "p_or_q"]], "punctilious.DisjunctiveResolutionInclusion": [[155, 2, 1, "", "check_premises_validity"], [155, 2, 1, "", "construct_formula"], [155, 3, 1, "", "i"], [155, 2, 1, "", "infer_formula_statement"]], "punctilious.DisjunctiveSyllogism1Declaration": [[156, 0, 1, "", "Premises"], [156, 2, 1, "", "construct_formula"]], "punctilious.DisjunctiveSyllogism1Declaration.Premises": [[156, 1, 1, "", "not_p"], [156, 1, 1, "", "p_or_q"]], "punctilious.DisjunctiveSyllogism1Inclusion": [[157, 2, 1, "", "check_premises_validity"], [157, 2, 1, "", "construct_formula"], [157, 3, 1, "", "i"], [157, 2, 1, "", "infer_formula_statement"]], "punctilious.DisjunctiveSyllogism2Declaration": [[158, 0, 1, "", "Premises"], [158, 2, 1, "", "construct_formula"]], "punctilious.DisjunctiveSyllogism2Declaration.Premises": [[158, 1, 1, "", "not_q"], [158, 1, 1, "", "p_or_q"]], "punctilious.DisjunctiveSyllogism2Inclusion": [[159, 2, 1, "", "check_premises_validity"], [159, 2, 1, "", "construct_formula"], [159, 3, 1, "", "i"], [159, 2, 1, "", "infer_formula_statement"]], "punctilious.DoubleNegationEliminationDeclaration": [[160, 0, 1, "", "Premises"], [160, 2, 1, "", "construct_formula"]], "punctilious.DoubleNegationEliminationDeclaration.Premises": [[160, 1, 1, "", "not_not_p"]], "punctilious.DoubleNegationEliminationInclusion": [[161, 2, 1, "", "check_premises_validity"], [161, 2, 1, "", "construct_formula"], [161, 3, 1, "", "i"], [161, 2, 1, "", "infer_formula_statement"]], "punctilious.DoubleNegationIntroductionDeclaration": [[162, 0, 1, "", "Premises"], [162, 2, 1, "", "construct_formula"]], "punctilious.DoubleNegationIntroductionDeclaration.Premises": [[162, 1, 1, "", "p"]], "punctilious.DoubleNegationIntroductionInclusion": [[163, 2, 1, "", "check_premises_validity"], [163, 2, 1, "", "compose_paragraph_proof"], [163, 2, 1, "", "construct_formula"], [163, 3, 1, "", "i"], [163, 2, 1, "", "infer_formula_statement"]], "punctilious.EqualTermsSubstitutionDeclaration": [[164, 0, 1, "", "Premises"], [164, 2, 1, "", "construct_formula"]], "punctilious.EqualTermsSubstitutionDeclaration.Premises": [[164, 1, 1, "", "p"], [164, 1, 1, "", "x_equal_y"]], "punctilious.EqualTermsSubstitutionInclusion": [[165, 2, 1, "", "check_premises_validity"], [165, 2, 1, "", "construct_formula"], [165, 3, 1, "", "i"], [165, 2, 1, "", "infer_formula_statement"]], "punctilious.EqualityCommutativityDeclaration": [[166, 0, 1, "", "Premises"], [166, 2, 1, "", "construct_formula"]], "punctilious.EqualityCommutativityDeclaration.Premises": [[166, 1, 1, "", "x_equal_y"]], "punctilious.EqualityCommutativityInclusion": [[167, 2, 1, "", "check_premises_validity"], [167, 2, 1, "", "construct_formula"], [167, 3, 1, "", "i"], [167, 2, 1, "", "infer_formula_statement"]], "punctilious.HypotheticalSyllogismDeclaration": [[168, 0, 1, "", "Premises"], [168, 2, 1, "", "construct_formula"]], "punctilious.HypotheticalSyllogismDeclaration.Premises": [[168, 1, 1, "", "p_implies_q"], [168, 1, 1, "", "q_implies_r"]], "punctilious.HypotheticalSyllogismInclusion": [[169, 2, 1, "", "check_premises_validity"], [169, 2, 1, "", "construct_formula"], [169, 3, 1, "", "i"], [169, 2, 1, "", "infer_formula_statement"]], "punctilious.InconsistencyIntroduction1Declaration": [[170, 0, 1, "", "Premises"], [170, 2, 1, "", "construct_formula"]], "punctilious.InconsistencyIntroduction1Declaration.Premises": [[170, 1, 1, "", "not_p"], [170, 1, 1, "", "p"], [170, 1, 1, "", "t"]], "punctilious.InconsistencyIntroduction1Inclusion": [[171, 2, 1, "", "check_premises_validity"], [171, 2, 1, "", "construct_formula"], [171, 3, 1, "", "i"], [171, 2, 1, "", "infer_formula_statement"]], "punctilious.InconsistencyIntroduction2Declaration": [[172, 0, 1, "", "Premises"], [172, 2, 1, "", "construct_formula"]], "punctilious.InconsistencyIntroduction2Declaration.Premises": [[172, 1, 1, "", "t"], [172, 1, 1, "", "x_equal_y"], [172, 1, 1, "", "x_unequal_y"]], "punctilious.InconsistencyIntroduction2Inclusion": [[173, 2, 1, "", "check_premises_validity"], [173, 2, 1, "", "construct_formula"], [173, 3, 1, "", "i"], [173, 2, 1, "", "infer_formula_statement"]], "punctilious.InconsistencyIntroduction3Declaration": [[174, 0, 1, "", "Premises"], [174, 2, 1, "", "construct_formula"]], "punctilious.InconsistencyIntroduction3Declaration.Premises": [[174, 1, 1, "", "t"], [174, 1, 1, "", "x_unequal_x"]], "punctilious.InconsistencyIntroduction3Inclusion": [[175, 2, 1, "", "check_premises_validity"], [175, 2, 1, "", "construct_formula"], [175, 3, 1, "", "i"], [175, 2, 1, "", "infer_formula_statement"]], "punctilious.InferenceRuleDeclaration": [[177, 2, 1, "", "compose_paragraph_proof"], [177, 2, 1, "", "compose_report"], [177, 3, 1, "", "construct_formula"], [177, 3, 1, "", "definition"], [177, 2, 1, "", "echo"], [177, 3, 1, "", "is_strictly_propositional"]], "punctilious.InferenceRuleDeclarationCollection": [[176, 3, 1, "", "is_strictly_propositional"]], "punctilious.InferenceRuleInclusion": [[179, 3, 1, "", "check_premises_validity"], [179, 2, 1, "", "compose_class"], [179, 2, 1, "", "compose_report"], [179, 3, 1, "", "construct_formula"], [179, 3, 1, "", "definition"], [179, 3, 1, "", "i"], [179, 3, 1, "", "infer_formula_statement"], [179, 3, 1, "", "is_strictly_propositional"]], "punctilious.InferenceRuleInclusionCollection": [[178, 3, 1, "", "absorb"], [178, 3, 1, "", "absorption"], [178, 3, 1, "", "axiom_interpretation"], [178, 3, 1, "", "bel"], [178, 3, 1, "", "ber"], [178, 3, 1, "", "bi"], [178, 3, 1, "", "biconditional_elimination_1"], [178, 3, 1, "", "biconditional_elimination_2"], [178, 3, 1, "", "biconditional_introduction"], [178, 3, 1, "", "cd"], [178, 3, 1, "", "cel"], [178, 3, 1, "", "cer"], [178, 3, 1, "", "ci"], [178, 3, 1, "", "conjunction_elimination_1"], [178, 3, 1, "", "conjunction_elimination_2"], [178, 3, 1, "", "conjunction_introduction"], [178, 3, 1, "", "constructive_dilemma"], [178, 3, 1, "", "definition_interpretation"], [178, 3, 1, "", "destructive_dilemma"], [178, 3, 1, "", "double_negation_elimination"], [178, 3, 1, "", "double_negation_introduction"], [178, 3, 1, "", "modus_ponens"], [178, 3, 1, "", "mp"], [178, 3, 1, "", "pbc"], [178, 3, 1, "", "pbr"], [178, 3, 1, "", "proof_by_contradiction_1"], [178, 3, 1, "", "proof_by_refutation_1"], [178, 3, 1, "", "variable_substitution"]], "punctilious.InferredStatement": [[180, 2, 1, "", "compose_report"], [180, 3, 1, "", "inference_rule"], [180, 3, 1, "", "is_strictly_propositional"], [180, 3, 1, "", "parameters"]], "punctilious.ModusPonensDeclaration": [[181, 0, 1, "", "Premises"], [181, 2, 1, "", "construct_formula"]], "punctilious.ModusPonensDeclaration.Premises": [[181, 1, 1, "", "p"], [181, 1, 1, "", "p_implies_q"]], "punctilious.ModusPonensInclusion": [[182, 2, 1, "", "check_premises_validity"], [182, 2, 1, "", "construct_formula"], [182, 3, 1, "", "i"], [182, 2, 1, "", "infer_formula_statement"]], "punctilious.ModusTollensDeclaration": [[183, 0, 1, "", "Premises"], [183, 2, 1, "", "construct_formula"]], "punctilious.ModusTollensDeclaration.Premises": [[183, 1, 1, "", "not_q"], [183, 1, 1, "", "p_implies_q"]], "punctilious.ModusTollensInclusion": [[184, 2, 1, "", "check_premises_validity"], [184, 2, 1, "", "construct_formula"], [184, 3, 1, "", "i"], [184, 2, 1, "", "infer_formula_statement"]], "punctilious.ProofByContradiction1Declaration": [[185, 0, 1, "", "Premises"], [185, 2, 1, "", "construct_formula"]], "punctilious.ProofByContradiction1Declaration.Premises": [[185, 1, 1, "", "h"], [185, 1, 1, "", "inc_h"]], "punctilious.ProofByContradiction1Inclusion": [[186, 2, 1, "", "check_premises_validity"], [186, 2, 1, "", "construct_formula"], [186, 3, 1, "", "i"], [186, 2, 1, "", "infer_formula_statement"]], "punctilious.ProofByContradiction2Declaration": [[187, 0, 1, "", "Premises"], [187, 2, 1, "", "construct_formula"]], "punctilious.ProofByContradiction2Declaration.Premises": [[187, 1, 1, "", "h"], [187, 1, 1, "", "inc_h"]], "punctilious.ProofByContradiction2Inclusion": [[188, 2, 1, "", "check_premises_validity"], [188, 2, 1, "", "construct_formula"], [188, 3, 1, "", "i"], [188, 2, 1, "", "infer_formula_statement"]], "punctilious.ProofByRefutation1Declaration": [[189, 0, 1, "", "Premises"], [189, 2, 1, "", "construct_formula"]], "punctilious.ProofByRefutation1Declaration.Premises": [[189, 1, 1, "", "h"], [189, 1, 1, "", "inc_h"]], "punctilious.ProofByRefutation1Inclusion": [[190, 2, 1, "", "check_premises_validity"], [190, 2, 1, "", "construct_formula"], [190, 3, 1, "", "i"], [190, 2, 1, "", "infer_formula_statement"]], "punctilious.ProofByRefutation2Declaration": [[191, 0, 1, "", "Premises"], [191, 2, 1, "", "construct_formula"]], "punctilious.ProofByRefutation2Declaration.Premises": [[191, 1, 1, "", "h"], [191, 1, 1, "", "inc_h"]], "punctilious.ProofByRefutation2Inclusion": [[192, 2, 1, "", "check_premises_validity"], [192, 2, 1, "", "construct_formula"], [192, 3, 1, "", "i"], [192, 2, 1, "", "infer_formula_statement"]], "punctilious.UniverseOfDiscourse": [[193, 3, 1, "", "c"], [193, 3, 1, "", "connectives"], [193, 2, 1, "", "cross_reference_axiom"], [193, 2, 1, "", "cross_reference_connective"], [193, 2, 1, "", "cross_reference_constant"], [193, 2, 1, "", "cross_reference_definition"], [193, 2, 1, "", "cross_reference_formula"], [193, 2, 1, "", "cross_reference_inference_rule"], [193, 2, 1, "", "cross_reference_simple_objct"], [193, 2, 1, "", "cross_reference_symbolic_objct"], [193, 2, 1, "", "cross_reference_theory"], [193, 2, 1, "", "declare_axiom"], [193, 2, 1, "", "declare_definition"], [193, 2, 1, "", "declare_formula"], [193, 2, 1, "", "declare_theory"], [193, 2, 1, "", "declare_variable"], [193, 2, 1, "", "f"], [193, 2, 1, "", "get_symbol_max_index"], [193, 3, 1, "", "i"], [193, 2, 1, "", "index_symbol"], [193, 3, 1, "", "inference_rules"], [193, 3, 1, "", "is_strictly_propositional"], [193, 3, 1, "", "o"], [193, 3, 1, "", "r"], [193, 3, 1, "", "simple_objcts"], [193, 2, 1, "", "t"], [193, 2, 1, "", "take_note"], [193, 2, 1, "", "with_variable"]], "punctilious.Variable": [[194, 2, 1, "", "is_masked_formula_similar_to"], [194, 3, 1, "", "is_strictly_propositional"], [194, 3, 1, "", "scope"]], "punctilious.VariableSubstitutionDeclaration": [[195, 0, 1, "", "Premises"], [195, 2, 1, "", "construct_formula"]], "punctilious.VariableSubstitutionDeclaration.Premises": [[195, 1, 1, "", "p"], [195, 1, 1, "", "phi"]], "punctilious.VariableSubstitutionInclusion": [[196, 2, 1, "", "check_premises_validity"], [196, 2, 1, "", "compose_paragraph_proof"], [196, 2, 1, "", "construct_formula"], [196, 3, 1, "", "i"], [196, 2, 1, "", "infer_formula_statement"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"my": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48], "tag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "absorpt": [0, 88, 200], "With": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48], "axiom": [1, 2, 63, 89, 122, 201], "interpret": [2, 15, 89, 97, 201, 209], "bicondit": [3, 4, 5, 90, 91, 92, 202, 203, 204], "elimin": [3, 4, 9, 10, 22, 68, 90, 91, 93, 94, 104, 202, 203, 205, 206, 216], "1": [3, 9, 17, 20, 30, 38, 40, 90, 93, 99, 102, 109, 114, 116, 202, 205, 211, 214, 221, 226, 228, 230], "2": [4, 10, 18, 21, 31, 39, 41, 91, 94, 100, 103, 110, 115, 117, 203, 206, 212, 215, 222, 227, 229, 230], "introduct": [5, 11, 17, 18, 23, 30, 31, 32, 68, 74, 92, 95, 99, 100, 105, 109, 110, 111, 204, 207, 211, 212, 217, 221, 222, 223], "class": [6, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 233], "collect": 7, "concept": [8, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123], "conjunct": [9, 10, 11, 93, 94, 95, 205, 206, 207], "construct": [12, 96, 208], "dilemma": [12, 16, 96, 98, 208, 210], "declar": [14, 79], "definit": [15, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 194, 209], "destruct": [16, 98, 210], "disjunct": [17, 18, 19, 20, 21, 99, 100, 101, 102, 103, 211, 212, 213, 214, 215], "resolut": [19, 101, 213], "syllog": [20, 21, 28, 102, 103, 108, 214, 215, 220], "doubl": [22, 23, 104, 105, 216, 217], "negat": [22, 23, 104, 105, 216, 217], "equal": [24, 25, 106, 107, 218, 219], "term": [24, 106, 218], "substitut": [24, 48, 106, 118, 218, 231], "commut": [25, 107, 219], "equival": [26, 61], "hypothet": [28, 108, 220], "inclus": [29, 80], "inconsist": [30, 31, 32, 109, 110, 111, 221, 222, 223], "3": [32, 111, 223], "infer": [33, 34, 72, 73, 237], "rule": [33, 68, 72, 74, 237], "statement": [34, 44, 70, 73, 83], "math": [35, 53, 56, 60, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125], "modu": [36, 37, 112, 113, 224, 225], "ponen": [36, 112, 224], "tollen": [37, 113, 225], "proof": [38, 39, 40, 41, 53, 82, 114, 115, 116, 117, 226, 227, 228, 229], "contradict": [38, 39, 114, 115, 226, 227], "refut": [40, 41, 116, 117, 228, 229], "python": [42, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235], "sampl": [43, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235], "overview": 45, "univers": [46, 85], "discours": [46, 85], "variabl": [47, 48, 87, 118, 194, 230, 231], "back": 49, "matter": [49, 52], "tabl": [49, 51, 52, 59, 60, 123, 124, 125, 126, 237], "content": [49, 51, 52, 59, 60, 123, 124, 125, 126], "bibliographi": [50, 72, 73, 75, 76, 84, 237], "refer": [51, 237], "front": 52, "about": 53, "punctili": [53, 54, 55, 58, 59, 66], "so": 53, "why": 53, "develop": [53, 56], "yet": 53, "anoth": 53, "assist": 53, "contribut": 54, "The": [55, 122], "project": 55, "roadmap": 56, "formal": 56, "theori": [56, 84, 125], "human": 56, "friendli": 56, "support": 57, "alpha": 61, "quot": [61, 62, 64, 65, 68, 69, 72, 73, 74, 95, 99, 100, 105, 110, 111], "sourc": [61, 62, 65, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 108, 112, 113, 114, 115, 116, 117, 232], "axiomat": 64, "method": 64, "list": [68, 74, 76, 77], "well": [68, 74], "known": [68, 74], "formula": [27, 62, 65, 69, 70, 86], "hypothesi": 71, "synonym": [72, 73, 93, 94, 95, 99, 100, 114, 115, 116, 117], "see": [72, 73, 74, 237], "also": [72, 73, 74, 237], "i": 75, "meta": 76, "object": [76, 78, 79, 80, 81], "notat": 77, "form": 77, "creation": 78, "paragraph": 82, "style": 82, "relat": [], "kei": 66, "properti": 66, "data": [13, 66], "model": [13, 66], "deriv": 84, "valid": 86, "implement": 87, "note": [114, 115, 116, 117, 194], "classic": 119, "logic": [119, 120, 121], "k_0": 119, "intuitionist": 120, "j_0": 120, "minim": 121, "m_0": 121, "peano": 122, "inference_rul": 124, "absorptiondeclar": 127, "absorptioninclus": 128, "axiominterpretationdeclar": 129, "axiominterpretationinclus": 130, "biconditionalelimination1declar": 131, "biconditionalelimination1inclus": 132, "biconditionalelimination2declar": 133, "biconditionalelimination2inclus": 134, "biconditionalintroductiondeclar": 135, "biconditionalintroductioninclus": 136, "conjunctionelimination1declar": 138, "conjunctionelimination1inclus": 139, "conjunctionelimination2declar": 140, "conjunctionelimination2inclus": 141, "conjunctionintroductiondeclar": 142, "conjunctionintroductioninclus": 143, "constructivedilemmadeclar": 144, "constructivedilemmainclus": 145, "definitioninterpretationdeclar": 146, "definitioninterpretationinclus": 147, "destructivedilemmadeclar": 148, "destructivedilemmainclus": 149, "disjunctionintroduction1declar": 150, "disjunctionintroduction1inclus": 151, "disjunctionintroduction2declar": 152, "disjunctionintroduction2inclus": 153, "disjunctiveresolutiondeclar": 154, "disjunctiveresolutioninclus": 155, "disjunctivesyllogism1declar": 156, "disjunctivesyllogism1inclus": 157, "disjunctivesyllogism2declar": 158, "disjunctivesyllogism2inclus": 159, "doublenegationeliminationdeclar": 160, "doublenegationeliminationinclus": 161, "doublenegationintroductiondeclar": 162, "doublenegationintroductioninclus": 163, "equaltermssubstitutiondeclar": 164, "equaltermssubstitutioninclus": 165, "equalitycommutativitydeclar": 166, "equalitycommutativityinclus": 167, "hypotheticalsyllogismdeclar": 168, "hypotheticalsyllogisminclus": 169, "inconsistencyintroduction1declar": 170, "inconsistencyintroduction1inclus": 171, "inconsistencyintroduction2declar": 172, "inconsistencyintroduction2inclus": 173, "inconsistencyintroduction3declar": 174, "inconsistencyintroduction3inclus": 175, "inferenceruledeclarationcollect": 176, "inferenceruledeclar": 177, "inferenceruleinclusioncollect": 178, "inferenceruleinclus": 179, "inferredstat": 180, "modusponensdeclar": 181, "modusponensinclus": 182, "modustollensdeclar": 183, "modustollensinclus": 184, "proofbycontradiction1declar": 185, "proofbycontradiction1inclus": 186, "proofbycontradiction2declar": 187, "proofbycontradiction2inclus": 188, "proofbyrefutation1declar": 189, "proofbyrefutation1inclus": 190, "proofbyrefutation2declar": 191, "proofbyrefutation2inclus": 192, "universeofdiscours": 193, "paramet": 194, "variablesubstitutiondeclar": 195, "variablesubstitutioninclus": 196, "create_universe_of_discours": 197, "instal": 198, "prerequisit": 199, "usag": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "code": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "output": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "repositori": 232, "function": 234, "mgz": 238, "2021": 238, "book": [238, 239], "chapter": [238, 239], "tao": 239, "2006": 239, "atom": 62, "compound": 65, "diagram": 137, "connect": 66}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Front matter": [[52, "front-matter"]], "Table of contents": [[52, null], [60, null], [124, null], [49, null], [51, null], [59, "table-of-contents"], [126, null], [125, null], [123, null]], "About punctilious": [[53, "about-punctilious"]], "So why develop yet another math proof assistant?": [[53, "so-why-develop-yet-another-math-proof-assistant"]], "Contributing to punctilious": [[54, "contributing-to-punctilious"]], "The punctilious project": [[55, "the-punctilious-project"]], "Roadmap": [[56, "roadmap"]], "Formalization of Math theories": [[56, "formalization-of-math-theories"]], "Human-friendliness": [[56, "human-friendliness"]], "Developer-friendliness": [[56, "developer-friendliness"]], "Support": [[57, "support"]], "Punctilious": [[58, "punctilious"]], "Math": [[60, "math"]], "axiom": [[63, "axiom"]], "axiomatic-method": [[64, "axiomatic-method"]], "Quotes": [[64, "quotes"], [68, "quotes"], [72, "quotes"], [74, "quotes"], [95, "quotes"], [99, "quotes"], [100, "quotes"], [105, "quotes"], [73, "quotes"], [110, "quotes"], [111, "quotes"], [61, "quotes"], [69, "quotes"], [65, "quotes"], [62, "quotes"]], "definition": [[67, "definition"]], "elimination-rule": [[68, "elimination-rule"]], "Definition": [[68, "definition"], [72, "definition"], [74, "definition"], [77, "definition"], [78, "definition"], [79, "definition"], [82, "definition"], [88, "definition"], [89, "definition"], [90, "definition"], [91, "definition"], [92, "definition"], [93, "definition"], [94, "definition"], [95, "definition"], [96, "definition"], [97, "definition"], [98, "definition"], [99, "definition"], [100, "definition"], [101, "definition"], [102, "definition"], [103, "definition"], [104, "definition"], [105, "definition"], [106, "definition"], [107, "definition"], [108, "definition"], [109, "definition"], [112, "definition"], [113, "definition"], [73, "definition"], [80, "definition"], [110, "definition"], [111, "definition"], [114, "definition"], [115, "definition"], [116, "definition"], [117, "definition"], [71, "definition"], [84, "definition"], [87, "definition"], [61, "definition"], [118, "definition"], [65, "definition"], [62, "definition"], [75, "definition"], [85, "definition"], [66, "definition"], [76, "definition"], [194, "definition"]], "List of well-known introduction-rules": [[68, "list-of-well-known-introduction-rules"], [74, "list-of-well-known-introduction-rules"]], "formula-statement": [[70, "formula-statement"]], "inference-rule": [[72, "inference-rule"]], "Synonyms": [[72, "synonyms"], [93, "synonyms"], [94, "synonyms"], [95, "synonyms"], [99, "synonyms"], [100, "synonyms"], [73, "synonyms"], [114, "synonyms"], [115, "synonyms"], [116, "synonyms"], [117, "synonyms"]], "See also": [[72, "see-also"], [74, "see-also"], [237, "see-also"], [73, "see-also"]], "Bibliography": [[72, "bibliography"], [237, "bibliography"], [73, "bibliography"], [84, "bibliography"], [50, "bibliography"], [75, "bibliography"], [76, "bibliography"]], "introduction-rule": [[74, "introduction-rule"]], "notation-form": [[77, "notation-form"]], "List": [[77, "list"], [76, "list"]], "object-creation": [[78, "object-creation"]], "object-declaration": [[79, "object-declaration"]], "object": [[81, "object"]], "paragraph-proof (proof-style)": [[82, "paragraph-proof-proof-style"]], "statement": [[83, "statement"]], "absorption (math concept)": [[88, "absorption-math-concept"]], "Sources": [[88, "sources"], [90, "sources"], [91, "sources"], [92, "sources"], [93, "sources"], [94, "sources"], [95, "sources"], [96, "sources"], [98, "sources"], [99, "sources"], [100, "sources"], [101, "sources"], [102, "sources"], [103, "sources"], [108, "sources"], [112, "sources"], [113, "sources"], [114, "sources"], [115, "sources"], [116, "sources"], [117, "sources"], [61, "sources"], [65, "sources"], [62, "sources"]], "axiom-interpretation (math concept)": [[89, "axiom-interpretation-math-concept"]], "biconditional-elimination-1 (math concept)": [[90, "biconditional-elimination-1-math-concept"]], "biconditional-elimination-2 (math concept)": [[91, "biconditional-elimination-2-math-concept"]], "biconditional-introduction (math concept)": [[92, "biconditional-introduction-math-concept"]], "conjunction-elimination-1 (math concept)": [[93, "conjunction-elimination-1-math-concept"]], "conjunction-elimination-2 (math concept)": [[94, "conjunction-elimination-2-math-concept"]], "conjunction-introduction (math concept)": [[95, "conjunction-introduction-math-concept"]], "constructive-dilemma (math concept)": [[96, "constructive-dilemma-math-concept"]], "definition-interpretation (math concept)": [[97, "definition-interpretation-math-concept"]], "destructive-dilemma (math concept)": [[98, "destructive-dilemma-math-concept"]], "disjunction-introduction-1 (math concept)": [[99, "disjunction-introduction-1-math-concept"]], "disjunction-introduction-2 (math concept)": [[100, "disjunction-introduction-2-math-concept"]], "disjunctive-resolution (math concept)": [[101, "disjunctive-resolution-math-concept"]], "disjunctive-syllogism-1 (math concept)": [[102, "disjunctive-syllogism-1-math-concept"]], "disjunctive-syllogism-2 (math concept)": [[103, "disjunctive-syllogism-2-math-concept"]], "double-negation-elimination (math concept)": [[104, "double-negation-elimination-math-concept"]], "double-negation-introduction (math concept)": [[105, "double-negation-introduction-math-concept"]], "equal-terms-substitution (math concept)": [[106, "equal-terms-substitution-math-concept"]], "equality-commutativity (math concept)": [[107, "equality-commutativity-math-concept"]], "hypothetical-syllogism (math concept)": [[108, "hypothetical-syllogism-math-concept"]], "inconsistency-introduction-1 (math concept)": [[109, "inconsistency-introduction-1-math-concept"]], "modus-ponens (math concept)": [[112, "modus-ponens-math-concept"]], "modus-tollens (math concept)": [[113, "modus-tollens-math-concept"]], "Math inference_rule": [[124, "math-inference-rule"]], "Installation": [[198, "installation"]], "Prerequisites": [[199, "prerequisites"]], "Source code repository": [[232, "source-code-repository"]], "Inference rules reference table": [[237, "inference-rules-reference-table"]], "Back matter": [[49, "back-matter"]], "Reference tables": [[51, "reference-tables"]], "Python functions": [[234, "python-functions"]], "Function": [[234, null]], "punctilious": [[59, "punctilious"]], "Python": [[126, "python"]], "inferred-statement": [[73, "inferred-statement"]], "object-inclusion": [[80, "object-inclusion"]], "validity-of-formula": [[86, "validity-of-formula"]], "inconsistency-introduction-2 (math concept)": [[110, "inconsistency-introduction-2-math-concept"]], "inconsistency-introduction-3 (math concept)": [[111, "inconsistency-introduction-3-math-concept"]], "proof-by-contradiction-1 (math concept)": [[114, "proof-by-contradiction-1-math-concept"]], "Note": [[114, "note"], [115, "note"], [116, "note"], [117, "note"], [194, "note"]], "proof-by-contradiction-2 (math concept)": [[115, "proof-by-contradiction-2-math-concept"]], "proof-by-refutation-1 (math concept)": [[116, "proof-by-refutation-1-math-concept"]], "proof-by-refutation-2 (math concept)": [[117, "proof-by-refutation-2-math-concept"]], "Math theory": [[125, "math-theory"]], "MGZ 2021": [[238, "mgz-2021"]], "Book chapters": [[238, null], [239, null]], "Tao 2006": [[239, "tao-2006"]], "hypothesis": [[71, "hypothesis"]], "theory-derivation": [[84, "theory-derivation"]], "variable": [[87, "variable"]], "Implementation": [[87, "implementation"]], "absorption (python sample)": [[200, "id1"]], "Usage": [[200, "usage"], [201, "usage"], [202, "usage"], [203, "usage"], [204, "usage"], [205, "usage"], [206, "usage"], [207, "usage"], [208, "usage"], [209, "usage"], [210, "usage"], [211, "usage"], [212, "usage"], [213, "usage"], [214, "usage"], [215, "usage"], [216, "usage"], [217, "usage"], [218, "usage"], [219, "usage"], [220, "usage"], [221, "usage"], [222, "usage"], [223, "usage"], [224, "usage"], [225, "usage"], [226, "usage"], [227, "usage"], [228, "usage"], [229, "usage"], [231, "usage"]], "Sample code": [[200, "sample-code"], [201, "sample-code"], [202, "sample-code"], [203, "sample-code"], [204, "sample-code"], [205, "sample-code"], [206, "sample-code"], [207, "sample-code"], [208, "sample-code"], [209, "sample-code"], [210, "sample-code"], [211, "sample-code"], [212, "sample-code"], [213, "sample-code"], [214, "sample-code"], [215, "sample-code"], [216, "sample-code"], [217, "sample-code"], [218, "sample-code"], [219, "sample-code"], [220, "sample-code"], [221, "sample-code"], [222, "sample-code"], [223, "sample-code"], [224, "sample-code"], [225, "sample-code"], [226, "sample-code"], [227, "sample-code"], [228, "sample-code"], [229, "sample-code"], [231, "sample-code"], [230, "sample-code"]], "Code output": [[200, "code-output"], [201, "code-output"], [202, "code-output"], [203, "code-output"], [204, "code-output"], [205, "code-output"], [206, "code-output"], [207, "code-output"], [208, "code-output"], [209, "code-output"], [210, "code-output"], [211, "code-output"], [212, "code-output"], [213, "code-output"], [214, "code-output"], [215, "code-output"], [216, "code-output"], [217, "code-output"], [218, "code-output"], [219, "code-output"], [220, "code-output"], [221, "code-output"], [222, "code-output"], [223, "code-output"], [224, "code-output"], [225, "code-output"], [226, "code-output"], [227, "code-output"], [228, "code-output"], [229, "code-output"], [231, "code-output"], [230, "code-output"]], "axiom-interpretation (python sample)": [[201, "id1"]], "biconditional-elimination-1 (python sample)": [[202, "id1"]], "biconditional-elimination-2 (python sample)": [[203, "id1"]], "biconditional-introduction (python sample)": [[204, "id1"]], "conjunction-elimination-1 (python sample)": [[205, "id1"]], "conjunction-elimination-2 (python sample)": [[206, "id1"]], "conjunction-introduction (python sample)": [[207, "id1"]], "constructive-dilemma (python sample)": [[208, "id1"]], "definition-interpretation (python sample)": [[209, "id1"]], "destructive-dilemma (python sample)": [[210, "id1"]], "disjunction-introduction-1 (python sample)": [[211, "id1"]], "disjunction-introduction-2 (python sample)": [[212, "id1"]], "disjunctive-resolution (python sample)": [[213, "id1"]], "disjunctive-syllogism-1 (python sample)": [[214, "id1"]], "disjunctive-syllogism-2 (python sample)": [[215, "id1"]], "double-negation-elimination (python sample)": [[216, "id1"]], "double-negation-introduction (python sample)": [[217, "id1"]], "equal-terms-substitution (python sample)": [[218, "id1"]], "equality-commutativity (python sample)": [[219, "id1"]], "hypothetical-syllogism (python sample)": [[220, "id1"]], "inconsistency-introduction-1 (python sample)": [[221, "id1"]], "inconsistency-introduction-2 (python sample)": [[222, "id1"]], "inconsistency-introduction-3 (python sample)": [[223, "id1"]], "modus-ponens (python sample)": [[224, "id1"]], "modus-tollens (python sample)": [[225, "id1"]], "proof-by-contradiction-1 (python sample)": [[226, "id1"]], "proof-by-contradiction-2 (python sample)": [[227, "id1"]], "proof-by-refutation-1 (python sample)": [[228, "id1"]], "proof-by-refutation-2 (python sample)": [[229, "id1"]], "variable-substitution (python sample)": [[231, "id1"]], "Python samples": [[235, "python-samples"]], "Sample": [[235, null]], "alpha-equivalence": [[61, "alpha-equivalence"]], "variable-substitution (math concept)": [[118, "variable-substitution-math-concept"]], "formula": [[69, "formula"]], "Python classes": [[233, "python-classes"]], "Class": [[233, null]], "compound-formula": [[65, "compound-formula"]], "atomic-formula": [[62, "atomic-formula"]], "variable (python sample)": [[230, "variable-python-sample"]], "Usage 1": [[230, "usage-1"]], "Usage 2": [[230, "usage-2"]], "is-a": [[75, "is-a"]], "universe-of-discourse": [[85, "universe-of-discourse"]], "Classical logic ( K_0 )": [[119, "classical-logic-k-0"]], "Intuitionistic logic ( J_0 )": [[120, "intuitionistic-logic-j-0"]], "Minimal logic ( M_0 )": [[121, "minimal-logic-m-0"]], "The Peano axioms": [[122, "the-peano-axioms"]], "Class diagram": [[137, "id1"]], "connective": [[66, "connective"]], "Key properties": [[66, "key-properties"]], "Punctilious data model": [[66, "punctilious-data-model"]], "Math concept": [[123, "math-concept"]], "My tags: absorption": [[0, "my-tags-absorption"]], "With this tag": [[0, null], [1, null], [2, null], [3, null], [4, null], [5, null], [6, null], [7, null], [8, null], [9, null], [10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [29, null], [30, null], [31, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [46, null], [47, null], [48, null]], "My tags: axiom": [[1, "my-tags-axiom"]], "My tags: axiom-interpretation": [[2, "my-tags-axiom-interpretation"]], "My tags: biconditional-elimination-1": [[3, "my-tags-biconditional-elimination-1"]], "My tags: biconditional-elimination-2": [[4, "my-tags-biconditional-elimination-2"]], "My tags: biconditional-introduction": [[5, "my-tags-biconditional-introduction"]], "My tags: class": [[6, "my-tags-class"]], "My tags: collection": [[7, "my-tags-collection"]], "My tags: concept": [[8, "my-tags-concept"]], "My tags: conjunction-elimination-1": [[9, "my-tags-conjunction-elimination-1"]], "My tags: conjunction-elimination-2": [[10, "my-tags-conjunction-elimination-2"]], "My tags: conjunction-introduction": [[11, "my-tags-conjunction-introduction"]], "My tags: constructive-dilemma": [[12, "my-tags-constructive-dilemma"]], "My tags: data-model": [[13, "my-tags-data-model"]], "My tags: declaration": [[14, "my-tags-declaration"]], "My tags: definition-interpretation": [[15, "my-tags-definition-interpretation"]], "My tags: destructive-dilemma": [[16, "my-tags-destructive-dilemma"]], "My tags: disjunction-introduction-1": [[17, "my-tags-disjunction-introduction-1"]], "My tags: disjunction-introduction-2": [[18, "my-tags-disjunction-introduction-2"]], "My tags: disjunctive-resolution": [[19, "my-tags-disjunctive-resolution"]], "My tags: disjunctive-syllogism-1": [[20, "my-tags-disjunctive-syllogism-1"]], "My tags: disjunctive-syllogism-2": [[21, "my-tags-disjunctive-syllogism-2"]], "My tags: double-negation-elimination": [[22, "my-tags-double-negation-elimination"]], "My tags: double-negation-introduction": [[23, "my-tags-double-negation-introduction"]], "My tags: equal-terms-substitution": [[24, "my-tags-equal-terms-substitution"]], "My tags: equality-commutativity": [[25, "my-tags-equality-commutativity"]], "My tags: equivalence": [[26, "my-tags-equivalence"]], "My tags: formula": [[27, "my-tags-formula"]], "My tags: hypothetical-syllogism": [[28, "my-tags-hypothetical-syllogism"]], "My tags: inclusion": [[29, "my-tags-inclusion"]], "My tags: inconsistency-introduction-1": [[30, "my-tags-inconsistency-introduction-1"]], "My tags: inconsistency-introduction-2": [[31, "my-tags-inconsistency-introduction-2"]], "My tags: inconsistency-introduction-3": [[32, "my-tags-inconsistency-introduction-3"]], "My tags: inference-rule": [[33, "my-tags-inference-rule"]], "My tags: inferred-statement": [[34, "my-tags-inferred-statement"]], "My tags: math": [[35, "my-tags-math"]], "My tags: modus-ponens": [[36, "my-tags-modus-ponens"]], "My tags: modus-tollens": [[37, "my-tags-modus-tollens"]], "My tags: proof-by-contradiction-1": [[38, "my-tags-proof-by-contradiction-1"]], "My tags: proof-by-contradiction-2": [[39, "my-tags-proof-by-contradiction-2"]], "My tags: proof-by-refutation-1": [[40, "my-tags-proof-by-refutation-1"]], "My tags: proof-by-refutation-2": [[41, "my-tags-proof-by-refutation-2"]], "My tags: python": [[42, "my-tags-python"]], "My tags: sample": [[43, "my-tags-sample"]], "My tags: statement": [[44, "my-tags-statement"]], "Tags overview": [[45, "tags-overview"]], "Tags": [[45, null]], "My tags: universe-of-discourse": [[46, "my-tags-universe-of-discourse"]], "My tags: variable": [[47, "my-tags-variable"]], "My tags: variable-substitution": [[48, "my-tags-variable-substitution"]], "meta-object": [[76, "meta-object"]], "AbsorptionDeclaration (python class)": [[127, "absorptiondeclaration-python-class"]], "AbsorptionInclusion (python class)": [[128, "absorptioninclusion-python-class"]], "AxiomInterpretationDeclaration (python class)": [[129, "axiominterpretationdeclaration-python-class"]], "AxiomInterpretationInclusion (python class)": [[130, "axiominterpretationinclusion-python-class"]], "BiconditionalElimination1Declaration (python class)": [[131, "biconditionalelimination1declaration-python-class"]], "BiconditionalElimination1Inclusion (python class)": [[132, "biconditionalelimination1inclusion-python-class"]], "BiconditionalElimination2Declaration (python class)": [[133, "biconditionalelimination2declaration-python-class"]], "BiconditionalElimination2Inclusion (python class)": [[134, "biconditionalelimination2inclusion-python-class"]], "BiconditionalIntroductionDeclaration (python class)": [[135, "biconditionalintroductiondeclaration-python-class"]], "BiconditionalIntroductionInclusion (python class)": [[136, "biconditionalintroductioninclusion-python-class"]], "ConjunctionElimination1Declaration (python class)": [[138, "conjunctionelimination1declaration-python-class"]], "ConjunctionElimination1Inclusion (python class)": [[139, "conjunctionelimination1inclusion-python-class"]], "ConjunctionElimination2Declaration (python class)": [[140, "conjunctionelimination2declaration-python-class"]], "ConjunctionElimination2Inclusion (python class)": [[141, "conjunctionelimination2inclusion-python-class"]], "ConjunctionIntroductionDeclaration (python class)": [[142, "conjunctionintroductiondeclaration-python-class"]], "ConjunctionIntroductionInclusion (python class)": [[143, "conjunctionintroductioninclusion-python-class"]], "ConstructiveDilemmaDeclaration (python class)": [[144, "constructivedilemmadeclaration-python-class"]], "ConstructiveDilemmaInclusion (python class)": [[145, "constructivedilemmainclusion-python-class"]], "DefinitionInterpretationDeclaration (python class)": [[146, "definitioninterpretationdeclaration-python-class"]], "DefinitionInterpretationInclusion (python class)": [[147, "definitioninterpretationinclusion-python-class"]], "DestructiveDilemmaDeclaration (python class)": [[148, "destructivedilemmadeclaration-python-class"]], "DestructiveDilemmaInclusion (python class)": [[149, "destructivedilemmainclusion-python-class"]], "DisjunctionIntroduction1Declaration (python class)": [[150, "disjunctionintroduction1declaration-python-class"]], "DisjunctionIntroduction1Inclusion (python class)": [[151, "disjunctionintroduction1inclusion-python-class"]], "DisjunctionIntroduction2Declaration (python class)": [[152, "disjunctionintroduction2declaration-python-class"]], "DisjunctionIntroduction2Inclusion (python class)": [[153, "disjunctionintroduction2inclusion-python-class"]], "DisjunctiveResolutionDeclaration (python class)": [[154, "disjunctiveresolutiondeclaration-python-class"]], "DisjunctiveResolutionInclusion (python class)": [[155, "disjunctiveresolutioninclusion-python-class"]], "DisjunctiveSyllogism1Declaration (python class)": [[156, "disjunctivesyllogism1declaration-python-class"]], "DisjunctiveSyllogism1Inclusion (python class)": [[157, "disjunctivesyllogism1inclusion-python-class"]], "DisjunctiveSyllogism2Declaration (python class)": [[158, "disjunctivesyllogism2declaration-python-class"]], "DisjunctiveSyllogism2Inclusion (python class)": [[159, "disjunctivesyllogism2inclusion-python-class"]], "DoubleNegationEliminationDeclaration (python class)": [[160, "doublenegationeliminationdeclaration-python-class"]], "DoubleNegationEliminationInclusion (python class)": [[161, "doublenegationeliminationinclusion-python-class"]], "DoubleNegationIntroductionDeclaration (python class)": [[162, "doublenegationintroductiondeclaration-python-class"]], "DoubleNegationIntroductionInclusion (python class)": [[163, "doublenegationintroductioninclusion-python-class"]], "EqualTermsSubstitutionDeclaration (python class)": [[164, "equaltermssubstitutiondeclaration-python-class"]], "EqualTermsSubstitutionInclusion (python class)": [[165, "equaltermssubstitutioninclusion-python-class"]], "EqualityCommutativityDeclaration (python class)": [[166, "equalitycommutativitydeclaration-python-class"]], "EqualityCommutativityInclusion (python class)": [[167, "equalitycommutativityinclusion-python-class"]], "HypotheticalSyllogismDeclaration (python class)": [[168, "hypotheticalsyllogismdeclaration-python-class"]], "HypotheticalSyllogismInclusion (python class)": [[169, "hypotheticalsyllogisminclusion-python-class"]], "InconsistencyIntroduction1Declaration (python class)": [[170, "inconsistencyintroduction1declaration-python-class"]], "InconsistencyIntroduction1Inclusion (python class)": [[171, "inconsistencyintroduction1inclusion-python-class"]], "InconsistencyIntroduction2Declaration (python class)": [[172, "inconsistencyintroduction2declaration-python-class"]], "InconsistencyIntroduction2Inclusion (python class)": [[173, "inconsistencyintroduction2inclusion-python-class"]], "InconsistencyIntroduction3Declaration (python class)": [[174, "inconsistencyintroduction3declaration-python-class"]], "InconsistencyIntroduction3Inclusion (python class)": [[175, "inconsistencyintroduction3inclusion-python-class"]], "InferenceRuleDeclarationCollection (python class)": [[176, "inferenceruledeclarationcollection-python-class"]], "InferenceRuleDeclaration (python class)": [[177, "inferenceruledeclaration-python-class"]], "InferenceRuleInclusionCollection (python class)": [[178, "inferenceruleinclusioncollection-python-class"]], "InferenceRuleInclusion (python class)": [[179, "inferenceruleinclusion-python-class"]], "InferredStatement (python class)": [[180, "inferredstatement-python-class"]], "ModusPonensDeclaration (python class)": [[181, "modusponensdeclaration-python-class"]], "ModusPonensInclusion (python class)": [[182, "modusponensinclusion-python-class"]], "ModusTollensDeclaration (python class)": [[183, "modustollensdeclaration-python-class"]], "ModusTollensInclusion (python class)": [[184, "modustollensinclusion-python-class"]], "ProofByContradiction1Declaration (python class)": [[185, "proofbycontradiction1declaration-python-class"]], "ProofByContradiction1Inclusion (python class)": [[186, "proofbycontradiction1inclusion-python-class"]], "ProofByContradiction2Declaration (python class)": [[187, "proofbycontradiction2declaration-python-class"]], "ProofByContradiction2Inclusion (python class)": [[188, "proofbycontradiction2inclusion-python-class"]], "ProofByRefutation1Declaration (python class)": [[189, "proofbyrefutation1declaration-python-class"]], "ProofByRefutation1Inclusion (python class)": [[190, "proofbyrefutation1inclusion-python-class"]], "ProofByRefutation2Declaration (python class)": [[191, "proofbyrefutation2declaration-python-class"]], "ProofByRefutation2Inclusion (python class)": [[192, "proofbyrefutation2inclusion-python-class"]], "UniverseOfDiscourse (python class)": [[193, "universeofdiscourse-python-class"]], "Variable (python class)": [[194, "id1"]], "Parameters": [[194, "parameters"]], "VariableSubstitutionDeclaration (python class)": [[195, "variablesubstitutiondeclaration-python-class"]], "VariableSubstitutionInclusion (python class)": [[196, "variablesubstitutioninclusion-python-class"]], "create_universe_of_discourse": [[197, "create-universe-of-discourse"]]}, "indexentries": {"absorptiondeclaration (class in punctilious)": [[127, "punctilious.AbsorptionDeclaration"]], "absorptiondeclaration.premises (class in punctilious)": [[127, "punctilious.AbsorptionDeclaration.Premises"]], "construct_formula() (punctilious.absorptiondeclaration method)": [[127, "punctilious.AbsorptionDeclaration.construct_formula"]], "p_implies_q (punctilious.absorptiondeclaration.premises attribute)": [[127, "punctilious.AbsorptionDeclaration.Premises.p_implies_q"]], "absorptioninclusion (class in punctilious)": [[128, "punctilious.AbsorptionInclusion"]], "check_premises_validity() (punctilious.absorptioninclusion method)": [[128, "punctilious.AbsorptionInclusion.check_premises_validity"]], "construct_formula() (punctilious.absorptioninclusion method)": [[128, "punctilious.AbsorptionInclusion.construct_formula"]], "i (punctilious.absorptioninclusion property)": [[128, "punctilious.AbsorptionInclusion.i"]], "infer_formula_statement() (punctilious.absorptioninclusion method)": [[128, "punctilious.AbsorptionInclusion.infer_formula_statement"]], "axiominterpretationdeclaration (class in punctilious)": [[129, "punctilious.AxiomInterpretationDeclaration"]], "axiominterpretationdeclaration.premises (class in punctilious)": [[129, "punctilious.AxiomInterpretationDeclaration.Premises"]], "a (punctilious.axiominterpretationdeclaration.premises attribute)": [[129, "punctilious.AxiomInterpretationDeclaration.Premises.a"]], "construct_formula() (punctilious.axiominterpretationdeclaration method)": [[129, "punctilious.AxiomInterpretationDeclaration.construct_formula"]], "p (punctilious.axiominterpretationdeclaration.premises attribute)": [[129, "punctilious.AxiomInterpretationDeclaration.Premises.p"]], "axiominterpretationinclusion (class in punctilious)": [[130, "punctilious.AxiomInterpretationInclusion"]], "check_premises_validity() (punctilious.axiominterpretationinclusion method)": [[130, "punctilious.AxiomInterpretationInclusion.check_premises_validity"]], "compose_paragraph_proof() (punctilious.axiominterpretationinclusion method)": [[130, "punctilious.AxiomInterpretationInclusion.compose_paragraph_proof"]], "construct_formula() (punctilious.axiominterpretationinclusion method)": [[130, "punctilious.AxiomInterpretationInclusion.construct_formula"]], "i (punctilious.axiominterpretationinclusion property)": [[130, "punctilious.AxiomInterpretationInclusion.i"]], "infer_formula_statement() (punctilious.axiominterpretationinclusion method)": [[130, "punctilious.AxiomInterpretationInclusion.infer_formula_statement"]], "biconditionalelimination1declaration (class in punctilious)": [[131, "punctilious.BiconditionalElimination1Declaration"]], "biconditionalelimination1declaration.premises (class in punctilious)": [[131, "punctilious.BiconditionalElimination1Declaration.Premises"]], "construct_formula() (punctilious.biconditionalelimination1declaration method)": [[131, "punctilious.BiconditionalElimination1Declaration.construct_formula"]], "p_iff_q (punctilious.biconditionalelimination1declaration.premises attribute)": [[131, "punctilious.BiconditionalElimination1Declaration.Premises.p_iff_q"]], "biconditionalelimination1inclusion (class in punctilious)": [[132, "punctilious.BiconditionalElimination1Inclusion"]], "check_premises_validity() (punctilious.biconditionalelimination1inclusion method)": [[132, "punctilious.BiconditionalElimination1Inclusion.check_premises_validity"]], "construct_formula() (punctilious.biconditionalelimination1inclusion method)": [[132, "punctilious.BiconditionalElimination1Inclusion.construct_formula"]], "i (punctilious.biconditionalelimination1inclusion property)": [[132, "punctilious.BiconditionalElimination1Inclusion.i"]], "infer_formula_statement() (punctilious.biconditionalelimination1inclusion method)": [[132, "punctilious.BiconditionalElimination1Inclusion.infer_formula_statement"]], "biconditionalelimination2declaration (class in punctilious)": [[133, "punctilious.BiconditionalElimination2Declaration"]], "biconditionalelimination2declaration.premises (class in punctilious)": [[133, "punctilious.BiconditionalElimination2Declaration.Premises"]], "construct_formula() (punctilious.biconditionalelimination2declaration method)": [[133, "punctilious.BiconditionalElimination2Declaration.construct_formula"]], "p_iff_q (punctilious.biconditionalelimination2declaration.premises attribute)": [[133, "punctilious.BiconditionalElimination2Declaration.Premises.p_iff_q"]], "biconditionalelimination2inclusion (class in punctilious)": [[134, "punctilious.BiconditionalElimination2Inclusion"]], "check_premises_validity() (punctilious.biconditionalelimination2inclusion method)": [[134, "punctilious.BiconditionalElimination2Inclusion.check_premises_validity"]], "construct_formula() (punctilious.biconditionalelimination2inclusion method)": [[134, "punctilious.BiconditionalElimination2Inclusion.construct_formula"]], "i (punctilious.biconditionalelimination2inclusion property)": [[134, "punctilious.BiconditionalElimination2Inclusion.i"]], "infer_formula_statement() (punctilious.biconditionalelimination2inclusion method)": [[134, "punctilious.BiconditionalElimination2Inclusion.infer_formula_statement"]], "biconditionalintroductiondeclaration (class in punctilious)": [[135, "punctilious.BiconditionalIntroductionDeclaration"]], "biconditionalintroductiondeclaration.premises (class in punctilious)": [[135, "punctilious.BiconditionalIntroductionDeclaration.Premises"]], "construct_formula() (punctilious.biconditionalintroductiondeclaration method)": [[135, "punctilious.BiconditionalIntroductionDeclaration.construct_formula"]], "p_implies_q (punctilious.biconditionalintroductiondeclaration.premises attribute)": [[135, "punctilious.BiconditionalIntroductionDeclaration.Premises.p_implies_q"]], "q_implies_p (punctilious.biconditionalintroductiondeclaration.premises attribute)": [[135, "punctilious.BiconditionalIntroductionDeclaration.Premises.q_implies_p"]], "biconditionalintroductioninclusion (class in punctilious)": [[136, "punctilious.BiconditionalIntroductionInclusion"]], "check_premises_validity() (punctilious.biconditionalintroductioninclusion method)": [[136, "punctilious.BiconditionalIntroductionInclusion.check_premises_validity"]], "construct_formula() (punctilious.biconditionalintroductioninclusion method)": [[136, "punctilious.BiconditionalIntroductionInclusion.construct_formula"]], "i (punctilious.biconditionalintroductioninclusion property)": [[136, "punctilious.BiconditionalIntroductionInclusion.i"]], "infer_formula_statement() (punctilious.biconditionalintroductioninclusion method)": [[136, "punctilious.BiconditionalIntroductionInclusion.infer_formula_statement"]], "conjunctionelimination1declaration (class in punctilious)": [[138, "punctilious.ConjunctionElimination1Declaration"]], "conjunctionelimination1declaration.premises (class in punctilious)": [[138, "punctilious.ConjunctionElimination1Declaration.Premises"]], "construct_formula() (punctilious.conjunctionelimination1declaration method)": [[138, "punctilious.ConjunctionElimination1Declaration.construct_formula"]], "p_and_q (punctilious.conjunctionelimination1declaration.premises attribute)": [[138, "punctilious.ConjunctionElimination1Declaration.Premises.p_and_q"]], "conjunctionelimination1inclusion (class in punctilious)": [[139, "punctilious.ConjunctionElimination1Inclusion"]], "check_premises_validity() (punctilious.conjunctionelimination1inclusion method)": [[139, "punctilious.ConjunctionElimination1Inclusion.check_premises_validity"]], "construct_formula() (punctilious.conjunctionelimination1inclusion method)": [[139, "punctilious.ConjunctionElimination1Inclusion.construct_formula"]], "i (punctilious.conjunctionelimination1inclusion property)": [[139, "punctilious.ConjunctionElimination1Inclusion.i"]], "infer_formula_statement() (punctilious.conjunctionelimination1inclusion method)": [[139, "punctilious.ConjunctionElimination1Inclusion.infer_formula_statement"]], "conjunctionelimination2declaration (class in punctilious)": [[140, "punctilious.ConjunctionElimination2Declaration"]], "conjunctionelimination2declaration.premises (class in punctilious)": [[140, "punctilious.ConjunctionElimination2Declaration.Premises"]], "construct_formula() (punctilious.conjunctionelimination2declaration method)": [[140, "punctilious.ConjunctionElimination2Declaration.construct_formula"]], "p_and_q (punctilious.conjunctionelimination2declaration.premises attribute)": [[140, "punctilious.ConjunctionElimination2Declaration.Premises.p_and_q"]], "conjunctionelimination2inclusion (class in punctilious)": [[141, "punctilious.ConjunctionElimination2Inclusion"]], "check_premises_validity() (punctilious.conjunctionelimination2inclusion method)": [[141, "punctilious.ConjunctionElimination2Inclusion.check_premises_validity"]], "construct_formula() (punctilious.conjunctionelimination2inclusion method)": [[141, "punctilious.ConjunctionElimination2Inclusion.construct_formula"]], "i (punctilious.conjunctionelimination2inclusion property)": [[141, "punctilious.ConjunctionElimination2Inclusion.i"]], "infer_formula_statement() (punctilious.conjunctionelimination2inclusion method)": [[141, "punctilious.ConjunctionElimination2Inclusion.infer_formula_statement"]], "conjunctionintroductiondeclaration (class in punctilious)": [[142, "punctilious.ConjunctionIntroductionDeclaration"]], "conjunctionintroductiondeclaration.premises (class in punctilious)": [[142, "punctilious.ConjunctionIntroductionDeclaration.Premises"]], "construct_formula() (punctilious.conjunctionintroductiondeclaration method)": [[142, "punctilious.ConjunctionIntroductionDeclaration.construct_formula"]], "p (punctilious.conjunctionintroductiondeclaration.premises attribute)": [[142, "punctilious.ConjunctionIntroductionDeclaration.Premises.p"]], "q (punctilious.conjunctionintroductiondeclaration.premises attribute)": [[142, "punctilious.ConjunctionIntroductionDeclaration.Premises.q"]], "conjunctionintroductioninclusion (class in punctilious)": [[143, "punctilious.ConjunctionIntroductionInclusion"]], "check_premises_validity() (punctilious.conjunctionintroductioninclusion method)": [[143, "punctilious.ConjunctionIntroductionInclusion.check_premises_validity"]], "compose_paragraph_proof() (punctilious.conjunctionintroductioninclusion method)": [[143, "punctilious.ConjunctionIntroductionInclusion.compose_paragraph_proof"]], "construct_formula() (punctilious.conjunctionintroductioninclusion method)": [[143, "punctilious.ConjunctionIntroductionInclusion.construct_formula"]], "i (punctilious.conjunctionintroductioninclusion property)": [[143, "punctilious.ConjunctionIntroductionInclusion.i"]], "infer_formula_statement() (punctilious.conjunctionintroductioninclusion method)": [[143, "punctilious.ConjunctionIntroductionInclusion.infer_formula_statement"]], "constructivedilemmadeclaration (class in punctilious)": [[144, "punctilious.ConstructiveDilemmaDeclaration"]], "constructivedilemmadeclaration.premises (class in punctilious)": [[144, "punctilious.ConstructiveDilemmaDeclaration.Premises"]], "construct_formula() (punctilious.constructivedilemmadeclaration method)": [[144, "punctilious.ConstructiveDilemmaDeclaration.construct_formula"]], "p_implies_q (punctilious.constructivedilemmadeclaration.premises attribute)": [[144, "punctilious.ConstructiveDilemmaDeclaration.Premises.p_implies_q"]], "p_or_r (punctilious.constructivedilemmadeclaration.premises attribute)": [[144, "punctilious.ConstructiveDilemmaDeclaration.Premises.p_or_r"]], "r_implies_s (punctilious.constructivedilemmadeclaration.premises attribute)": [[144, "punctilious.ConstructiveDilemmaDeclaration.Premises.r_implies_s"]], "constructivedilemmainclusion (class in punctilious)": [[145, "punctilious.ConstructiveDilemmaInclusion"]], "check_premises_validity() (punctilious.constructivedilemmainclusion method)": [[145, "punctilious.ConstructiveDilemmaInclusion.check_premises_validity"]], "construct_formula() (punctilious.constructivedilemmainclusion method)": [[145, "punctilious.ConstructiveDilemmaInclusion.construct_formula"]], "i (punctilious.constructivedilemmainclusion property)": [[145, "punctilious.ConstructiveDilemmaInclusion.i"]], "infer_formula_statement() (punctilious.constructivedilemmainclusion method)": [[145, "punctilious.ConstructiveDilemmaInclusion.infer_formula_statement"]], "definitioninterpretationdeclaration (class in punctilious)": [[146, "punctilious.DefinitionInterpretationDeclaration"]], "definitioninterpretationdeclaration.premises (class in punctilious)": [[146, "punctilious.DefinitionInterpretationDeclaration.Premises"]], "construct_formula() (punctilious.definitioninterpretationdeclaration method)": [[146, "punctilious.DefinitionInterpretationDeclaration.construct_formula"]], "d (punctilious.definitioninterpretationdeclaration.premises attribute)": [[146, "punctilious.DefinitionInterpretationDeclaration.Premises.d"]], "x (punctilious.definitioninterpretationdeclaration.premises attribute)": [[146, "punctilious.DefinitionInterpretationDeclaration.Premises.x"]], "y (punctilious.definitioninterpretationdeclaration.premises attribute)": [[146, "punctilious.DefinitionInterpretationDeclaration.Premises.y"]], "definitioninterpretationinclusion (class in punctilious)": [[147, "punctilious.DefinitionInterpretationInclusion"]], "check_premises_validity() (punctilious.definitioninterpretationinclusion method)": [[147, "punctilious.DefinitionInterpretationInclusion.check_premises_validity"]], "compose_paragraph_proof() (punctilious.definitioninterpretationinclusion method)": [[147, "punctilious.DefinitionInterpretationInclusion.compose_paragraph_proof"]], "construct_formula() (punctilious.definitioninterpretationinclusion method)": [[147, "punctilious.DefinitionInterpretationInclusion.construct_formula"]], "i (punctilious.definitioninterpretationinclusion property)": [[147, "punctilious.DefinitionInterpretationInclusion.i"]], "infer_formula_statement() (punctilious.definitioninterpretationinclusion method)": [[147, "punctilious.DefinitionInterpretationInclusion.infer_formula_statement"]], "destructivedilemmadeclaration (class in punctilious)": [[148, "punctilious.DestructiveDilemmaDeclaration"]], "destructivedilemmadeclaration.premises (class in punctilious)": [[148, "punctilious.DestructiveDilemmaDeclaration.Premises"]], "construct_formula() (punctilious.destructivedilemmadeclaration method)": [[148, "punctilious.DestructiveDilemmaDeclaration.construct_formula"]], "not_q_or_not_s (punctilious.destructivedilemmadeclaration.premises attribute)": [[148, "punctilious.DestructiveDilemmaDeclaration.Premises.not_q_or_not_s"]], "p_implies_q (punctilious.destructivedilemmadeclaration.premises attribute)": [[148, "punctilious.DestructiveDilemmaDeclaration.Premises.p_implies_q"]], "r_implies_s (punctilious.destructivedilemmadeclaration.premises attribute)": [[148, "punctilious.DestructiveDilemmaDeclaration.Premises.r_implies_s"]], "destructivedilemmainclusion (class in punctilious)": [[149, "punctilious.DestructiveDilemmaInclusion"]], "check_premises_validity() (punctilious.destructivedilemmainclusion method)": [[149, "punctilious.DestructiveDilemmaInclusion.check_premises_validity"]], "construct_formula() (punctilious.destructivedilemmainclusion method)": [[149, "punctilious.DestructiveDilemmaInclusion.construct_formula"]], "i (punctilious.destructivedilemmainclusion property)": [[149, "punctilious.DestructiveDilemmaInclusion.i"]], "infer_formula_statement() (punctilious.destructivedilemmainclusion method)": [[149, "punctilious.DestructiveDilemmaInclusion.infer_formula_statement"]], "disjunctionintroduction1declaration (class in punctilious)": [[150, "punctilious.DisjunctionIntroduction1Declaration"]], "disjunctionintroduction1declaration.premises (class in punctilious)": [[150, "punctilious.DisjunctionIntroduction1Declaration.Premises"]], "construct_formula() (punctilious.disjunctionintroduction1declaration method)": [[150, "punctilious.DisjunctionIntroduction1Declaration.construct_formula"]], "p (punctilious.disjunctionintroduction1declaration.premises attribute)": [[150, "punctilious.DisjunctionIntroduction1Declaration.Premises.p"]], "q (punctilious.disjunctionintroduction1declaration.premises attribute)": [[150, "punctilious.DisjunctionIntroduction1Declaration.Premises.q"]], "disjunctionintroduction1inclusion (class in punctilious)": [[151, "punctilious.DisjunctionIntroduction1Inclusion"]], "check_premises_validity() (punctilious.disjunctionintroduction1inclusion method)": [[151, "punctilious.DisjunctionIntroduction1Inclusion.check_premises_validity"]], "compose_paragraph_proof() (punctilious.disjunctionintroduction1inclusion method)": [[151, "punctilious.DisjunctionIntroduction1Inclusion.compose_paragraph_proof"]], "construct_formula() (punctilious.disjunctionintroduction1inclusion method)": [[151, "punctilious.DisjunctionIntroduction1Inclusion.construct_formula"]], "i (punctilious.disjunctionintroduction1inclusion property)": [[151, "punctilious.DisjunctionIntroduction1Inclusion.i"]], "infer_formula_statement() (punctilious.disjunctionintroduction1inclusion method)": [[151, "punctilious.DisjunctionIntroduction1Inclusion.infer_formula_statement"]], "disjunctionintroduction2declaration (class in punctilious)": [[152, "punctilious.DisjunctionIntroduction2Declaration"]], "disjunctionintroduction2declaration.premises (class in punctilious)": [[152, "punctilious.DisjunctionIntroduction2Declaration.Premises"]], "construct_formula() (punctilious.disjunctionintroduction2declaration method)": [[152, "punctilious.DisjunctionIntroduction2Declaration.construct_formula"]], "p (punctilious.disjunctionintroduction2declaration.premises attribute)": [[152, "punctilious.DisjunctionIntroduction2Declaration.Premises.p"]], "q (punctilious.disjunctionintroduction2declaration.premises attribute)": [[152, "punctilious.DisjunctionIntroduction2Declaration.Premises.q"]], "disjunctionintroduction2inclusion (class in punctilious)": [[153, "punctilious.DisjunctionIntroduction2Inclusion"]], "check_premises_validity() (punctilious.disjunctionintroduction2inclusion method)": [[153, "punctilious.DisjunctionIntroduction2Inclusion.check_premises_validity"]], "compose_paragraph_proof() (punctilious.disjunctionintroduction2inclusion method)": [[153, "punctilious.DisjunctionIntroduction2Inclusion.compose_paragraph_proof"]], "construct_formula() (punctilious.disjunctionintroduction2inclusion method)": [[153, "punctilious.DisjunctionIntroduction2Inclusion.construct_formula"]], "i (punctilious.disjunctionintroduction2inclusion property)": [[153, "punctilious.DisjunctionIntroduction2Inclusion.i"]], "infer_formula_statement() (punctilious.disjunctionintroduction2inclusion method)": [[153, "punctilious.DisjunctionIntroduction2Inclusion.infer_formula_statement"]], "disjunctiveresolutiondeclaration (class in punctilious)": [[154, "punctilious.DisjunctiveResolutionDeclaration"]], "disjunctiveresolutiondeclaration.premises (class in punctilious)": [[154, "punctilious.DisjunctiveResolutionDeclaration.Premises"]], "construct_formula() (punctilious.disjunctiveresolutiondeclaration method)": [[154, "punctilious.DisjunctiveResolutionDeclaration.construct_formula"]], "not_p_or_r (punctilious.disjunctiveresolutiondeclaration.premises attribute)": [[154, "punctilious.DisjunctiveResolutionDeclaration.Premises.not_p_or_r"]], "p_or_q (punctilious.disjunctiveresolutiondeclaration.premises attribute)": [[154, "punctilious.DisjunctiveResolutionDeclaration.Premises.p_or_q"]], "disjunctiveresolutioninclusion (class in punctilious)": [[155, "punctilious.DisjunctiveResolutionInclusion"]], "check_premises_validity() (punctilious.disjunctiveresolutioninclusion method)": [[155, "punctilious.DisjunctiveResolutionInclusion.check_premises_validity"]], "construct_formula() (punctilious.disjunctiveresolutioninclusion method)": [[155, "punctilious.DisjunctiveResolutionInclusion.construct_formula"]], "i (punctilious.disjunctiveresolutioninclusion property)": [[155, "punctilious.DisjunctiveResolutionInclusion.i"]], "infer_formula_statement() (punctilious.disjunctiveresolutioninclusion method)": [[155, "punctilious.DisjunctiveResolutionInclusion.infer_formula_statement"]], "disjunctivesyllogism1declaration (class in punctilious)": [[156, "punctilious.DisjunctiveSyllogism1Declaration"]], "disjunctivesyllogism1declaration.premises (class in punctilious)": [[156, "punctilious.DisjunctiveSyllogism1Declaration.Premises"]], "construct_formula() (punctilious.disjunctivesyllogism1declaration method)": [[156, "punctilious.DisjunctiveSyllogism1Declaration.construct_formula"]], "not_p (punctilious.disjunctivesyllogism1declaration.premises attribute)": [[156, "punctilious.DisjunctiveSyllogism1Declaration.Premises.not_p"]], "p_or_q (punctilious.disjunctivesyllogism1declaration.premises attribute)": [[156, "punctilious.DisjunctiveSyllogism1Declaration.Premises.p_or_q"]], "disjunctivesyllogism1inclusion (class in punctilious)": [[157, "punctilious.DisjunctiveSyllogism1Inclusion"]], "check_premises_validity() (punctilious.disjunctivesyllogism1inclusion method)": [[157, "punctilious.DisjunctiveSyllogism1Inclusion.check_premises_validity"]], "construct_formula() (punctilious.disjunctivesyllogism1inclusion method)": [[157, "punctilious.DisjunctiveSyllogism1Inclusion.construct_formula"]], "i (punctilious.disjunctivesyllogism1inclusion property)": [[157, "punctilious.DisjunctiveSyllogism1Inclusion.i"]], "infer_formula_statement() (punctilious.disjunctivesyllogism1inclusion method)": [[157, "punctilious.DisjunctiveSyllogism1Inclusion.infer_formula_statement"]], "disjunctivesyllogism2declaration (class in punctilious)": [[158, "punctilious.DisjunctiveSyllogism2Declaration"]], "disjunctivesyllogism2declaration.premises (class in punctilious)": [[158, "punctilious.DisjunctiveSyllogism2Declaration.Premises"]], "construct_formula() (punctilious.disjunctivesyllogism2declaration method)": [[158, "punctilious.DisjunctiveSyllogism2Declaration.construct_formula"]], "not_q (punctilious.disjunctivesyllogism2declaration.premises attribute)": [[158, "punctilious.DisjunctiveSyllogism2Declaration.Premises.not_q"]], "p_or_q (punctilious.disjunctivesyllogism2declaration.premises attribute)": [[158, "punctilious.DisjunctiveSyllogism2Declaration.Premises.p_or_q"]], "disjunctivesyllogism2inclusion (class in punctilious)": [[159, "punctilious.DisjunctiveSyllogism2Inclusion"]], "check_premises_validity() (punctilious.disjunctivesyllogism2inclusion method)": [[159, "punctilious.DisjunctiveSyllogism2Inclusion.check_premises_validity"]], "construct_formula() (punctilious.disjunctivesyllogism2inclusion method)": [[159, "punctilious.DisjunctiveSyllogism2Inclusion.construct_formula"]], "i (punctilious.disjunctivesyllogism2inclusion property)": [[159, "punctilious.DisjunctiveSyllogism2Inclusion.i"]], "infer_formula_statement() (punctilious.disjunctivesyllogism2inclusion method)": [[159, "punctilious.DisjunctiveSyllogism2Inclusion.infer_formula_statement"]], "doublenegationeliminationdeclaration (class in punctilious)": [[160, "punctilious.DoubleNegationEliminationDeclaration"]], "doublenegationeliminationdeclaration.premises (class in punctilious)": [[160, "punctilious.DoubleNegationEliminationDeclaration.Premises"]], "construct_formula() (punctilious.doublenegationeliminationdeclaration method)": [[160, "punctilious.DoubleNegationEliminationDeclaration.construct_formula"]], "not_not_p (punctilious.doublenegationeliminationdeclaration.premises attribute)": [[160, "punctilious.DoubleNegationEliminationDeclaration.Premises.not_not_p"]], "doublenegationeliminationinclusion (class in punctilious)": [[161, "punctilious.DoubleNegationEliminationInclusion"]], "check_premises_validity() (punctilious.doublenegationeliminationinclusion method)": [[161, "punctilious.DoubleNegationEliminationInclusion.check_premises_validity"]], "construct_formula() (punctilious.doublenegationeliminationinclusion method)": [[161, "punctilious.DoubleNegationEliminationInclusion.construct_formula"]], "i (punctilious.doublenegationeliminationinclusion property)": [[161, "punctilious.DoubleNegationEliminationInclusion.i"]], "infer_formula_statement() (punctilious.doublenegationeliminationinclusion method)": [[161, "punctilious.DoubleNegationEliminationInclusion.infer_formula_statement"]], "doublenegationintroductiondeclaration (class in punctilious)": [[162, "punctilious.DoubleNegationIntroductionDeclaration"]], "doublenegationintroductiondeclaration.premises (class in punctilious)": [[162, "punctilious.DoubleNegationIntroductionDeclaration.Premises"]], "construct_formula() (punctilious.doublenegationintroductiondeclaration method)": [[162, "punctilious.DoubleNegationIntroductionDeclaration.construct_formula"]], "p (punctilious.doublenegationintroductiondeclaration.premises attribute)": [[162, "punctilious.DoubleNegationIntroductionDeclaration.Premises.p"]], "doublenegationintroductioninclusion (class in punctilious)": [[163, "punctilious.DoubleNegationIntroductionInclusion"]], "check_premises_validity() (punctilious.doublenegationintroductioninclusion method)": [[163, "punctilious.DoubleNegationIntroductionInclusion.check_premises_validity"]], "compose_paragraph_proof() (punctilious.doublenegationintroductioninclusion method)": [[163, "punctilious.DoubleNegationIntroductionInclusion.compose_paragraph_proof"]], "construct_formula() (punctilious.doublenegationintroductioninclusion method)": [[163, "punctilious.DoubleNegationIntroductionInclusion.construct_formula"]], "i (punctilious.doublenegationintroductioninclusion property)": [[163, "punctilious.DoubleNegationIntroductionInclusion.i"]], "infer_formula_statement() (punctilious.doublenegationintroductioninclusion method)": [[163, "punctilious.DoubleNegationIntroductionInclusion.infer_formula_statement"]], "equaltermssubstitutiondeclaration (class in punctilious)": [[164, "punctilious.EqualTermsSubstitutionDeclaration"]], "equaltermssubstitutiondeclaration.premises (class in punctilious)": [[164, "punctilious.EqualTermsSubstitutionDeclaration.Premises"]], "construct_formula() (punctilious.equaltermssubstitutiondeclaration method)": [[164, "punctilious.EqualTermsSubstitutionDeclaration.construct_formula"]], "p (punctilious.equaltermssubstitutiondeclaration.premises attribute)": [[164, "punctilious.EqualTermsSubstitutionDeclaration.Premises.p"]], "x_equal_y (punctilious.equaltermssubstitutiondeclaration.premises attribute)": [[164, "punctilious.EqualTermsSubstitutionDeclaration.Premises.x_equal_y"]], "equaltermssubstitutioninclusion (class in punctilious)": [[165, "punctilious.EqualTermsSubstitutionInclusion"]], "check_premises_validity() (punctilious.equaltermssubstitutioninclusion method)": [[165, "punctilious.EqualTermsSubstitutionInclusion.check_premises_validity"]], "construct_formula() (punctilious.equaltermssubstitutioninclusion method)": [[165, "punctilious.EqualTermsSubstitutionInclusion.construct_formula"]], "i (punctilious.equaltermssubstitutioninclusion property)": [[165, "punctilious.EqualTermsSubstitutionInclusion.i"]], "infer_formula_statement() (punctilious.equaltermssubstitutioninclusion method)": [[165, "punctilious.EqualTermsSubstitutionInclusion.infer_formula_statement"]], "equalitycommutativitydeclaration (class in punctilious)": [[166, "punctilious.EqualityCommutativityDeclaration"]], "equalitycommutativitydeclaration.premises (class in punctilious)": [[166, "punctilious.EqualityCommutativityDeclaration.Premises"]], "construct_formula() (punctilious.equalitycommutativitydeclaration method)": [[166, "punctilious.EqualityCommutativityDeclaration.construct_formula"]], "x_equal_y (punctilious.equalitycommutativitydeclaration.premises attribute)": [[166, "punctilious.EqualityCommutativityDeclaration.Premises.x_equal_y"]], "equalitycommutativityinclusion (class in punctilious)": [[167, "punctilious.EqualityCommutativityInclusion"]], "check_premises_validity() (punctilious.equalitycommutativityinclusion method)": [[167, "punctilious.EqualityCommutativityInclusion.check_premises_validity"]], "construct_formula() (punctilious.equalitycommutativityinclusion method)": [[167, "punctilious.EqualityCommutativityInclusion.construct_formula"]], "i (punctilious.equalitycommutativityinclusion property)": [[167, "punctilious.EqualityCommutativityInclusion.i"]], "infer_formula_statement() (punctilious.equalitycommutativityinclusion method)": [[167, "punctilious.EqualityCommutativityInclusion.infer_formula_statement"]], "hypotheticalsyllogismdeclaration (class in punctilious)": [[168, "punctilious.HypotheticalSyllogismDeclaration"]], "hypotheticalsyllogismdeclaration.premises (class in punctilious)": [[168, "punctilious.HypotheticalSyllogismDeclaration.Premises"]], "construct_formula() (punctilious.hypotheticalsyllogismdeclaration method)": [[168, "punctilious.HypotheticalSyllogismDeclaration.construct_formula"]], "p_implies_q (punctilious.hypotheticalsyllogismdeclaration.premises attribute)": [[168, "punctilious.HypotheticalSyllogismDeclaration.Premises.p_implies_q"]], "q_implies_r (punctilious.hypotheticalsyllogismdeclaration.premises attribute)": [[168, "punctilious.HypotheticalSyllogismDeclaration.Premises.q_implies_r"]], "hypotheticalsyllogisminclusion (class in punctilious)": [[169, "punctilious.HypotheticalSyllogismInclusion"]], "check_premises_validity() (punctilious.hypotheticalsyllogisminclusion method)": [[169, "punctilious.HypotheticalSyllogismInclusion.check_premises_validity"]], "construct_formula() (punctilious.hypotheticalsyllogisminclusion method)": [[169, "punctilious.HypotheticalSyllogismInclusion.construct_formula"]], "i (punctilious.hypotheticalsyllogisminclusion property)": [[169, "punctilious.HypotheticalSyllogismInclusion.i"]], "infer_formula_statement() (punctilious.hypotheticalsyllogisminclusion method)": [[169, "punctilious.HypotheticalSyllogismInclusion.infer_formula_statement"]], "inconsistencyintroduction1declaration (class in punctilious)": [[170, "punctilious.InconsistencyIntroduction1Declaration"]], "inconsistencyintroduction1declaration.premises (class in punctilious)": [[170, "punctilious.InconsistencyIntroduction1Declaration.Premises"]], "construct_formula() (punctilious.inconsistencyintroduction1declaration method)": [[170, "punctilious.InconsistencyIntroduction1Declaration.construct_formula"]], "not_p (punctilious.inconsistencyintroduction1declaration.premises attribute)": [[170, "punctilious.InconsistencyIntroduction1Declaration.Premises.not_p"]], "p (punctilious.inconsistencyintroduction1declaration.premises attribute)": [[170, "punctilious.InconsistencyIntroduction1Declaration.Premises.p"]], "t (punctilious.inconsistencyintroduction1declaration.premises attribute)": [[170, "punctilious.InconsistencyIntroduction1Declaration.Premises.t"]], "inconsistencyintroduction1inclusion (class in punctilious)": [[171, "punctilious.InconsistencyIntroduction1Inclusion"]], "check_premises_validity() (punctilious.inconsistencyintroduction1inclusion method)": [[171, "punctilious.InconsistencyIntroduction1Inclusion.check_premises_validity"]], "construct_formula() (punctilious.inconsistencyintroduction1inclusion method)": [[171, "punctilious.InconsistencyIntroduction1Inclusion.construct_formula"]], "i (punctilious.inconsistencyintroduction1inclusion property)": [[171, "punctilious.InconsistencyIntroduction1Inclusion.i"]], "infer_formula_statement() (punctilious.inconsistencyintroduction1inclusion method)": [[171, "punctilious.InconsistencyIntroduction1Inclusion.infer_formula_statement"]], "inconsistencyintroduction2declaration (class in punctilious)": [[172, "punctilious.InconsistencyIntroduction2Declaration"]], "inconsistencyintroduction2declaration.premises (class in punctilious)": [[172, "punctilious.InconsistencyIntroduction2Declaration.Premises"]], "construct_formula() (punctilious.inconsistencyintroduction2declaration method)": [[172, "punctilious.InconsistencyIntroduction2Declaration.construct_formula"]], "t (punctilious.inconsistencyintroduction2declaration.premises attribute)": [[172, "punctilious.InconsistencyIntroduction2Declaration.Premises.t"]], "x_equal_y (punctilious.inconsistencyintroduction2declaration.premises attribute)": [[172, "punctilious.InconsistencyIntroduction2Declaration.Premises.x_equal_y"]], "x_unequal_y (punctilious.inconsistencyintroduction2declaration.premises attribute)": [[172, "punctilious.InconsistencyIntroduction2Declaration.Premises.x_unequal_y"]], "inconsistencyintroduction2inclusion (class in punctilious)": [[173, "punctilious.InconsistencyIntroduction2Inclusion"]], "check_premises_validity() (punctilious.inconsistencyintroduction2inclusion method)": [[173, "punctilious.InconsistencyIntroduction2Inclusion.check_premises_validity"]], "construct_formula() (punctilious.inconsistencyintroduction2inclusion method)": [[173, "punctilious.InconsistencyIntroduction2Inclusion.construct_formula"]], "i (punctilious.inconsistencyintroduction2inclusion property)": [[173, "punctilious.InconsistencyIntroduction2Inclusion.i"]], "infer_formula_statement() (punctilious.inconsistencyintroduction2inclusion method)": [[173, "punctilious.InconsistencyIntroduction2Inclusion.infer_formula_statement"]], "inconsistencyintroduction3declaration (class in punctilious)": [[174, "punctilious.InconsistencyIntroduction3Declaration"]], "inconsistencyintroduction3declaration.premises (class in punctilious)": [[174, "punctilious.InconsistencyIntroduction3Declaration.Premises"]], "construct_formula() (punctilious.inconsistencyintroduction3declaration method)": [[174, "punctilious.InconsistencyIntroduction3Declaration.construct_formula"]], "t (punctilious.inconsistencyintroduction3declaration.premises attribute)": [[174, "punctilious.InconsistencyIntroduction3Declaration.Premises.t"]], "x_unequal_x (punctilious.inconsistencyintroduction3declaration.premises attribute)": [[174, "punctilious.InconsistencyIntroduction3Declaration.Premises.x_unequal_x"]], "inconsistencyintroduction3inclusion (class in punctilious)": [[175, "punctilious.InconsistencyIntroduction3Inclusion"]], "check_premises_validity() (punctilious.inconsistencyintroduction3inclusion method)": [[175, "punctilious.InconsistencyIntroduction3Inclusion.check_premises_validity"]], "construct_formula() (punctilious.inconsistencyintroduction3inclusion method)": [[175, "punctilious.InconsistencyIntroduction3Inclusion.construct_formula"]], "i (punctilious.inconsistencyintroduction3inclusion property)": [[175, "punctilious.InconsistencyIntroduction3Inclusion.i"]], "infer_formula_statement() (punctilious.inconsistencyintroduction3inclusion method)": [[175, "punctilious.InconsistencyIntroduction3Inclusion.infer_formula_statement"]], "inferenceruledeclarationcollection (class in punctilious)": [[176, "punctilious.InferenceRuleDeclarationCollection"]], "is_strictly_propositional (punctilious.inferenceruledeclarationcollection property)": [[176, "punctilious.InferenceRuleDeclarationCollection.is_strictly_propositional"]], "inferenceruledeclaration (class in punctilious)": [[177, "punctilious.InferenceRuleDeclaration"]], "compose_paragraph_proof() (punctilious.inferenceruledeclaration method)": [[177, "punctilious.InferenceRuleDeclaration.compose_paragraph_proof"]], "compose_report() (punctilious.inferenceruledeclaration method)": [[177, "punctilious.InferenceRuleDeclaration.compose_report"]], "construct_formula (punctilious.inferenceruledeclaration property)": [[177, "punctilious.InferenceRuleDeclaration.construct_formula"]], "definition (punctilious.inferenceruledeclaration property)": [[177, "punctilious.InferenceRuleDeclaration.definition"]], "echo() (punctilious.inferenceruledeclaration method)": [[177, "punctilious.InferenceRuleDeclaration.echo"]], "is_strictly_propositional (punctilious.inferenceruledeclaration property)": [[177, "punctilious.InferenceRuleDeclaration.is_strictly_propositional"]], "inferenceruleinclusioncollection (class in punctilious)": [[178, "punctilious.InferenceRuleInclusionCollection"]], "absorb (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.absorb"]], "absorption (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.absorption"]], "axiom_interpretation (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.axiom_interpretation"]], "bel (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.bel"]], "ber (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.ber"]], "bi (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.bi"]], "biconditional_elimination_1 (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.biconditional_elimination_1"]], "biconditional_elimination_2 (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.biconditional_elimination_2"]], "biconditional_introduction (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.biconditional_introduction"]], "cd (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.cd"]], "cel (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.cel"]], "cer (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.cer"]], "ci (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.ci"]], "conjunction_elimination_1 (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.conjunction_elimination_1"]], "conjunction_elimination_2 (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.conjunction_elimination_2"]], "conjunction_introduction (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.conjunction_introduction"]], "constructive_dilemma (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.constructive_dilemma"]], "definition_interpretation (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.definition_interpretation"]], "destructive_dilemma (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.destructive_dilemma"]], "double_negation_elimination (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.double_negation_elimination"]], "double_negation_introduction (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.double_negation_introduction"]], "modus_ponens (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.modus_ponens"]], "mp (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.mp"]], "pbc (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.pbc"]], "pbr (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.pbr"]], "proof_by_contradiction_1 (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.proof_by_contradiction_1"]], "proof_by_refutation_1 (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.proof_by_refutation_1"]], "variable_substitution (punctilious.inferenceruleinclusioncollection property)": [[178, "punctilious.InferenceRuleInclusionCollection.variable_substitution"]], "inferenceruleinclusion (class in punctilious)": [[179, "punctilious.InferenceRuleInclusion"]], "check_premises_validity (punctilious.inferenceruleinclusion property)": [[179, "punctilious.InferenceRuleInclusion.check_premises_validity"]], "compose_class() (punctilious.inferenceruleinclusion method)": [[179, "punctilious.InferenceRuleInclusion.compose_class"]], "compose_report() (punctilious.inferenceruleinclusion method)": [[179, "punctilious.InferenceRuleInclusion.compose_report"]], "construct_formula (punctilious.inferenceruleinclusion property)": [[179, "punctilious.InferenceRuleInclusion.construct_formula"]], "definition (punctilious.inferenceruleinclusion property)": [[179, "punctilious.InferenceRuleInclusion.definition"]], "i (punctilious.inferenceruleinclusion property)": [[179, "punctilious.InferenceRuleInclusion.i"]], "infer_formula_statement (punctilious.inferenceruleinclusion property)": [[179, "punctilious.InferenceRuleInclusion.infer_formula_statement"]], "is_strictly_propositional (punctilious.inferenceruleinclusion property)": [[179, "punctilious.InferenceRuleInclusion.is_strictly_propositional"]], "inferredstatement (class in punctilious)": [[180, "punctilious.InferredStatement"]], "compose_report() (punctilious.inferredstatement method)": [[180, "punctilious.InferredStatement.compose_report"]], "inference_rule (punctilious.inferredstatement property)": [[180, "punctilious.InferredStatement.inference_rule"]], "is_strictly_propositional (punctilious.inferredstatement property)": [[180, "punctilious.InferredStatement.is_strictly_propositional"]], "parameters (punctilious.inferredstatement property)": [[180, "punctilious.InferredStatement.parameters"]], "modusponensdeclaration (class in punctilious)": [[181, "punctilious.ModusPonensDeclaration"]], "modusponensdeclaration.premises (class in punctilious)": [[181, "punctilious.ModusPonensDeclaration.Premises"]], "construct_formula() (punctilious.modusponensdeclaration method)": [[181, "punctilious.ModusPonensDeclaration.construct_formula"]], "p (punctilious.modusponensdeclaration.premises attribute)": [[181, "punctilious.ModusPonensDeclaration.Premises.p"]], "p_implies_q (punctilious.modusponensdeclaration.premises attribute)": [[181, "punctilious.ModusPonensDeclaration.Premises.p_implies_q"]], "modusponensinclusion (class in punctilious)": [[182, "punctilious.ModusPonensInclusion"]], "check_premises_validity() (punctilious.modusponensinclusion method)": [[182, "punctilious.ModusPonensInclusion.check_premises_validity"]], "construct_formula() (punctilious.modusponensinclusion method)": [[182, "punctilious.ModusPonensInclusion.construct_formula"]], "i (punctilious.modusponensinclusion property)": [[182, "punctilious.ModusPonensInclusion.i"]], "infer_formula_statement() (punctilious.modusponensinclusion method)": [[182, "punctilious.ModusPonensInclusion.infer_formula_statement"]], "modustollensdeclaration (class in punctilious)": [[183, "punctilious.ModusTollensDeclaration"]], "modustollensdeclaration.premises (class in punctilious)": [[183, "punctilious.ModusTollensDeclaration.Premises"]], "construct_formula() (punctilious.modustollensdeclaration method)": [[183, "punctilious.ModusTollensDeclaration.construct_formula"]], "not_q (punctilious.modustollensdeclaration.premises attribute)": [[183, "punctilious.ModusTollensDeclaration.Premises.not_q"]], "p_implies_q (punctilious.modustollensdeclaration.premises attribute)": [[183, "punctilious.ModusTollensDeclaration.Premises.p_implies_q"]], "modustollensinclusion (class in punctilious)": [[184, "punctilious.ModusTollensInclusion"]], "check_premises_validity() (punctilious.modustollensinclusion method)": [[184, "punctilious.ModusTollensInclusion.check_premises_validity"]], "construct_formula() (punctilious.modustollensinclusion method)": [[184, "punctilious.ModusTollensInclusion.construct_formula"]], "i (punctilious.modustollensinclusion property)": [[184, "punctilious.ModusTollensInclusion.i"]], "infer_formula_statement() (punctilious.modustollensinclusion method)": [[184, "punctilious.ModusTollensInclusion.infer_formula_statement"]], "proofbycontradiction1declaration (class in punctilious)": [[185, "punctilious.ProofByContradiction1Declaration"]], "proofbycontradiction1declaration.premises (class in punctilious)": [[185, "punctilious.ProofByContradiction1Declaration.Premises"]], "construct_formula() (punctilious.proofbycontradiction1declaration method)": [[185, "punctilious.ProofByContradiction1Declaration.construct_formula"]], "h (punctilious.proofbycontradiction1declaration.premises attribute)": [[185, "punctilious.ProofByContradiction1Declaration.Premises.h"]], "inc_h (punctilious.proofbycontradiction1declaration.premises attribute)": [[185, "punctilious.ProofByContradiction1Declaration.Premises.inc_h"]], "proofbycontradiction1inclusion (class in punctilious)": [[186, "punctilious.ProofByContradiction1Inclusion"]], "check_premises_validity() (punctilious.proofbycontradiction1inclusion method)": [[186, "punctilious.ProofByContradiction1Inclusion.check_premises_validity"]], "construct_formula() (punctilious.proofbycontradiction1inclusion method)": [[186, "punctilious.ProofByContradiction1Inclusion.construct_formula"]], "i (punctilious.proofbycontradiction1inclusion property)": [[186, "punctilious.ProofByContradiction1Inclusion.i"]], "infer_formula_statement() (punctilious.proofbycontradiction1inclusion method)": [[186, "punctilious.ProofByContradiction1Inclusion.infer_formula_statement"]], "proofbycontradiction2declaration (class in punctilious)": [[187, "punctilious.ProofByContradiction2Declaration"]], "proofbycontradiction2declaration.premises (class in punctilious)": [[187, "punctilious.ProofByContradiction2Declaration.Premises"]], "construct_formula() (punctilious.proofbycontradiction2declaration method)": [[187, "punctilious.ProofByContradiction2Declaration.construct_formula"]], "h (punctilious.proofbycontradiction2declaration.premises attribute)": [[187, "punctilious.ProofByContradiction2Declaration.Premises.h"]], "inc_h (punctilious.proofbycontradiction2declaration.premises attribute)": [[187, "punctilious.ProofByContradiction2Declaration.Premises.inc_h"]], "proofbycontradiction2inclusion (class in punctilious)": [[188, "punctilious.ProofByContradiction2Inclusion"]], "check_premises_validity() (punctilious.proofbycontradiction2inclusion method)": [[188, "punctilious.ProofByContradiction2Inclusion.check_premises_validity"]], "construct_formula() (punctilious.proofbycontradiction2inclusion method)": [[188, "punctilious.ProofByContradiction2Inclusion.construct_formula"]], "i (punctilious.proofbycontradiction2inclusion property)": [[188, "punctilious.ProofByContradiction2Inclusion.i"]], "infer_formula_statement() (punctilious.proofbycontradiction2inclusion method)": [[188, "punctilious.ProofByContradiction2Inclusion.infer_formula_statement"]], "proofbyrefutation1declaration (class in punctilious)": [[189, "punctilious.ProofByRefutation1Declaration"]], "proofbyrefutation1declaration.premises (class in punctilious)": [[189, "punctilious.ProofByRefutation1Declaration.Premises"]], "construct_formula() (punctilious.proofbyrefutation1declaration method)": [[189, "punctilious.ProofByRefutation1Declaration.construct_formula"]], "h (punctilious.proofbyrefutation1declaration.premises attribute)": [[189, "punctilious.ProofByRefutation1Declaration.Premises.h"]], "inc_h (punctilious.proofbyrefutation1declaration.premises attribute)": [[189, "punctilious.ProofByRefutation1Declaration.Premises.inc_h"]], "proofbyrefutation1inclusion (class in punctilious)": [[190, "punctilious.ProofByRefutation1Inclusion"]], "check_premises_validity() (punctilious.proofbyrefutation1inclusion method)": [[190, "punctilious.ProofByRefutation1Inclusion.check_premises_validity"]], "construct_formula() (punctilious.proofbyrefutation1inclusion method)": [[190, "punctilious.ProofByRefutation1Inclusion.construct_formula"]], "i (punctilious.proofbyrefutation1inclusion property)": [[190, "punctilious.ProofByRefutation1Inclusion.i"]], "infer_formula_statement() (punctilious.proofbyrefutation1inclusion method)": [[190, "punctilious.ProofByRefutation1Inclusion.infer_formula_statement"]], "proofbyrefutation2declaration (class in punctilious)": [[191, "punctilious.ProofByRefutation2Declaration"]], "proofbyrefutation2declaration.premises (class in punctilious)": [[191, "punctilious.ProofByRefutation2Declaration.Premises"]], "construct_formula() (punctilious.proofbyrefutation2declaration method)": [[191, "punctilious.ProofByRefutation2Declaration.construct_formula"]], "h (punctilious.proofbyrefutation2declaration.premises attribute)": [[191, "punctilious.ProofByRefutation2Declaration.Premises.h"]], "inc_h (punctilious.proofbyrefutation2declaration.premises attribute)": [[191, "punctilious.ProofByRefutation2Declaration.Premises.inc_h"]], "proofbyrefutation2inclusion (class in punctilious)": [[192, "punctilious.ProofByRefutation2Inclusion"]], "check_premises_validity() (punctilious.proofbyrefutation2inclusion method)": [[192, "punctilious.ProofByRefutation2Inclusion.check_premises_validity"]], "construct_formula() (punctilious.proofbyrefutation2inclusion method)": [[192, "punctilious.ProofByRefutation2Inclusion.construct_formula"]], "i (punctilious.proofbyrefutation2inclusion property)": [[192, "punctilious.ProofByRefutation2Inclusion.i"]], "infer_formula_statement() (punctilious.proofbyrefutation2inclusion method)": [[192, "punctilious.ProofByRefutation2Inclusion.infer_formula_statement"]], "universeofdiscourse (class in punctilious)": [[193, "punctilious.UniverseOfDiscourse"]], "c (punctilious.universeofdiscourse property)": [[193, "punctilious.UniverseOfDiscourse.c"]], "connectives (punctilious.universeofdiscourse property)": [[193, "punctilious.UniverseOfDiscourse.connectives"]], "cross_reference_axiom() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.cross_reference_axiom"]], "cross_reference_connective() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.cross_reference_connective"]], "cross_reference_constant() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.cross_reference_constant"]], "cross_reference_definition() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.cross_reference_definition"]], "cross_reference_formula() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.cross_reference_formula"]], "cross_reference_inference_rule() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.cross_reference_inference_rule"]], "cross_reference_simple_objct() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.cross_reference_simple_objct"]], "cross_reference_symbolic_objct() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.cross_reference_symbolic_objct"]], "cross_reference_theory() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.cross_reference_theory"]], "declare_axiom() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.declare_axiom"]], "declare_definition() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.declare_definition"]], "declare_formula() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.declare_formula"]], "declare_theory() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.declare_theory"]], "declare_variable() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.declare_variable"]], "f() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.f"]], "get_symbol_max_index() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.get_symbol_max_index"]], "i (punctilious.universeofdiscourse property)": [[193, "punctilious.UniverseOfDiscourse.i"]], "index_symbol() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.index_symbol"]], "inference_rules (punctilious.universeofdiscourse property)": [[193, "punctilious.UniverseOfDiscourse.inference_rules"]], "is_strictly_propositional (punctilious.universeofdiscourse property)": [[193, "punctilious.UniverseOfDiscourse.is_strictly_propositional"]], "o (punctilious.universeofdiscourse property)": [[193, "punctilious.UniverseOfDiscourse.o"]], "r (punctilious.universeofdiscourse property)": [[193, "punctilious.UniverseOfDiscourse.r"]], "simple_objcts (punctilious.universeofdiscourse property)": [[193, "punctilious.UniverseOfDiscourse.simple_objcts"]], "t() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.t"]], "take_note() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.take_note"]], "with_variable() (punctilious.universeofdiscourse method)": [[193, "punctilious.UniverseOfDiscourse.with_variable"]], "variable (class in punctilious)": [[194, "punctilious.Variable"]], "is_masked_formula_similar_to() (punctilious.variable method)": [[194, "punctilious.Variable.is_masked_formula_similar_to"]], "is_strictly_propositional (punctilious.variable property)": [[194, "punctilious.Variable.is_strictly_propositional"]], "scope (punctilious.variable property)": [[194, "punctilious.Variable.scope"]], "variablesubstitutiondeclaration (class in punctilious)": [[195, "punctilious.VariableSubstitutionDeclaration"]], "variablesubstitutiondeclaration.premises (class in punctilious)": [[195, "punctilious.VariableSubstitutionDeclaration.Premises"]], "construct_formula() (punctilious.variablesubstitutiondeclaration method)": [[195, "punctilious.VariableSubstitutionDeclaration.construct_formula"]], "p (punctilious.variablesubstitutiondeclaration.premises attribute)": [[195, "punctilious.VariableSubstitutionDeclaration.Premises.p"]], "phi (punctilious.variablesubstitutiondeclaration.premises attribute)": [[195, "punctilious.VariableSubstitutionDeclaration.Premises.phi"]], "variablesubstitutioninclusion (class in punctilious)": [[196, "punctilious.VariableSubstitutionInclusion"]], "check_premises_validity() (punctilious.variablesubstitutioninclusion method)": [[196, "punctilious.VariableSubstitutionInclusion.check_premises_validity"]], "compose_paragraph_proof() (punctilious.variablesubstitutioninclusion method)": [[196, "punctilious.VariableSubstitutionInclusion.compose_paragraph_proof"]], "construct_formula() (punctilious.variablesubstitutioninclusion method)": [[196, "punctilious.VariableSubstitutionInclusion.construct_formula"]], "i (punctilious.variablesubstitutioninclusion property)": [[196, "punctilious.VariableSubstitutionInclusion.i"]], "infer_formula_statement() (punctilious.variablesubstitutioninclusion method)": [[196, "punctilious.VariableSubstitutionInclusion.infer_formula_statement"]], "create_universe_of_discourse() (in module punctilious)": [[197, "punctilious.create_universe_of_discourse"]]}})