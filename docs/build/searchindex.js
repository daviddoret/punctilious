Search.setIndex({"docnames": ["_tags/absorption", "_tags/biconditional-elimination-1", "_tags/biconditional-elimination-2", "_tags/biconditional-introduction", "_tags/class", "_tags/concept", "_tags/conjunction-elimination-1", "_tags/conjunction-elimination-2", "_tags/conjunction-introduction", "_tags/declaration", "_tags/disjunction-introduction-1", "_tags/disjunction-introduction-2", "_tags/double-negation-elimination", "_tags/double-negation-introduction", "_tags/equal-terms-substitution", "_tags/equality-commutativity", "_tags/inclusion", "_tags/inconsistency-introduction-1", "_tags/inconsistency-introduction-2", "_tags/inconsistency-introduction-3", "_tags/inference-rule", "_tags/math", "_tags/modus-ponens", "_tags/proof-by-contradiction-1", "_tags/proof-by-contradiction-2", "_tags/proof-by-refutation-1", "_tags/proof-by-refutation-2", "_tags/python", "_tags/sample", "_tags/tagsindex", "_tags/universe-of-discourse", "_tags/variable-substitution", "back_matter", "back_matter/bibliography_back_matter", "front_matter", "front_matter/about_front_matter", "front_matter/contributing_front_matter", "front_matter/project_front_matter", "front_matter/roadmap_front_matter", "front_matter/support_front_matter", "front_matter/title_front_matter", "index", "math", "math/concept/axiom_math_concept", "math/concept/elimination_rule_math_concept", "math/concept/formula_math_concept", "math/concept/formula_statement_math_concept", "math/concept/free_variable_math_concept", "math/concept/hypothesis_math_concept", "math/concept/inference_rule_math_concept", "math/concept/introduction_rule_math_concept", "math/concept/is_a_math_concept", "math/concept/meta_object_math_concept", "math/concept/notation_form_math_concept", "math/concept/object_creation_math_concept", "math/concept/object_declaration_math_concept", "math/concept/object_inclusion_math_concept", "math/concept/object_math_concept", "math/concept/paragraph_proof_math_concept", "math/concept/relation_math_concept", "math/concept/statement_math_concept", "math/concept/theory_elaboration_sequence_math_concept", "math/concept/universe_of_discourse_math_concept", "math/concept/validity_of_formula_math_concept", "math/inference_rule/absorption_math_inference_rule", "math/inference_rule/biconditional_elimination_1_math_inference_rule", "math/inference_rule/biconditional_elimination_2_math_inference_rule", "math/inference_rule/biconditional_introduction_math_inference_rule", "math/inference_rule/conjunction_elimination_1_math_inference_rule", "math/inference_rule/conjunction_elimination_2_math_inference_rule", "math/inference_rule/conjunction_introduction_math_inference_rule", "math/inference_rule/disjunction_introduction_1_math_inference_rule", "math/inference_rule/disjunction_introduction_2_math_inference_rule", "math/inference_rule/double_negation_elimination_math_inference_rule", "math/inference_rule/double_negation_introduction_math_inference_rule", "math/inference_rule/equal_terms_substitution_math_inference_rule", "math/inference_rule/equality_commutativity_math_inference_rule", "math/inference_rule/inconsistency_introduction_1_math_inference_rule", "math/inference_rule/inconsistency_introduction_2_math_inference_rule", "math/inference_rule/inconsistency_introduction_3_math_inference_rule", "math/inference_rule/modus_ponens_math_inference_rule", "math/inference_rule/proof_by_contradiction_1_math_inference_rule", "math/inference_rule/proof_by_contradiction_2_math_inference_rule", "math/inference_rule/proof_by_refutation_1_math_inference_rule", "math/inference_rule/proof_by_refutation_2_math_inference_rule", "math/inference_rule/variable_substitution_math_inference_rule", "math/theory/tao_2006", "math/theory/tao_2006/the_peano_axioms", "math_concept", "math_inference_rule", "math_theory", "python", "python/class/absorption_declaration_python_class", "python/class/absorption_inclusion_python_class", "python/class/biconditional_elimination_1_declaration_python_class", "python/class/biconditional_elimination_1_inclusion_python_class", "python/class/biconditional_elimination_2_declaration_python_class", "python/class/biconditional_elimination_2_inclusion_python_class", "python/class/biconditional_introduction_declaration_python_class", "python/class/biconditional_introduction_inclusion_python_class", "python/class/conjunction_elimination_1_declaration_python_class", "python/class/conjunction_elimination_1_inclusion_python_class", "python/class/conjunction_elimination_2_declaration_python_class", "python/class/conjunction_elimination_2_inclusion_python_class", "python/class/conjunction_introduction_declaration_python_class", "python/class/conjunction_introduction_inclusion_python_class", "python/class/disjunction_introduction_1_declaration_python_class", "python/class/disjunction_introduction_1_inclusion_python_class", "python/class/disjunction_introduction_2_declaration_python_class", "python/class/disjunction_introduction_2_inclusion_python_class", "python/class/double_negation_elimination_declaration_python_class", "python/class/double_negation_elimination_inclusion_python_class", "python/class/double_negation_introduction_declaration_python_class", "python/class/double_negation_introduction_inclusion_python_class", "python/class/equal_terms_substitution_declaration_python_class", "python/class/equal_terms_substitution_inclusion_python_class", "python/class/equality_commutativity_declaration_python_class", "python/class/equality_commutativity_inclusion_python_class", "python/class/inconsistency_introduction_1_declaration_python_class", "python/class/inconsistency_introduction_1_inclusion_python_class", "python/class/inconsistency_introduction_2_declaration_python_class", "python/class/inconsistency_introduction_2_inclusion_python_class", "python/class/inconsistency_introduction_3_declaration_python_class", "python/class/inconsistency_introduction_3_inclusion_python_class", "python/class/inference_rule_declaration_python_class", "python/class/modus_ponens_declaration_python_class", "python/class/modus_ponens_inclusion_python_class", "python/class/proof_by_contradiction_1_declaration_python_class", "python/class/proof_by_contradiction_1_inclusion_python_class", "python/class/proof_by_contradiction_2_declaration_python_class", "python/class/proof_by_contradiction_2_inclusion_python_class", "python/class/proof_by_refutation_1_declaration_python_class", "python/class/proof_by_refutation_1_inclusion_python_class", "python/class/proof_by_refutation_2_declaration_python_class", "python/class/proof_by_refutation_2_inclusion_python_class", "python/class/python_class_index", "python/class/universe_of_discourse_python_class", "python/class/variable_substitution_declaration_python_class", "python/class/variable_substitution_inclusion_python_class", "python/function/create_universe_of_discourse", "python/function/python_function_index", "python/installation_python", "python/prerequisites_python", "python/sample/absorption_python_sample", "python/sample/biconditional_elimination_1_python_sample", "python/sample/biconditional_elimination_2_python_sample", "python/sample/biconditional_introduction_python_sample", "python/sample/conjunction_elimination_1_python_sample", "python/sample/conjunction_elimination_2_python_sample", "python/sample/conjunction_introduction_python_sample", "python/sample/disjunction_introduction_1_python_sample", "python/sample/disjunction_introduction_2_python_sample", "python/sample/double_negation_elimination_python_sample", "python/sample/double_negation_introduction_python_sample", "python/sample/equal_terms_substitution_python_sample", "python/sample/equality_commutativity_python_sample", "python/sample/inconsistency_introduction_1_python_sample", "python/sample/inconsistency_introduction_2_python_sample", "python/sample/inconsistency_introduction_3_python_sample", "python/sample/modus_ponens_python_sample", "python/sample/proof_by_contradiction_1_python_sample", "python/sample/proof_by_contradiction_2_python_sample", "python/sample/proof_by_refutation_1_python_sample", "python/sample/proof_by_refutation_2_python_sample", "python/sample/python_sample_index", "python/sample/variable_substitution_python_sample", "python/source_code_repository_python"], "filenames": ["_tags/absorption.rst", "_tags/biconditional-elimination-1.rst", "_tags/biconditional-elimination-2.rst", "_tags/biconditional-introduction.rst", "_tags/class.rst", "_tags/concept.rst", "_tags/conjunction-elimination-1.rst", "_tags/conjunction-elimination-2.rst", "_tags/conjunction-introduction.rst", "_tags/declaration.rst", "_tags/disjunction-introduction-1.rst", "_tags/disjunction-introduction-2.rst", "_tags/double-negation-elimination.rst", "_tags/double-negation-introduction.rst", "_tags/equal-terms-substitution.rst", "_tags/equality-commutativity.rst", "_tags/inclusion.rst", "_tags/inconsistency-introduction-1.rst", "_tags/inconsistency-introduction-2.rst", "_tags/inconsistency-introduction-3.rst", "_tags/inference-rule.rst", "_tags/math.rst", "_tags/modus-ponens.rst", "_tags/proof-by-contradiction-1.rst", "_tags/proof-by-contradiction-2.rst", "_tags/proof-by-refutation-1.rst", "_tags/proof-by-refutation-2.rst", "_tags/python.rst", "_tags/sample.rst", "_tags/tagsindex.rst", "_tags/universe-of-discourse.rst", "_tags/variable-substitution.rst", "back_matter.rst", "back_matter/bibliography_back_matter.rst", "front_matter.rst", "front_matter/about_front_matter.rst", "front_matter/contributing_front_matter.rst", "front_matter/project_front_matter.rst", "front_matter/roadmap_front_matter.rst", "front_matter/support_front_matter.rst", "front_matter/title_front_matter.rst", "index.rst", "math.rst", "math/concept/axiom_math_concept.rst", "math/concept/elimination_rule_math_concept.rst", "math/concept/formula_math_concept.rst", "math/concept/formula_statement_math_concept.rst", "math/concept/free_variable_math_concept.rst", "math/concept/hypothesis_math_concept.rst", "math/concept/inference_rule_math_concept.rst", "math/concept/introduction_rule_math_concept.rst", "math/concept/is_a_math_concept.rst", "math/concept/meta_object_math_concept.rst", "math/concept/notation_form_math_concept.rst", "math/concept/object_creation_math_concept.rst", "math/concept/object_declaration_math_concept.rst", "math/concept/object_inclusion_math_concept.rst", "math/concept/object_math_concept.rst", "math/concept/paragraph_proof_math_concept.rst", "math/concept/relation_math_concept.rst", "math/concept/statement_math_concept.rst", "math/concept/theory_elaboration_sequence_math_concept.rst", "math/concept/universe_of_discourse_math_concept.rst", "math/concept/validity_of_formula_math_concept.rst", "math/inference_rule/absorption_math_inference_rule.rst", "math/inference_rule/biconditional_elimination_1_math_inference_rule.rst", "math/inference_rule/biconditional_elimination_2_math_inference_rule.rst", "math/inference_rule/biconditional_introduction_math_inference_rule.rst", "math/inference_rule/conjunction_elimination_1_math_inference_rule.rst", "math/inference_rule/conjunction_elimination_2_math_inference_rule.rst", "math/inference_rule/conjunction_introduction_math_inference_rule.rst", "math/inference_rule/disjunction_introduction_1_math_inference_rule.rst", "math/inference_rule/disjunction_introduction_2_math_inference_rule.rst", "math/inference_rule/double_negation_elimination_math_inference_rule.rst", "math/inference_rule/double_negation_introduction_math_inference_rule.rst", "math/inference_rule/equal_terms_substitution_math_inference_rule.rst", "math/inference_rule/equality_commutativity_math_inference_rule.rst", "math/inference_rule/inconsistency_introduction_1_math_inference_rule.rst", "math/inference_rule/inconsistency_introduction_2_math_inference_rule.rst", "math/inference_rule/inconsistency_introduction_3_math_inference_rule.rst", "math/inference_rule/modus_ponens_math_inference_rule.rst", "math/inference_rule/proof_by_contradiction_1_math_inference_rule.rst", "math/inference_rule/proof_by_contradiction_2_math_inference_rule.rst", "math/inference_rule/proof_by_refutation_1_math_inference_rule.rst", "math/inference_rule/proof_by_refutation_2_math_inference_rule.rst", "math/inference_rule/variable_substitution_math_inference_rule.rst", "math/theory/tao_2006.rst", "math/theory/tao_2006/the_peano_axioms.rst", "math_concept.rst", "math_inference_rule.rst", "math_theory.rst", "python.rst", "python/class/absorption_declaration_python_class.rst", "python/class/absorption_inclusion_python_class.rst", "python/class/biconditional_elimination_1_declaration_python_class.rst", "python/class/biconditional_elimination_1_inclusion_python_class.rst", "python/class/biconditional_elimination_2_declaration_python_class.rst", "python/class/biconditional_elimination_2_inclusion_python_class.rst", "python/class/biconditional_introduction_declaration_python_class.rst", "python/class/biconditional_introduction_inclusion_python_class.rst", "python/class/conjunction_elimination_1_declaration_python_class.rst", "python/class/conjunction_elimination_1_inclusion_python_class.rst", "python/class/conjunction_elimination_2_declaration_python_class.rst", "python/class/conjunction_elimination_2_inclusion_python_class.rst", "python/class/conjunction_introduction_declaration_python_class.rst", "python/class/conjunction_introduction_inclusion_python_class.rst", "python/class/disjunction_introduction_1_declaration_python_class.rst", "python/class/disjunction_introduction_1_inclusion_python_class.rst", "python/class/disjunction_introduction_2_declaration_python_class.rst", "python/class/disjunction_introduction_2_inclusion_python_class.rst", "python/class/double_negation_elimination_declaration_python_class.rst", "python/class/double_negation_elimination_inclusion_python_class.rst", "python/class/double_negation_introduction_declaration_python_class.rst", "python/class/double_negation_introduction_inclusion_python_class.rst", "python/class/equal_terms_substitution_declaration_python_class.rst", "python/class/equal_terms_substitution_inclusion_python_class.rst", "python/class/equality_commutativity_declaration_python_class.rst", "python/class/equality_commutativity_inclusion_python_class.rst", "python/class/inconsistency_introduction_1_declaration_python_class.rst", "python/class/inconsistency_introduction_1_inclusion_python_class.rst", "python/class/inconsistency_introduction_2_declaration_python_class.rst", "python/class/inconsistency_introduction_2_inclusion_python_class.rst", "python/class/inconsistency_introduction_3_declaration_python_class.rst", "python/class/inconsistency_introduction_3_inclusion_python_class.rst", "python/class/inference_rule_declaration_python_class.rst", "python/class/modus_ponens_declaration_python_class.rst", "python/class/modus_ponens_inclusion_python_class.rst", "python/class/proof_by_contradiction_1_declaration_python_class.rst", "python/class/proof_by_contradiction_1_inclusion_python_class.rst", "python/class/proof_by_contradiction_2_declaration_python_class.rst", "python/class/proof_by_contradiction_2_inclusion_python_class.rst", "python/class/proof_by_refutation_1_declaration_python_class.rst", "python/class/proof_by_refutation_1_inclusion_python_class.rst", "python/class/proof_by_refutation_2_declaration_python_class.rst", "python/class/proof_by_refutation_2_inclusion_python_class.rst", "python/class/python_class_index.rst", "python/class/universe_of_discourse_python_class.rst", "python/class/variable_substitution_declaration_python_class.rst", "python/class/variable_substitution_inclusion_python_class.rst", "python/function/create_universe_of_discourse.rst", "python/function/python_function_index.rst", "python/installation_python.rst", "python/prerequisites_python.rst", "python/sample/absorption_python_sample.rst", "python/sample/biconditional_elimination_1_python_sample.rst", "python/sample/biconditional_elimination_2_python_sample.rst", "python/sample/biconditional_introduction_python_sample.rst", "python/sample/conjunction_elimination_1_python_sample.rst", "python/sample/conjunction_elimination_2_python_sample.rst", "python/sample/conjunction_introduction_python_sample.rst", "python/sample/disjunction_introduction_1_python_sample.rst", "python/sample/disjunction_introduction_2_python_sample.rst", "python/sample/double_negation_elimination_python_sample.rst", "python/sample/double_negation_introduction_python_sample.rst", "python/sample/equal_terms_substitution_python_sample.rst", "python/sample/equality_commutativity_python_sample.rst", "python/sample/inconsistency_introduction_1_python_sample.rst", "python/sample/inconsistency_introduction_2_python_sample.rst", "python/sample/inconsistency_introduction_3_python_sample.rst", "python/sample/modus_ponens_python_sample.rst", "python/sample/proof_by_contradiction_1_python_sample.rst", "python/sample/proof_by_contradiction_2_python_sample.rst", "python/sample/proof_by_refutation_1_python_sample.rst", "python/sample/proof_by_refutation_2_python_sample.rst", "python/sample/python_sample_index.rst", "python/sample/variable_substitution_python_sample.rst", "python/source_code_repository_python.rst"], "titles": ["My tags: absorption", "My tags: biconditional-elimination-1", "My tags: biconditional-elimination-2", "My tags: biconditional-introduction", "My tags: class", "My tags: concept", "My tags: conjunction-elimination-1", "My tags: conjunction-elimination-2", "My tags: conjunction-introduction", "My tags: declaration", "My tags: disjunction-introduction-1", "My tags: disjunction-introduction-2", "My tags: double-negation-elimination", "My tags: double-negation-introduction", "My tags: equal-terms-substitution", "My tags: equality-commutativity", "My tags: inclusion", "My tags: inconsistency-introduction-1", "My tags: inconsistency-introduction-2", "My tags: inconsistency-introduction-3", "My tags: inference-rule", "My tags: math", "My tags: modus-ponens", "My tags: proof-by-contradiction-1", "My tags: proof-by-contradiction-2", "My tags: proof-by-refutation-1", "My tags: proof-by-refutation-2", "My tags: python", "My tags: sample", "Tags overview", "My tags: universe-of-discourse", "My tags: variable-substitution", "Back matter", "Bibliography", "Front matter", "About <em>punctilious</em>", "Contributing to <em>punctilious</em>", "The <em>punctilious</em> project", "Roadmap", "Support", "Punctilious", "punctilious", "Math", "axiom", "elimination-rule", "formula", "formula-statement", "free-variable", "hypothesis", "inference-rule", "introduction-rule", "is-a", "meta-object", "notation-form", "object-creation", "object-declaration", "object-inclusion", "object", "paragraph-proof (proof-style)", "relation", "statement", "theory-elaboration-sequence", "universe-of-discourse", "validity-of-formula", "absorption (math concept)", "biconditional-elimination-1 (math concept)", "biconditional-elimination-2 (math concept)", "biconditional-introduction (math concept)", "conjunction-elimination-1 (math concept)", "conjunction-elimination-2 (math concept)", "conjunction-introduction (math concept)", "disjunction-introduction-1 (math concept)", "disjunction-introduction-2 (math concept)", "double-negation-elimination (math concept)", "double-negation-introduction (math concept)", "equal-terms-substitution (math concept)", "equality-commutativity (math concept)", "inconsistency-introduction-1 (math concept)", "inconsistency-introduction-2 (math concept)", "inconsistency-introduction-3 (math concept)", "modus-ponens (math concept)", "proof-by-contradiction-1 (math concept)", "proof-by-contradiction-2 (math concept)", "proof-by-refutation-1 (math concept)", "proof-by-refutation-2 (math concept)", "variable-substitution (math concept)", "Tao 2006", "The Peano axioms", "Math concept", "Math inference_rule", "Math theory", "Python", "AbsorptionDeclaration (python class)", "AbsorptionInclusion (python class)", "BiconditionalElimination1Declaration (python class)", "BiconditionalElimination1Inclusion (python class)", "BiconditionalElimination2Declaration (python class)", "BiconditionalElimination2Inclusion (python class)", "BiconditionalIntroductionDeclaration (python class)", "BiconditionalIntroductionInclusion (python class)", "ConjunctionElimination1Declaration (python class)", "ConjunctionElimination1Inclusion (python class)", "ConjunctionElimination2Declaration (python class)", "ConjunctionElimination2Inclusion (python class)", "ConjunctionIntroductionDeclaration (python class)", "ConjunctionIntroductionInclusion (python class)", "DisjunctionIntroduction1Declaration (python class)", "DisjunctionIntroduction1Inclusion (python class)", "DisjunctionIntroduction2Declaration (python class)", "DisjunctionIntroduction2Inclusion (python class)", "DoubleNegationEliminationDeclaration (python class)", "DoubleNegationEliminationInclusion (python class)", "DoubleNegationIntroductionDeclaration (python class)", "DoubleNegationIntroductionInclusion (python class)", "EqualTermsSubstitutionDeclaration (python class)", "EqualTermsSubstitutionInclusion (python class)", "EqualityCommutativityDeclaration (python class)", "EqualityCommutativityInclusion (python class)", "InconsistencyIntroduction1Declaration (python class)", "InconsistencyIntroduction1Inclusion (python class)", "InconsistencyIntroduction2Declaration (python class)", "InconsistencyIntroduction2Inclusion (python class)", "InconsistencyIntroduction3Declaration (python class)", "InconsistencyIntroduction3Inclusion (python class)", "InferenceRuleDeclarationDict (python class)", "ModusPonensDeclaration (python class)", "ModusPonensInclusion (python class)", "ProofByContradiction1Declaration (python class)", "ProofByContradiction1Inclusion (python class)", "ProofByContradiction2Declaration (python class)", "ProofByContradiction2Inclusion (python class)", "ProofByRefutation1Declaration (python class)", "ProofByRefutation1Inclusion (python class)", "ProofByRefutation2Declaration (python class)", "ProofByRefutation2Inclusion (python class)", "Python classes", "UniverseOfDiscourse (python class)", "VariableSubstitutionDeclaration (python class)", "VariableSubstitutionInclusion (python class)", "create_universe_of_discourse", "Python functions", "Installation", "Prerequisites", "absorption (python sample)", "biconditional-elimination-1 (python sample)", "biconditional-elimination-2 (python sample)", "biconditional-introduction (python sample)", "conjunction-elimination-1 (python sample)", "conjunction-elimination-2 (python sample)", "conjunction-introduction (python sample)", "disjunction-introduction-1 (python sample)", "disjunction-introduction-2 (python sample)", "double-negation-elimination (python sample)", "double-negation-introduction (python sample)", "equal-terms-substitution (python sample)", "equality-commutativity (python sample)", "inconsistency-introduction-1 (python sample)", "inconsistency-introduction-2 (python sample)", "inconsistency-introduction-3 (python sample)", "modus-ponens (python sample)", "proof-by-contradiction-1 (python sample)", "proof-by-contradiction-2 (python sample)", "proof-by-refutation-1 (python sample)", "proof-by-refutation-2 (python sample)", "Python samples", "variable-substitution (python sample)", "Source code repository"], "terms": {"math": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 31, 33, 40, 41, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "concept": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 41, 42, 51, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "absorptiondeclar": [0, 4, 9, 27, 41, 135], "python": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 35, 41, 42, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 166], "class": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 41, 51, 52, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "absorptioninclus": [0, 4, 16, 27, 41, 135], "sampl": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 29, 31, 41, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "biconditionalelimination1declar": [1, 4, 9, 27, 41, 135], "biconditionalelimination1inclus": [1, 4, 16, 27, 41, 135], "biconditionalelimination2declar": [2, 4, 9, 27, 41, 135], "biconditionalelimination2inclus": [2, 4, 16, 27, 41, 135], "biconditionalintroductiondeclar": [3, 4, 9, 27, 41, 135], "biconditionalintroductioninclus": [3, 4, 16, 27, 41, 135], "conjunctionelimination1declar": [4, 6, 9, 27, 41, 135], "conjunctionelimination1inclus": [4, 6, 16, 27, 41, 135], "conjunctionelimination2declar": [4, 7, 9, 27, 41, 135], "conjunctionelimination2inclus": [4, 7, 16, 27, 41, 135], "conjunctionintroductiondeclar": [4, 8, 9, 27, 41, 135], "conjunctionintroductioninclus": [4, 8, 16, 27, 41, 135], "disjunctionintroduction1declar": [4, 9, 10, 27, 41, 135], "disjunctionintroduction1inclus": [4, 10, 16, 27, 41, 135], "disjunctionintroduction2declar": [4, 9, 11, 27, 41, 135], "disjunctionintroduction2inclus": [4, 11, 16, 27, 41, 135], "doublenegationeliminationdeclar": [4, 9, 12, 27, 41, 135], "doublenegationeliminationinclus": [4, 12, 16, 27, 41, 135], "doublenegationintroductiondeclar": [4, 9, 13, 27, 41, 135], "doublenegationintroductioninclus": [4, 13, 16, 27, 41, 135], "equaltermssubstitutiondeclar": [4, 9, 14, 27, 41, 135], "equaltermssubstitutioninclus": [4, 14, 16, 27, 41, 135], "equalitycommutativitydeclar": [4, 9, 15, 27, 41, 135], "equalitycommutativityinclus": [4, 15, 16, 27, 41, 135], "inconsistencyintroduction1declar": [4, 9, 17, 27, 41, 135], "inconsistencyintroduction1inclus": [4, 16, 17, 27, 41, 135], "inconsistencyintroduction2declar": [4, 9, 18, 27, 41, 135], "inconsistencyintroduction2inclus": [4, 16, 18, 27, 41, 135], "inconsistencyintroduction3declar": [4, 9, 19, 27, 41, 135], "inconsistencyintroduction3inclus": [4, 16, 19, 27, 41, 135], "inferenceruledeclarationdict": [4, 9, 20, 27, 136], "modusponensdeclar": [4, 9, 22, 27, 41, 135], "modusponensinclus": [4, 16, 22, 27, 41, 135], "proofbycontradiction1declar": [4, 9, 23, 27, 41, 135], "proofbycontradiction1inclus": [4, 16, 23, 27, 41, 135], "proofbycontradiction2declar": [4, 9, 24, 27, 41, 135], "proofbycontradiction2inclus": [4, 16, 24, 27, 41, 135], "proofbyrefutation1declar": [4, 9, 25, 27, 41, 135], "proofbyrefutation1inclus": [4, 16, 25, 27, 41, 135], "proofbyrefutation2declar": [4, 9, 26, 27, 41, 135], "proofbyrefutation2inclus": [4, 16, 26, 27, 41, 135], "universeofdiscours": [4, 27, 30, 41, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 135, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163], "variablesubstitutiondeclar": [4, 9, 27, 31, 41, 135], "variablesubstitutioninclus": [4, 16, 27, 31, 41, 135], "absorpt": [5, 20, 21, 27, 28, 29, 41, 42, 49, 89, 92, 93, 164], "bicondit": [5, 20, 21, 27, 28, 29, 41, 42, 44, 49, 50, 89, 94, 95, 96, 97, 98, 99, 164], "elimin": [5, 20, 21, 27, 28, 29, 41, 42, 49, 50, 88, 89, 94, 95, 96, 97, 99, 100, 101, 102, 103, 110, 111, 164], "1": [5, 20, 21, 27, 28, 29, 37, 41, 42, 44, 49, 50, 62, 87, 89, 94, 95, 96, 100, 101, 106, 107, 110, 118, 119, 127, 128, 131, 132, 143, 145, 146, 148, 149, 151, 154, 155, 159, 161, 163, 164], "2": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 87, 89, 96, 97, 99, 102, 103, 108, 109, 120, 121, 129, 130, 133, 134, 143, 144, 146, 147, 149, 150, 152, 153, 154, 155, 156, 159, 160, 162, 164, 165], "introduct": [5, 20, 21, 27, 28, 29, 33, 41, 42, 49, 73, 87, 88, 89, 98, 99, 104, 105, 106, 107, 108, 109, 112, 113, 118, 119, 120, 121, 122, 123, 160, 161, 162, 163, 164], "conjunct": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 87, 89, 100, 101, 102, 103, 104, 105, 160, 162, 164], "disjunct": [5, 20, 21, 27, 28, 29, 41, 42, 44, 49, 50, 89, 106, 107, 108, 109, 164], "doubl": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 89, 104, 106, 108, 110, 111, 112, 113, 164], "negat": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 77, 89, 104, 106, 108, 110, 111, 112, 113, 160, 161, 162, 164], "equal": [5, 20, 21, 27, 28, 29, 41, 42, 49, 78, 79, 82, 84, 87, 89, 114, 115, 116, 117, 161, 164], "term": [5, 20, 21, 27, 28, 29, 33, 41, 42, 44, 49, 50, 78, 87, 89, 114, 115, 164], "substitut": [5, 20, 21, 27, 28, 29, 41, 42, 49, 87, 89, 114, 115, 137, 138, 160, 161, 162, 163, 164], "commut": [5, 20, 21, 27, 28, 29, 41, 42, 49, 87, 89, 116, 117, 164], "inconsist": [5, 20, 21, 27, 28, 29, 41, 42, 49, 81, 82, 83, 84, 87, 89, 118, 119, 120, 121, 122, 123, 128, 132, 160, 161, 162, 163, 164], "3": [5, 20, 21, 27, 28, 29, 33, 41, 42, 49, 87, 89, 122, 123, 164], "modu": [5, 20, 21, 27, 28, 29, 41, 42, 49, 87, 89, 125, 126, 128, 132, 160, 161, 162, 163, 164], "ponen": [5, 20, 21, 27, 28, 29, 41, 42, 49, 87, 89, 125, 126, 128, 132, 160, 161, 162, 163, 164], "proof": [5, 20, 21, 27, 28, 29, 33, 38, 40, 41, 42, 49, 70, 74, 78, 79, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165], "contradict": [5, 20, 21, 27, 28, 29, 41, 42, 49, 83, 87, 89, 127, 128, 129, 130, 162, 163, 164], "refut": [5, 20, 21, 27, 28, 29, 41, 42, 49, 87, 89, 131, 132, 133, 134, 164], "variabl": [5, 20, 21, 27, 28, 29, 41, 42, 49, 55, 87, 88, 89, 136, 137, 138, 160, 161, 162, 163, 164], "4": [29, 87], "46": 29, "22": [29, 33], "declar": [29, 41, 42, 54, 56, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "23": 29, "inclus": [29, 41, 42, 54, 55, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "infer": [29, 38, 41, 42, 44, 50, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "rule": [29, 33, 38, 41, 42, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "24": 29, "68": 29, "univers": [29, 33, 41, 42, 55, 56, 61, 88, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 136, 137, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "discours": [29, 41, 42, 55, 56, 61, 88, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 136, 137, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "bibliographi": [32, 41], "ast10": [33, 58], "loui": 33, "astorino": 33, "style": 33, "2010": 33, "url": [33, 49], "http": [33, 37, 49], "www": 33, "arlingtonschool": 33, "org": [33, 49], "cm": 33, "lib": 33, "ny02215626": 33, "centric": 33, "domain": 33, "4295": 33, "proofs_1": 33, "pdf": [33, 38], "visit": 33, "2023": 33, "08": 33, "14": 33, "coo09": [33, 71, 72], "roi": 33, "t": [33, 60, 62, 63, 77, 78, 79, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "cook": 33, "A": [33, 40, 41, 59, 60, 61, 62, 78, 79, 87, 92, 94, 96, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 124, 125, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "dictionari": [33, 136], "philosoph": 33, "logic": [33, 38, 70, 74], "edinburgh": 33, "press": 33, "2009": 33, "isbn": 33, "978": 33, "0": [33, 87], "7486": 33, "2559": 33, "8": [33, 87], "dow09": [33, 59], "dougla": 33, "down": [33, 85], "mathemat": [33, 35, 42, 49, 62, 87, 88, 89, 90, 91], "3rd": 33, "edit": 33, "barron": 33, "": [33, 61, 136], "profession": [33, 36], "guid": 33, "ed": 33, "13": 33, "7641": 33, "4139": 33, "10": 33, "librari": [33, 166], "congress": 33, "control": 33, "number": [33, 85, 87], "2008931689": 33, "mcadams14": [33, 59], "david": 33, "e": [33, 35, 62, 87, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "mcadam": 33, "all": [33, 38, 114], "word": [33, 87], "second": [33, 85], "life": 33, "i": [33, 35, 36, 41, 42, 44, 48, 49, 50, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "stori": 33, "problem": 33, "llc": 33, "2014": 33, "proofwiki22a": [33, 74], "proofwiki": 33, "septemb": 33, "2022": 33, "wiki": [33, 49], "double_neg": 33, "double_negation_introduct": [33, 112, 113, 153], "proof_rul": 33, "21": 33, "proofwiki22b": [33, 70], "june": 33, "rule_of_conjunct": 33, "titl": [34, 41, 49], "about": [34, 41, 55, 56], "contribut": [34, 39, 41], "roadmap": [34, 36, 41], "project": [34, 35, 36, 41], "support": [34, 38, 41, 53], "open": 35, "sourc": [35, 41, 91], "In": [35, 48, 51, 54, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 81, 82, 83, 84, 85, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "clear": [35, 36], "intend": 35, "facilit": 35, "studi": 35, "human": [35, 40, 41], "beings": 35, "There": 35, "exist": [35, 54, 55, 62], "multipl": [35, 85], "includ": [35, 62, 70, 74, 85, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "coq": 35, "isabel": 35, "lean": 35, "mani": 35, "more": [35, 55], "The": [35, 36, 41, 42, 53, 62, 70, 74, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 125, 126, 127, 128, 129, 131, 132, 133, 136, 137, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166], "page": [35, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "wikipedia": [35, 49], "contain": [35, 48, 55, 62, 104, 106, 108, 112, 136, 137], "gener": [35, 54, 55, 56, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 136, 137], "purpos": [35, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163], "comparison": 35, "contrast": 35, "ridicul": 35, "lilliputian": 35, "neither": 35, "length": 35, "nor": 35, "breadth": 35, "time": [35, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "proven": [35, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 110], "system": [35, 87], "besid": 35, "being": 35, "fun": 35, "thrill": 35, "learn": 35, "experi": 35, "focu": 35, "point": [35, 48], "ar": [35, 36, 38, 48, 53, 68, 69, 70, 75, 78, 79, 85, 87, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 136], "friendli": [35, 40, 41], "input": [35, 38, 92, 94, 96, 98, 100, 102, 110, 112, 114, 116, 118, 120, 122, 127, 129, 131, 133], "write": 35, "we": [35, 36, 37, 38, 39, 44, 48, 50, 55, 62, 70, 74, 77, 78, 79, 87, 160, 161, 162, 163], "eas": 35, "us": [35, 51, 55, 62, 85, 87, 88, 89, 90, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "output": [35, 38], "readabl": 35, "doe": [35, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "pai": 35, "much": 35, "attent": 35, "perform": [35, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "larg": 35, "scale": 35, "applic": [35, 143], "everyon": 36, "warmli": 36, "welcom": 36, "here": [36, 38, 54, 55, 56, 139], "some": [36, 38, 44, 49, 50, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "idea": 36, "how": [36, 44, 50, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "get": 36, "start": 36, "If": [36, 39, 62, 70, 74, 87], "you": [36, 39], "feel": [36, 39], "like": 36, "develop": [36, 40, 41], "whether": 36, "have": [36, 78, 79, 85, 87], "featur": 36, "would": 36, "work": 36, "just": 36, "free": [36, 39, 41, 42, 85, 88, 136], "touch": 36, "our": [36, 39, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 165], "github": [36, 37, 39, 166], "discuss": [36, 39], "thread": [36, 39], "most": 36, "happi": 36, "help": [36, 39], "from": [36, 38, 44, 48, 49, 50, 51, 54, 55, 56, 64, 67, 71, 72, 81, 82, 83, 84, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "mathematician": 36, "student": 36, "amateur": 36, "theori": [36, 41, 42, 48, 55, 56, 62, 63, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "look": 36, "mai": [36, 48, 70, 74, 137], "wish": 36, "try": 37, "manag": [37, 136], "thi": [37, 42, 51, 70, 74, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "com": 37, "user": [37, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "daviddoret": 37, "list": [38, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "high": 38, "level": 38, "intent": 38, "regard": [38, 63], "futur": [38, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "punctili": [38, 39, 42, 51, 52, 53, 62, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "continu": 38, "real": 38, "analysi": 38, "tao": [38, 41, 42, 90], "2006": [38, 41, 42, 90], "document": 38, "properli": 38, "naiv": 38, "set": [38, 51, 59, 62, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 165], "proposit": [38, 59, 64, 65, 66, 67, 68, 69, 70, 74, 77, 81, 82, 83, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "fundament": 38, "geometri": 38, "meta": [38, 41, 42, 88], "provid": [38, 86, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "simpl": [38, 62, 87, 136], "understand": 38, "error": 38, "inform": [38, 87], "messag": 38, "when": [38, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "invalid": 38, "function": [38, 41, 53, 81, 82, 83, 91, 136, 139], "import": [38, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "natur": [38, 70, 74, 85, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "text": [38, 58, 81, 87], "ascii": 38, "unicod": [38, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "latex": [38, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "two": [38, 59, 78], "column": 38, "export": 38, "json": 38, "xml": 38, "csv": 38, "need": [39, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "contact": 39, "u": [39, 44, 50, 52, 55, 61, 124, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "do": [39, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "best": 39, "effort": 39, "assist": [40, 41], "front": 41, "matter": 41, "axiom": [41, 42, 62, 63, 86, 88, 90, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "formula": [41, 42, 44, 48, 50, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 83, 84, 85, 87, 88, 92, 93, 94, 96, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 125, 126, 128, 132, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "statement": [41, 42, 44, 48, 49, 50, 54, 55, 56, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 83, 85, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "hypothesi": [41, 42, 81, 82, 83, 84, 87, 88, 127, 128, 129, 131, 132, 133, 160, 161, 162, 163], "object": [41, 42, 51, 59, 62, 79, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "notat": [41, 42, 59, 88], "form": [41, 42, 44, 50, 59, 74, 75, 76, 85, 87, 88, 92, 94, 96, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162], "creation": [41, 42, 55, 56, 62, 88, 139], "paragraph": [41, 42, 88, 104, 106, 108, 112, 137], "relat": [41, 42, 51, 62, 87, 88, 91, 136], "elabor": [41, 42, 48, 56, 62, 63, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 126, 128, 130, 132, 134, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "sequenc": [41, 42, 48, 56, 62, 63, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 126, 128, 130, 132, 134, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "valid": [41, 42, 49, 60, 61, 70, 72, 73, 74, 75, 76, 87, 88, 93, 104, 106, 108, 112, 113, 126, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "peano": [41, 42, 86, 90], "prerequisit": [41, 91], "instal": [41, 91], "code": [41, 91, 136, 139], "inferenceruledeclar": [41, 135, 136], "create_universe_of_discours": [41, 140, 160, 162, 165], "back": 41, "refer": [42, 88, 89, 90, 91, 136], "rational": [42, 91], "keep": [42, 91], "clearli": [42, 91], "distinct": [42, 54, 55, 56, 91, 156, 157, 158, 163], "cross": [42, 91, 136], "referenc": [42, 91], "an": [44, 48, 49, 50, 51, 54, 55, 56, 62, 63, 79, 81, 82, 83, 84, 87, 93, 111, 114, 116, 119, 121, 123, 126, 128, 132, 136], "allow": [44, 49, 50, 71, 72], "deriv": [44, 49, 50, 78, 79], "syntact": [44, 49, 50, 59, 92, 94, 96, 98, 100, 102, 110, 112, 114, 116, 118, 120, 122, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "defin": [44, 50, 62, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "premis": [44, 49, 50], "each": [44, 50], "tell": [44, 50], "For": [44, 50, 62], "instanc": [44, 50, 136], "show": [44, 50, 78, 79, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "can": [44, 50, 70, 74], "both": [44, 50, 64, 68, 69, 70, 78, 79], "one": [44, 50, 71, 72], "special": [48, 92, 94, 96, 98, 100, 102, 110, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133], "branch": 48, "out": 48, "child": 48, "parent": [48, 81, 82, 83, 84, 127, 129, 131, 133], "postul": [48, 62, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "new": [48, 85, 136, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "true": [48, 59, 65, 66, 67, 68, 69, 70, 71, 72, 81, 83, 87, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 126, 128, 132, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "note": [48, 136], "part": 48, "It": [48, 51, 59], "follow": [48, 53, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 81, 82, 84, 85, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "its": [48, 54, 55, 56, 58, 59, 62, 77, 85, 136, 156, 157, 158, 161, 163], "predecessor": 48, "successor": [48, 87], "straightforward": [48, 54, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 81, 82, 84, 85], "languag": [48, 54, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 81, 82, 83, 84, 85, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "ani": [48, 59, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "pose": [48, 83, 160, 161, 162, 163], "That": 48, "what": 48, "assum": [48, 81, 82, 83, 84, 160, 161, 162, 163], "someth": 48, "tag": [49, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "transform": 49, "which": [49, 55, 56, 63, 78, 79, 156, 158, 160, 162], "encyclopedia": 49, "encyclopediaofmath": 49, "index": [49, 136], "php": 49, "derivation_rul": 49, "oldid": 49, "33737": 49, "en": 49, "list_of_rules_of_infer": 49, "binari": [51, 87], "denot": [51, 87], "belong": 51, "arbitrari": 51, "collect": [51, 62, 124, 136], "design": [51, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "choic": 51, "symbol": [51, 59, 136, 160, 161, 162, 163, 165], "distinguish": [51, 54], "loos": 51, "membership": 51, "simpleobjctdict": [52, 136], "call": [53, 129, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "fix": [53, 59], "post": 53, "pre": 53, "todo": [54, 59, 129], "name": [54, 136, 139], "consid": [54, 55, 56, 62, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "mean": [54, 55, 56, 59], "summon": 54, "footnote2": 55, "extend": [55, 56, 87], "make": [55, 56, 129, 136], "possibl": [55, 56, 78, 79, 85, 129], "speak": 55, "other": [55, 87], "formal": [55, 78, 79, 86, 87], "whenev": [55, 85, 87], "let": [55, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "newli": [55, 85], "creat": [55, 62, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "x": [55, 75, 76, 78, 82, 84, 87, 136, 160, 161, 162, 163, 165], "y": [55, 75, 76, 78, 82, 84, 87, 136, 160, 161, 162, 163, 165], "To": [55, 136], "even": 55, "accur": [55, 92, 94, 96, 98, 100, 102, 110, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133], "should": [55, 92, 94, 96, 98, 100, 102, 110, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133], "accret": 55, "footnot": [55, 56, 62], "footnote1": 56, "constitut": 56, "element": 56, "present": [58, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "singl": 58, "detail": 58, "step": 58, "justif": 58, "conclus": 58, "order": [59, 85], "pair": [59, 85], "equival": [59, 62, 87], "member": 59, "b": 59, "arb": 59, "either": [59, 71, 72], "fals": [59, 81, 87, 92, 94, 96, 98, 100, 102, 110, 112, 114, 116, 118, 120, 122, 136, 160, 161], "repres": 59, "theoret": 59, "assign": [59, 85], "composit": 59, "\ud835\udf11": 59, "establish": [59, 160, 162, 165], "between": 59, "paramet": [59, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "ha": 59, "ariti": [59, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165], "signal": 59, "renam": 59, "represent": 59, "tupl": [60, 61, 62], "phi": [60, 62, 85, 87, 136, 137, 138, 160, 161, 162, 163, 165], "where": [60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 81, 82, 83, 84, 85, 127, 129, 131, 133, 136], "possibli": [62, 124, 136], "empti": [62, 124, 136], "left": [62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 104, 105, 106, 107, 108, 109, 112, 113, 132, 136], "o_1": 62, "o_2": 62, "ldot": 62, "o_n": 62, "right": [62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 104, 105, 106, 107, 108, 109, 112, 113, 132], "o_i": 62, "organ": 62, "desir": 62, "mutual": 62, "exclus": 62, "necessarili": [62, 136], "exhaust": 62, "categori": 62, "mathcal": [62, 77, 78, 79, 81, 82, 83, 84, 132], "c": 62, "_1": 62, "_2": 62, "_n": 62, "_i": 62, "implement": [62, 85, 90], "d": [62, 136], "o": [62, 87, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "r": [62, 114, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "lifecycl": 62, "thei": [62, 92, 94, 96, 98, 100, 102, 110, 112, 114, 116, 118, 120, 122], "must": [62, 87, 104, 106, 108, 112], "And": [62, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "final": [62, 83, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "aka": 62, "ordinari": 62, "sens": 62, "properti": [63, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "definit": [63, 87, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "interpret": [63, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "boldsymbol": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85], "p": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 128, 132, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "impli": [64, 65, 66, 67, 80, 93, 95, 97, 99, 101, 103, 143, 146, 159, 160, 161, 162, 163, 165], "mathbf": [64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 80, 132], "q": [64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 80, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 116, 120, 125, 126, 149, 150, 151, 157, 160, 161, 162, 163], "vdash": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "land": [64, 68, 69, 70, 80, 104, 105, 147, 148, 160, 162], "iff": [65, 66, 67], "onli": [65, 66, 67], "argument": [70, 74, 137], "type": [70, 74, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 136, 137], "deal": [70, 74], "predic": [70, 74], "particular": [70, 74], "deduct": [70, 74], "conclud": [70, 74], "\u03d5": [70, 74], "\u03c8": 70, "compound": 70, "lor": [71, 72, 106, 107, 108, 109], "addit": [71, 72], "p8": [71, 72, 87, 160, 162], "well": [72, 73, 74, 75, 76, 85, 94, 96, 98, 100, 102, 110, 136, 137], "known": [72, 73, 74, 75, 76, 94, 96, 98, 100, 102, 110, 136], "lnot": [73, 74, 112, 113, 152, 156, 160, 162], "As": 74, "express": 74, "ident": 75, "except": 75, "everi": [75, 85, 87], "occurr": [75, 85, 114], "neg": [77, 81, 83, 132], "inc": [77, 78, 79, 81, 82, 83, 84, 87, 127, 128, 129, 131, 132, 133, 156, 157, 158, 160, 161, 162, 163], "prove": [77, 78, 79, 83, 93, 111, 119, 121, 123, 126, 128, 132, 156, 157, 158, 160, 161, 162, 163], "neq": [78, 79, 82, 84, 87, 120, 122, 157, 158, 161, 163], "inequ": [78, 161, 163], "consist": [78, 79, 83, 87], "appeal": [78, 79], "contentu": [78, 79], "consider": [78, 79], "complet": [78, 79], "unproblemat": [78, 79], "question": [78, 79], "never": [78, 79], "\ud835\udc4e": [78, 79, 87, 136], "altern": [78, 79, 81, 82, 83, 84], "\ud835\udc4f": [78, 79], "itself": [79, 81, 82, 83, 84], "h": [81, 82, 83, 84, 132, 160, 161, 162, 163], "mathit": [81, 82, 83], "textit": [82, 83, 84], "plain": 83, "n": [85, 87, 136, 137], "modifi": [85, 114], "version": [85, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "whose": 85, "been": 85, "correspond": 85, "algorithm": 85, "pars": 85, "top": 85, "first": [85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "encount": 85, "dure": 85, "sequenti": 85, "under": [86, 87], "describ": 86, "One": 86, "per": 86, "origin": 86, "packag": 87, "plaintext": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "without": 87, "With": 87, "report": 87, "content": [87, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udde7\ud835\uddf5\ud835\uddf2\ud835\uddfc\ud835\uddff\ud835\ude06": 87, "\ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddfd\ud835\uddf2\ud835\uddff\ud835\ude01\ud835\uddf6\ud835\uddf2\ud835\ude00": 87, "\ud835\uddd6\ud835\uddfc\ud835\uddfb\ud835\ude00\ud835\uddf6\ud835\ude00\ud835\ude01\ud835\uddf2\ud835\uddfb\ud835\uddf0\ud835\ude06": 87, "undetermin": 87, "\ud835\udde6\ud835\ude01\ud835\uddee\ud835\uddef\ud835\uddf6\ud835\uddf9\ud835\uddf6\ud835\ude07\ud835\uddf2\ud835\uddf1": 87, "\ud835\uddd8\ud835\ude05\ud835\ude01\ud835\uddf2\ud835\uddfb\ud835\uddf1\ud835\uddf2\ud835\uddf1": 87, "\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\uddfc\ud835\uddff\ud835\ude06": 87, "\ud835\udde6\ud835\uddf6\ud835\uddfa\ud835\uddfd\ud835\uddf9\ud835\uddf2": 87, "\ud835\uddfc\ud835\uddef\ud835\uddf7\ud835\uddf2\ud835\uddf0\ud835\ude01\ud835\ude00": 87, "\ud835\uddf1\ud835\uddf2\ud835\uddf0\ud835\uddf9\ud835\uddee\ud835\uddff\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00": 87, "\ud835\uddab\ud835\uddbe\ud835\uddcd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc5b\ud835\udc4e\ud835\udc61\ud835\udc62\ud835\udc5f\ud835\udc4e\ud835\udc59": 87, "\ud835\udc5b\ud835\udc62\ud835\udc5a\ud835\udc4f\ud835\udc52\ud835\udc5f": 87, "5": 87, "6": 87, "\ud835\uddbb\ud835\uddbe": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc60\ud835\udc56\ud835\udc5a\ud835\udc5d\ud835\udc59\ud835\udc52": 87, "\ud835\udc5c\ud835\udc4f\ud835\udc57\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc60": 87, "\ud835\uddc2\ud835\uddc7": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udcb0\u2085\u2080": 87, "\ud835\udde5\ud835\uddf2\ud835\uddf9\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00": 87, "\ud835\udc3c\ud835\udc5b\ud835\udc50": [87, 156, 157, 158, 160, 161, 162, 163], "\ud835\udc62\ud835\udc5b\ud835\udc4e\ud835\udc5f\ud835\udc66": 87, "\ud835\udc5f\ud835\udc52\ud835\udc59\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b\ud835\udc60": 87, "\ud835\udc56\ud835\udc60": 87, "\ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc4e\ud835\udc5f\ud835\udc66": 87, "\ud835\udddc\ud835\uddfb\ud835\uddf3\ud835\uddf2\ud835\uddff\ud835\uddf2\ud835\uddfb\ud835\uddf0\ud835\uddf2": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddff\ud835\ude02\ud835\uddf9\ud835\uddf2\ud835\ude00": 87, "\ud835\uddb3\ud835\uddc1\ud835\uddbe": 87, "\ud835\uddbf\ud835\uddc8\ud835\uddc5\ud835\uddc5\ud835\uddc8\ud835\uddd0\ud835\uddc2\ud835\uddc7\ud835\uddc0": 87, "\ud835\uddc2\ud835\uddc7\ud835\uddbf\ud835\uddbe\ud835\uddcb\ud835\uddbe\ud835\uddc7\ud835\uddbc\ud835\uddbe": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcb\ud835\uddce\ud835\uddc5\ud835\uddbe\ud835\uddcc": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddba\ud835\uddcb\ud835\uddbe": 87, "\ud835\uddbc\ud835\uddc8\ud835\uddc7\ud835\uddcc\ud835\uddc2\ud835\uddbd\ud835\uddbe\ud835\uddcb\ud835\uddbe\ud835\uddbd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcf\ud835\uddba\ud835\uddc5\ud835\uddc2\ud835\uddbd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddce\ud835\uddc7\ud835\uddbd\ud835\uddbe\ud835\uddcb": 87, "\ud835\uddcd\ud835\uddc1\ud835\uddc2\ud835\uddcc": 87, "\ud835\uddcd\ud835\uddc1\ud835\uddbe\ud835\uddc8\ud835\uddcb\ud835\uddd2": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc4e\ud835\udc65\ud835\udc56\ud835\udc5c\ud835\udc5a": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc56\ud835\udc5b\ud835\udc61\ud835\udc52\ud835\udc5f\ud835\udc5d\ud835\udc5f\ud835\udc52\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddba\ud835\uddc7": 87, "\ud835\udc56\ud835\udc5b\ud835\udc53\ud835\udc52\ud835\udc5f\ud835\udc52\ud835\udc5b\ud835\udc50\ud835\udc52": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc5f\ud835\udc62\ud835\udc59\ud835\udc52": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbd\ud835\uddbe\ud835\uddbf\ud835\uddc2\ud835\uddc7\ud835\uddbe\ud835\uddbd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddba\ud835\uddcc": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc9c": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddaf": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc57\ud835\udc62\ud835\udc5b\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [87, 147, 148, 149, 160, 162], "\ud835\udc56\ud835\udc5b\ud835\udc61\ud835\udc5f\ud835\udc5c\ud835\udc51\ud835\udc62\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [87, 146, 149, 150, 151, 153, 156, 157, 158, 160, 161, 162, 163], "\ud835\udc0f\u2083": 87, "\ud835\udc10\u2083": 87, "\ud835\udc51\ud835\udc52\ud835\udc53\ud835\udc56\ud835\udc5b\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": 87, "\ud835\udc9f": 87, "\ud835\udc52\ud835\udc5e\ud835\udc62\ud835\udc4e\ud835\udc59": [87, 154], "\ud835\udc61\ud835\udc52\ud835\udc5f\ud835\udc5a\ud835\udc60": [87, 154], "\ud835\udc60\ud835\udc62\ud835\udc4f\ud835\udc60\ud835\udc61\ud835\udc56\ud835\udc61\ud835\udc62\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [87, 154, 160, 161, 162, 163, 165], "\ud835\udc0f\u2082": [87, 160, 162], "\ud835\udc31\u2082": 87, "\ud835\udc32\u2082": 87, "\ud835\udc10\u2082": [87, 160, 162], "\ud835\udc52\ud835\udc5e\ud835\udc62\ud835\udc4e\ud835\udc59\ud835\udc56\ud835\udc61\ud835\udc66": [87, 155], "\ud835\udc50\ud835\udc5c\ud835\udc5a\ud835\udc5a\ud835\udc62\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc56\ud835\udc61\ud835\udc66": [87, 155], "\ud835\udc31\u2081": [87, 154, 155, 160, 161, 162, 163, 165], "\ud835\udc32\u2081": [87, 154, 155, 160, 161, 162, 163, 165], "\ud835\udc56\ud835\udc5b\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc60\ud835\udc56\ud835\udc60\ud835\udc61\ud835\udc52\ud835\udc5b\ud835\udc50\ud835\udc66": [87, 156, 157, 158, 160, 161, 162, 163], "\ud835\udc77": [87, 156, 157, 158, 160, 161, 162, 163], "\ud835\udc78": [87, 157, 161, 163], "\ud835\udcaf": [87, 157, 158, 161, 163], "\ud835\udc5a\ud835\udc5c\ud835\udc51\ud835\udc62\ud835\udc60": [87, 159, 160, 161, 162, 163], "\ud835\udc5d\ud835\udc5c\ud835\udc5b\ud835\udc52\ud835\udc5b\ud835\udc60": [87, 159, 160, 161, 162, 163], "\ud835\udc0f\u2081": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163], "\ud835\udc10\u2081": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 159, 160, 161, 162, 163], "\ud835\udc5d\ud835\udc5f\ud835\udc5c\ud835\udc5c\ud835\udc53": [87, 160, 161, 162, 163], "\ud835\udc4f\ud835\udc66": [87, 160, 161, 162, 163], "\ud835\udc5f\ud835\udc52\ud835\udc53\ud835\udc62\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [87, 162, 163], "\ud835\udcd7": [87, 160, 161, 162, 163], "\ud835\udc4e\ud835\udc60\ud835\udc60\ud835\udc62\ud835\udc5a\ud835\udc52": [87, 160, 161, 162, 163], "\ud835\udc63\ud835\udc4e\ud835\udc5f\ud835\udc56\ud835\udc4e\ud835\udc4f\ud835\udc59\ud835\udc52": [87, 160, 161, 162, 163, 165], "\ud835\udef7": [87, 160, 161, 162, 163, 165], "\ud835\uddf2\ud835\uddf9\ud835\uddee\ud835\uddef\ud835\uddfc\ud835\uddff\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": 87, "\ud835\ude00\ud835\uddf2\ud835\uddfe\ud835\ude02\ud835\uddf2\ud835\uddfb\ud835\uddf0\ud835\uddf2": 87, "\ud835\udfee": 87, "\ud835\udde7\ud835\uddf5\ud835\uddf2": 87, "\ud835\uddfb\ud835\uddee\ud835\ude01\ud835\ude02\ud835\uddff\ud835\uddee\ud835\uddf9": 87, "\ud835\uddfb\ud835\ude02\ud835\uddfa\ud835\uddef\ud835\uddf2\ud835\uddff\ud835\ude00": 87, "\ud835\udfed": 87, "\ud835\uddfd\ud835\uddf2\ud835\uddee\ud835\uddfb\ud835\uddfc": 87, "\ud835\uddee\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa\ud835\ude00": 87, "\ud835\udddc\ud835\uddfb\ud835\uddf3\ud835\uddfc\ud835\uddff\ud835\uddfa\ud835\uddee\ud835\uddf9": 87, "\ud835\uddf1\ud835\uddf2\ud835\uddf3\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": 87, "\ud835\uddfc\ud835\uddf3": 87, "\ud835\uddfb\ud835\ude02\ud835\uddfa\ud835\uddef\ud835\uddf2\ud835\uddff": 87, "\ud835\uddd4\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udcaf\u2081": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc34\u2081": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc9c\u2081": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udfe2": 87, "\ud835\ude2a\ud835\ude34": [87, 160, 161, 162, 163], "\ud835\ude22": 87, "\ud835\ude2f\ud835\ude22\ud835\ude35\ud835\ude36\ud835\ude33\ud835\ude22\ud835\ude2d": 87, "\ud835\ude2f\ud835\ude36\ud835\ude2e\ud835\ude23\ud835\ude26\ud835\ude33": 87, "\ud835\uddc2\ud835\uddc7\ud835\uddbc\ud835\uddc5\ud835\uddce\ud835\uddbd\ud835\uddbe\ud835\uddbd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc9\ud835\uddc8\ud835\uddcc\ud835\uddcd\ud835\uddce\ud835\uddc5\ud835\uddba\ud835\uddcd\ud835\uddbe\ud835\uddbd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddff\ud835\ude02\ud835\uddf9\ud835\uddf2": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddba\ud835\uddc7\ud835\uddbd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udde3\ud835\uddff\ud835\uddfc\ud835\uddfd\ud835\uddfc\ud835\ude00\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc43\u2081": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc34\u2082": [87, 160, 161, 162, 163], "\ud835\udc9c\u2082": [87, 160, 161, 162, 163], "\ud835\ude10\ud835\ude27": 87, "\ud835\ude2f": 87, "\ud835\ude35\ud835\ude29\ud835\ude26\ud835\ude2f": 87, "\ud835\udc43\u2082": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc27\u2081": 87, "\ud835\udc43\u2083": [87, 146, 149, 154, 156, 157, 159, 160, 161, 162, 163, 165], "\ud835\udfef": 87, "\ud835\udc43\u2084": [87, 160, 161, 162, 163], "\ud835\uddd7\ud835\uddf2\ud835\uddf3\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": 87, "\ud835\udc37\u2081": 87, "\ud835\udc9f\u2081": 87, "\ud835\ude1e\ud835\ude26": 87, "\ud835\ude25\ud835\ude26\ud835\ude27\ud835\ude2a\ud835\ude2f\ud835\ude26": 87, "\ud835\udfe3": 87, "\ud835\ude35\ud835\ude30": [87, 160, 162, 165], "\ud835\ude23\ud835\ude26": 87, "\ud835\ude35\ud835\ude29\ud835\ude26": 87, "\ud835\udfe4": 87, "\ud835\udfe5": 87, "\ud835\ude26\ud835\ude35\ud835\ude24": 87, "\ud835\ude10\ud835\ude2f": 87, "\ud835\ude30\ud835\ude35\ud835\ude29\ud835\ude26\ud835\ude33": 87, "\ud835\ude38\ud835\ude30\ud835\ude33\ud835\ude25\ud835\ude34": 87, "\ud835\ude35\ud835\ude29\ud835\ude2a\ud835\ude34": 87, "\ud835\ude35\ud835\ude26\ud835\ude39\ud835\ude35": 87, "\ud835\ude10": 87, "\ud835\ude36\ud835\ude34\ud835\ude26": 87, "\ud835\ude39": 87, "\ud835\ude3a": 87, "\ud835\ude25\ud835\ude26\ud835\ude2f\ud835\ude30\ud835\ude35\ud835\ude26": 87, "\ud835\ude34\ud835\ude35\ud835\ude22\ud835\ude35\ud835\ude26\ud835\ude2e\ud835\ude26\ud835\ude2f\ud835\ude35": 87, "\ud835\ude35\ud835\ude29\ud835\ude22\ud835\ude35": 87, "\ud835\ude25\ud835\ude26\ud835\ude27\ud835\ude2a\ud835\ude2f\ud835\ude26\ud835\ude25": 87, "\ud835\ude26\ud835\ude32\ud835\ude36\ud835\ude22\ud835\ude2d": 87, "\ud835\udc43\u2085": [87, 160, 161, 162, 163], "\ud835\udc43\u2086": [87, 160, 161, 162, 163], "\ud835\udc43\u2087": [87, 160, 161, 162, 163], "\ud835\udc43\u2088": [87, 160, 162], "\ud835\udc43\u2089": [87, 160, 162], "\ud835\udc43\u2081\u2080": 87, "\ud835\udc43\u2081\u2081": 87, "\ud835\udc43\u2081\u2082": 87, "\ud835\udc43\u2081\u2083": 87, "\ud835\udc43\u2081\u2084": 87, "\ud835\udc43\u2081\u2085": 87, "\ud835\udc43\u2081\u2086": 87, "\ud835\udc43\u2081\u2087": 87, "\ud835\udc43\u2081\u2088": 87, "\ud835\uddf6\ud835\ude00": 87, "\ud835\uddee": 87, "\ud835\udc43\u2081\u2089": 87, "\ud835\udc43\u2082\u2080": 87, "\ud835\udff0": 87, "\ud835\udc43\u2082\u2081": 87, "\ud835\udc43\u2082\u2082": 87, "\ud835\udc43\u2082\u2083": 87, "\ud835\udc43\u2082\u2084": 87, "\ud835\udc43\u2082\u2085": 87, "\ud835\udc43\u2082\u2086": 87, "\ud835\udc34\u2083": 87, "\ud835\udc9c\u2083": 87, "\ud835\ude2f\ud835\ude30\ud835\ude35": 87, "\ud835\ude34\ud835\ude36\ud835\ude24\ud835\ude24\ud835\ude26\ud835\ude34\ud835\ude34\ud835\ude30\ud835\ude33": 87, "\ud835\ude30\ud835\ude27": 87, "\ud835\ude22\ud835\ude2f\ud835\ude3a": 87, "\ud835\ude2a": 87, "\ud835\ude26": 87, "\ud835\ude38\ud835\ude26": 87, "\ud835\ude29\ud835\ude22\ud835\ude37\ud835\ude26": 87, "\ud835\ude27\ud835\ude30\ud835\ude33": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163], "\ud835\ude26\ud835\ude37\ud835\ude26\ud835\ude33\ud835\ude3a": 87, "\ud835\udc43\u2082\u2087": 87, "\ud835\udc27\u2082": 87, "\ud835\uddfb\ud835\uddfc\ud835\ude01": 87, "\ud835\uddf2\ud835\uddfe\ud835\ude02\ud835\uddee\ud835\uddf9": 87, "\ud835\ude01\ud835\uddfc": 87, "\ud835\udfec": 87, "\ud835\udc43\u2082\u2088": 87, "\ud835\udc43\u2082\u2089": 87, "\ud835\udff2": 87, "\ud835\udc43\u2083\u2080": 87, "\ud835\udc34\u2084": 87, "\ud835\udc9c\u2084": 87, "\ud835\ude0b\ud835\ude2a\ud835\ude27\ud835\ude27\ud835\ude26\ud835\ude33\ud835\ude26\ud835\ude2f\ud835\ude35": 87, "\ud835\ude2f\ud835\ude36\ud835\ude2e\ud835\ude23\ud835\ude26\ud835\ude33\ud835\ude34": 87, "\ud835\ude2e\ud835\ude36\ud835\ude34\ud835\ude35": 87, "\ud835\ude25\ud835\ude2a\ud835\ude27\ud835\ude27\ud835\ude26\ud835\ude33\ud835\ude26\ud835\ude2f\ud835\ude35": 87, "\ud835\ude34\ud835\ude36\ud835\ude24\ud835\ude24\ud835\ude26\ud835\ude34\ud835\ude34\ud835\ude30\ud835\ude33\ud835\ude34": 87, "\ud835\ude2a\ud835\ude27": 87, "\ud835\ude2e": 87, "\ud835\ude22\ud835\ude33\ud835\ude26": 87, "\ud835\ude22\ud835\ude2f\ud835\ude25": 87, "\ud835\ude0c\ud835\ude32\ud835\ude36\ud835\ude2a\ud835\ude37\ud835\ude22\ud835\ude2d\ud835\ude26\ud835\ude2f\ud835\ude35\ud835\ude2d\ud835\ude3a": 87, "\ud835\udc43\u2083\u2081": 87, "\ud835\udc27\u2083": 87, "\ud835\udc26\u2081": 87, "\ud835\udc43\u2083\u2082": 87, "\ud835\udc27\u2084": 87, "\ud835\udc26\u2082": 87, "\ud835\udc43\u2083\u2083": 87, "\ud835\udc43\u2083\u2084": 87, "\ud835\udc43\u2083\u2085": 87, "\ud835\udc43\u2083\u2086": 87, "\ud835\udc43\u2083\u2087": 87, "\ud835\udc43\u2083\u2088": 87, "\ud835\udc43\u2083\u2089": 87, "\ud835\udc43\u2084\u2080": 87, "\ud835\udc43\u2084\u2081": 87, "\ud835\udc43\u2084\u2082": 87, "\ud835\udc43\u2084\u2083": 87, "\ud835\udc43\u2084\u2084": 87, "\ud835\udc43\u2084\u2085": 87, "\ud835\udc43\u2084\u2086": 87, "\ud835\udc43\u2084\u2087": 87, "\ud835\udc43\u2084\u2088": 87, "\ud835\udc43\u2084\u2089": 87, "\ud835\udc43\u2085\u2080": 87, "\ud835\udc43\u2085\u2081": 87, "\ud835\udc43\u2085\u2082": 87, "\ud835\udde3\ud835\uddff\ud835\uddfc\ud835\uddfc\ud835\uddf3": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddef\ud835\ude06": 87, "\ud835\uddf0\ud835\uddfc\ud835\uddfb\ud835\ude01\ud835\uddff\ud835\uddee\ud835\uddf1\ud835\uddf6\ud835\uddf0\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": 87, "\ud835\udddb\ud835\ude06\ud835\uddfd\ud835\uddfc\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\ude00\ud835\uddf6\ud835\ude00": [87, 160, 161, 162, 163], "\ud835\udc3b\u2081": [87, 160, 161, 162, 163], "\ud835\udc43\u2086\u2086": 87, "\u210b\u2081": [87, 160, 161, 162, 163], "\ud835\udff4": 87, "\ud835\udc43\u2086\u2087": 87, "\ud835\uddd7\ud835\uddf6\ud835\uddff\ud835\uddf2\ud835\uddf0\ud835\ude01": 87, "\ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddfc\ud835\uddf3": 87, "\ud835\udc43\u2086\u2088": 87, "\ud835\udc43\u2086\u2089": 87, "\ud835\udc43\u2087\u2080": 87, "\ud835\udc43\u2087\u2081": 87, "\ud835\udc43\u2087\u2082": 87, "\ud835\udc43\u2087\u2083": 87, "\ud835\udc43\u2087\u2084": 87, "\ud835\udff1": 87, "\ud835\ude01\ud835\uddf5\ud835\uddf2": 87, "\ud835\uddfd\ud835\uddff\ud835\uddf6\ud835\uddfb\ud835\uddf0\ud835\uddf6\ud835\uddfd\ud835\uddf9\ud835\uddf2": 87, "\ud835\uddfa\ud835\uddee\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\uddfa\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddf0\ud835\uddee\ud835\uddf9": 87, "\ud835\uddf6\ud835\uddfb\ud835\uddf1\ud835\ude02\ud835\uddf0\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb": 87, "\ud835\ude00\ud835\uddf0\ud835\uddf5\ud835\uddf2\ud835\uddfa\ud835\uddee": 87, "\ud835\udc34\u2086": 87, "principl": 87, "induct": 87, "\ud835\udc9c\u2086": 87, "\ud835\ude13\ud835\ude26\ud835\ude35": 87, "\ud835\ude17": 87, "\ud835\ude31\ud835\ude33\ud835\ude30\ud835\ude31\ud835\ude26\ud835\ude33\ud835\ude35\ud835\ude3a": 87, "\ud835\ude31\ud835\ude26\ud835\ude33\ud835\ude35\ud835\ude22\ud835\ude2a\ud835\ude2f\ud835\ude2a\ud835\ude2f\ud835\ude28": 87, "\ud835\ude1a\ud835\ude36\ud835\ude31\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude26": 87, "\ud835\ude16": 87, "\ud835\ude35\ud835\ude33\ud835\ude36\ud835\ude26": [87, 160, 161, 162, 163], "\ud835\ude34\ud835\ude36\ud835\ude31\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude26": 87, "\ud835\ude38\ud835\ude29\ud835\ude26\ud835\ude2f\ud835\ude26\ud835\ude37\ud835\ude26\ud835\ude33": 87, "\ud835\ude22\ud835\ude2d\ud835\ude34\ud835\ude30": 87, "\ud835\ude1b\ud835\ude29\ud835\ude26\ud835\ude2f": 87, "\ud835\udc43\u2087\u2085": 87, "\ud835\udc27\u2085": 87, "\ud835\udc0f\u2084": 87, "\ud835\udc26\u2083": 87, "\ud835\ude00\ud835\ude06\ud835\ude00\ud835\ude01\ud835\uddf2\ud835\uddfa": 87, "\ud835\uddfb": 87, "\ud835\udde5\ud835\uddf2\ud835\uddf0\ud835\ude02\ud835\uddff\ud835\ude00\ud835\uddf6\ud835\ude03\ud835\uddf2": 87, "\ud835\uddf1\ud835\uddf2\ud835\uddf3\ud835\uddf6\ud835\uddfb\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00": 87, "\ud835\udcb0\u2085\u2084": 87, "\ud835\uddc2\ud835\uddcc": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbb\ud835\uddd2": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddee\ud835\ude05\ud835\uddf6\ud835\uddfc\ud835\uddfa": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165], "\ud835\uddba": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6\ud835\uddce\ud835\uddc5\ud835\uddba": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165], "\ud835\uddcc\ud835\uddcd\ud835\uddba\ud835\uddcd\ud835\uddbe\ud835\uddc6\ud835\uddbe\ud835\uddc7\ud835\uddcd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165], "\ud835\uddc2\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddcb\ud835\uddc9\ud835\uddcb\ud835\uddbe\ud835\uddcd\ud835\uddbe\ud835\uddbd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165], "\ud835\uddbf\ud835\uddcb\ud835\uddc8\ud835\uddc6": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcd\ud835\uddc1\ud835\uddba\ud835\uddcd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddba\ud835\uddd1\ud835\uddc2\ud835\uddc8\ud835\uddc6": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddb3\ud835\uddc1\ud835\uddbe\ud835\uddcb\ud835\uddbe\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddbe": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcd\ud835\uddc1\ud835\uddbe": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcb\ud835\uddce\ud835\uddc5\ud835\uddbe": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc2\ud835\uddcd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbf\ud835\uddc8\ud835\uddc5\ud835\uddc5\ud835\uddc8\ud835\uddd0\ud835\uddcc": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddfd": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddf1\ud835\uddf2\ud835\uddf3": 87, "\ud835\uddc2\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddcb\ud835\uddc9\ud835\uddcb\ud835\uddbe\ud835\uddcd\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc8\ud835\uddbf": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbd\ud835\uddbe\ud835\uddbf\ud835\uddc2\ud835\uddc7\ud835\uddc2\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6": [87, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162], "\ud835\uddb3\ud835\uddc1\ud835\uddc2\ud835\uddcc": [87, 160, 161, 162, 163], "\ud835\uddc1\ud835\uddd2\ud835\uddc9\ud835\uddc8\ud835\uddcd\ud835\uddc1\ud835\uddbe\ud835\uddcc\ud835\uddc2\ud835\uddcc": [87, 160, 161, 162, 163], "\ud835\uddbe\ud835\uddc5\ud835\uddba\ud835\uddbb\ud835\uddc8\ud835\uddcb\ud835\uddba\ud835\uddcd\ud835\uddbe\ud835\uddbd": [87, 160, 161, 162, 163], "\ud835\udc43\u2086\u2085": 87, "\ud835\uddf5\ud835\ude06\ud835\uddfd": [87, 160, 161, 162, 163], "stabil": [87, 136, 156, 157, 158, 160, 161, 162, 163, 165], "u48": 87, "unari": 87, "p3": [87, 146, 149, 154, 156, 157, 159, 160, 161, 162, 163, 165], "q3": 87, "p2": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "x2": 87, "y2": 87, "q2": [87, 160, 162], "x1": [87, 154, 155, 160, 161, 162, 163, 165], "y1": [87, 154, 155, 160, 161, 162, 163, 165], "p1": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "q1": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 159, 160, 161, 162, 163], "t1": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "a1": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "a2": [87, 160, 161, 162, 163], "n1": 87, "p4": [87, 160, 161, 162, 163], "d1": 87, "etc": 87, "p5": [87, 160, 161, 162, 163], "p6": [87, 160, 161, 162, 163], "p7": [87, 160, 161, 162, 163], "p9": [87, 160, 162], "p10": 87, "p11": 87, "p12": 87, "p13": 87, "p14": 87, "p15": 87, "p16": 87, "p17": 87, "p18": 87, "p19": 87, "p20": 87, "p21": 87, "p22": 87, "p23": 87, "p24": 87, "p25": 87, "p26": 87, "a3": 87, "p27": 87, "n2": 87, "p28": 87, "p29": 87, "p30": 87, "a4": 87, "differ": 87, "m": 87, "p31": 87, "n3": 87, "m1": 87, "p32": 87, "n4": 87, "m2": 87, "p33": 87, "p34": 87, "p35": 87, "p36": 87, "p37": 87, "p38": 87, "p39": 87, "p40": 87, "p41": 87, "p42": 87, "p43": 87, "p44": 87, "p45": 87, "p46": 87, "p47": 87, "p48": 87, "p49": 87, "p50": 87, "p51": 87, "p52": 87, "h1": [87, 160, 161, 162, 163], "p66": 87, "p67": 87, "direct": 87, "p68": 87, "p69": 87, "p70": 87, "p71": 87, "p72": 87, "p73": 87, "p74": 87, "schema": 87, "a6": 87, "pertain": 87, "suppos": 87, "also": 87, "Then": 87, "p75": 87, "n5": 87, "m3": 87, "recurs": 87, "u52": 87, "therefor": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "qed": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "prop": [87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "def": 87, "p65": 87, "hyp": [87, 160, 161, 162, 163], "kei": [88, 89], "section": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "model": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "target": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "instanci": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "effect": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "expos": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "automat": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "access": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "universe_of_discours": [92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 136, 137], "echo": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "none": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139], "compose_paragraph_proof": [92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 137], "method": [92, 94, 96, 98, 100, 102, 110, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "overridden": [92, 94, 96, 98, 100, 102, 110, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133], "return": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "compos": [92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 137], "bool": [92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 136, 137], "infer_formula": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138], "p_implies_q": [92, 93, 94, 98, 99, 125, 126, 143, 146, 159, 160, 161, 162, 163], "current": [92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 110, 111, 119, 121, 123, 126, 127, 128, 129, 131, 132, 133, 137], "verify_arg": [92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 125, 127, 129, 131, 133, 137], "verifi": [92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 137], "compat": [92, 94, 96, 98, 100, 102, 110, 112, 114, 116, 118, 120, 122], "otherwis": [92, 94, 96, 98, 100, 102, 110, 112, 114, 116, 118, 120, 122], "theoryelaborationsequ": [93, 95, 97, 99, 101, 103, 104, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 126, 128, 130, 132, 134, 136, 138], "appli": [93, 95, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "mandatori": [93, 95, 97, 99, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 119, 121, 123, 126, 128, 132], "implic": [93, 126, 128, 132, 160, 161, 162, 163, 165], "infer_stat": [93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 126, 128, 130, 132, 134, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "nameset": [93, 95, 97, 99, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 126, 128, 130, 132, 134, 136, 138], "ref": [93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 126, 128, 130, 132, 134, 136, 138], "paragraph_head": [93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 126, 128, 130, 132, 134, 136, 138], "subtitl": [93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 126, 128, 130, 132, 134, 136, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "biconditional_elimination_1": [94, 95, 144], "acronym": [94, 96, 98, 100, 102, 110, 136], "be1": 94, "p_iff_q": [94, 95, 96, 97, 99, 144, 145], "arg": [95, 97, 99, 101, 103, 115, 117, 125, 130, 134, 138], "biconditional_elimination_2": [96, 97, 145], "ber": 96, "biconditional_introduct": [98, 99, 146], "bi": [98, 146], "q_implies_p": [98, 99, 146], "conjunction_elimination_1": [100, 101, 147], "cel": 100, "p_land_q": [100, 102, 110], "kwarg": [100, 137], "p_and_q": [101, 103, 147, 148], "conjunction_elimination_2": [102, 103, 148], "cer": [102, 110], "conjunction_introduct": [104, 105, 149, 160, 162], "base": [104, 106, 108, 112, 136], "result": [104, 105, 106, 107, 108, 109, 112, 113, 118, 120, 122, 127, 129, 131, 133, 137], "correct": [104, 106, 108, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "formulastat": [104, 114, 116], "disjunction_introduction_1": [106, 107, 150], "disjunction_introduction_2": [108, 109, 151], "double_negation_elimin": [110, 111, 152], "not_not_p": [110, 111, 152], "equal_terms_substitut": [114, 115, 154], "x_equal_i": [114, 115, 116, 117, 154, 155], "replac": 114, "q_equal_r": 115, "equality_commut": [116, 117, 155], "inconsistency_introduction_1": [118, 119, 156, 160, 162], "not_p": [118, 119, 121, 123, 128, 156, 160, 162], "inconsistent_theori": [118, 119, 120, 121, 122, 123, 156, 157, 158, 160, 161, 162, 163], "condit": [119, 121, 123], "inconsistency_introduction_2": [120, 121, 157, 161, 163], "x_eq_i": [120, 121, 157, 161, 163], "x_neq_i": [120, 121, 157, 161, 163], "inconsistency_introduction_3": [122, 123, 158], "p_neq_p": [122, 123, 158], "modus_ponen": [125, 126, 159, 160, 161, 162, 163], "proof_by_contradiction_1": [127, 128, 160], "not_p_hypothesi": [127, 128, 160], "inc_hypothesi": [127, 128, 129, 130, 131, 132, 133, 134, 160, 161, 162, 163], "tn": [127, 129, 131, 133], "hypothet": 128, "proof_by_contradiction_2": [129, 130, 161], "x_neq_y_hypothesi": [129, 130, 161], "systemat": 129, "verif": [129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "doubt": 129, "still": 129, "wrong": 129, "proof_by_refutation_1": [131, 132, 162], "p_hypothesi": [131, 132, 162], "proof_by_refutation_2": [133, 134, 163], "p_eq_q_hypothesi": 133, "x_eq_y_hypothesi": [134, 163], "dashed_nam": 136, "cross_reference_axiom": 136, "axiomdeclar": 136, "cross_reference_definit": 136, "definitiondeclar": 136, "cross_reference_formula": 136, "cross_reference_inference_rul": 136, "ir": 136, "cross_reference_rel": 136, "cross_reference_simple_objct": 136, "objct": 136, "simpleobjct": 136, "cross_reference_symbolic_objct": 136, "theoreticalobject": 136, "cross_reference_theori": 136, "declare_axiom": [136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "natural_languag": [136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "abridged_nam": 136, "explicit_nam": 136, "declare_definit": 136, "auto_index": [136, 161], "declare_formula": 136, "lock_variable_scop": 136, "shortcut": 136, "self": 136, "state": 136, "becaus": [136, 156, 157, 158, 163], "declare_free_vari": 136, "freevari": 136, "declare_theori": 136, "extended_theori": 136, "extended_theory_limit": 136, "is_theory_foundation_system": 136, "f": [136, 154, 160, 161, 162, 163, 165], "elaborate_formula": 136, "get_symbol_max_index": 136, "highest": 136, "int": 136, "unabridg": [136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "inference_rul": [136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "index_symbol": 136, "given": [136, 150, 151], "unindex": 136, "uniqu": 136, "integ": 136, "identifi": 136, "styledtext": 136, "abridg": 136, "simple_objct": 136, "relationdict": 136, "directli": 136, "avail": 136, "take_not": 136, "take": 136, "comment": 136, "remark": 136, "v": [136, 160, 161, 162, 163, 165], "expect": 136, "yield": 136, "lock": 136, "scope": 136, "exampl": [136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "extens": 136, "expressli": 136, "instead": 136, "variable_substitut": [137, 138, 160, 161, 162, 163, 165], "overrid": 137, "comput": 137, "those": 137, "compli": 137, "simplest": 139, "wai": 139, "u1": [139, 143], "pu": [139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "insert": 139, "pip": 141, "download": 141, "create_univers": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "basic": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "sake": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "o1": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "o2": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165], "o3": [143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 159, 160, 162, 165], "r1": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159], "signal_proposit": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 162, 165], "r2": [143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 159], "dummi": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "demonstr": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "necessari": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 165], "theory_axiom": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163], "include_axiom": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "axiom_interpret": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "proposition_of_interest": [143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "interest": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "html": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udcb0\u2082": 143, "\ud835\udc62\ud835\udc5b\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc60\ud835\udc52": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc5c\ud835\udc53": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc50\ud835\udc5c\ud835\udc62\ud835\udc5f\ud835\udc60\ud835\udc52": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc61\u210e\ud835\udc52\ud835\udc5c\ud835\udc5f\ud835\udc66": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc52\ud835\udc59\ud835\udc4e\ud835\udc4f\ud835\udc5c\ud835\udc5f\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc60\ud835\udc52\ud835\udc5e\ud835\udc62\ud835\udc52\ud835\udc5b\ud835\udc50\ud835\udc52": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\ude0b\ud835\ude36\ud835\ude2e\ud835\ude2e\ud835\ude3a": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\ude22\ud835\ude39\ud835\ude2a\ud835\ude30\ud835\ude2e": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\ude25\ud835\ude26\ud835\ude2e\ud835\ude30\ud835\ude2f\ud835\ude34\ud835\ude35\ud835\ude33\ud835\ude22\ud835\ude35\ud835\ude2a\ud835\ude30\ud835\ude2f": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163], "\ud835\ude31\ud835\ude36\ud835\ude33\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude26\ud835\ude34": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163], "\ud835\udc5f\u2081": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159], "\ud835\udc5c\u2081": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc5c\u2082": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165], "\ud835\udc5f\u2082": [143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 159], "\ud835\udc5c\u2083": [143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 159, 160, 162], "\ud835\uddea\ud835\uddee\ud835\uddff\ud835\uddfb\ud835\uddf6\ud835\uddfb\ud835\uddf4": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\u2081": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udda1\ud835\uddd2": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbd\ud835\uddbe\ud835\uddcc\ud835\uddc2\ud835\uddc0\ud835\uddc7": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc9\ud835\uddce\ud835\uddc7\ud835\uddbc\ud835\uddcd\ud835\uddc2\ud835\uddc5\ud835\uddc2\ud835\uddc8\ud835\uddce\ud835\uddcc": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddba\ud835\uddcc\ud835\uddcc\ud835\uddce\ud835\uddcb\ud835\uddbe\ud835\uddcc": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcc\ud835\uddd2\ud835\uddc7\ud835\uddcd\ud835\uddba\ud835\uddbc\ud835\uddcd\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddc5": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbc\ud835\uddc8\ud835\uddcb\ud835\uddcb\ud835\uddbe\ud835\uddbc\ud835\uddcd\ud835\uddc7\ud835\uddbe\ud835\uddcc\ud835\uddcc": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcd\ud835\uddc1\ud835\uddbe\ud835\uddc8\ud835\uddcb\ud835\uddc2\ud835\uddbe\ud835\uddcc": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbb\ud835\uddce\ud835\uddcd": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbd\ud835\uddc8\ud835\uddbe\ud835\uddcc": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc7\ud835\uddc8\ud835\uddcd": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc9\ud835\uddbe\ud835\uddcb\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddba\ud835\uddc7\ud835\uddd2": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcc\ud835\uddbe\ud835\uddc6\ud835\uddba\ud835\uddc7\ud835\uddcd\ud835\uddc2\ud835\uddbc": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcf\ud835\uddbe\ud835\uddcb\ud835\uddc2\ud835\uddbf\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddce\ud835\uddcc\ud835\uddba\ud835\uddc0\ud835\uddbe": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc2\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddcb\ud835\uddc9\ud835\uddcb\ud835\uddbe\ud835\uddcd": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc7\ud835\uddba\ud835\uddcd\ud835\uddce\ud835\uddcb\ud835\uddba\ud835\uddc5": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbc\ud835\uddc8\ud835\uddc7\ud835\uddcd\ud835\uddbe\ud835\uddc7\ud835\uddcd": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc2": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbe": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbc\ud835\uddcb\ud835\uddc2\ud835\uddcd\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddc5\ud835\uddc5\ud835\uddd2": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbd\ud835\uddbe\ud835\uddc9\ud835\uddbe\ud835\uddc7\ud835\uddbd\ud835\uddbe\ud835\uddc7\ud835\uddcd": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc8\ud835\uddc7": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcd\ud835\uddcb\ud835\uddba\ud835\uddc7\ud835\uddcc\ud835\uddc5\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc9\ud835\uddbe\ud835\uddcb\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6\ud835\uddbe\ud835\uddbd": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddba\ud835\uddce\ud835\uddcd\ud835\uddc1\ud835\uddc8\ud835\uddcb": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc8\ud835\uddcb": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddc5\ud835\uddba\ud835\uddc7\ud835\uddc0\ud835\uddce\ud835\uddba\ud835\uddc0\ud835\uddbe": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddcd\ud835\uddc8": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\uddbf\ud835\uddc8\ud835\uddcb\ud835\uddc6\ud835\uddce\ud835\uddc5\ud835\uddba\ud835\uddbe": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "\ud835\udc4e\ud835\udc4f\ud835\udc60\ud835\udc5c\ud835\udc5f\ud835\udc5d\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": 143, "\ud835\uddba\ud835\uddc9\ud835\uddc9\ud835\uddc5\ud835\uddc2\ud835\uddbc\ud835\uddba\ud835\uddcd\ud835\uddc2\ud835\uddc8\ud835\uddc7": 143, "warn": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "warning1": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "By": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "assur": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "semant": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "critic": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "depend": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "translat": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "author": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "Will": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "phi1": [144, 145, 146, 147, 148, 149, 150, 151], "\ud835\udcb0\u2084": 144, "\ud835\udc4f\ud835\udc56\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b\ud835\udc4e\ud835\udc59": [144, 145, 146], "\ud835\udc52\ud835\udc59\ud835\udc56\ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [144, 145, 147, 148, 152], "u3": 144, "\ud835\udcb0\u2086": 145, "u5": 145, "phi2": [146, 149], "biconditional_infer": 146, "\ud835\udcb0\u2088": 146, "u7": 146, "\ud835\udcb0\u2081\u2080": 147, "u9": 147, "\ud835\udcb0\u2081\u2082": 148, "u11": 148, "\ud835\udcb0\u2081\u2084": 149, "u13": 149, "\ud835\udcb0\u2081\u2086": 150, "\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc57\ud835\udc62\ud835\udc5b\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [150, 151], "\ud835\uddc0\ud835\uddc2\ud835\uddcf\ud835\uddbe\ud835\uddc7": [150, 151], "u15": 150, "\ud835\udcb0\u2081\u2088": 151, "u17": 151, "\ud835\udcb0\u2082\u2080": 152, "\ud835\udc51\ud835\udc5c\ud835\udc62\ud835\udc4f\ud835\udc59\ud835\udc52": [152, 153], "\ud835\udc5b\ud835\udc52\ud835\udc54\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [152, 153], "u19": 152, "\ud835\udcb0\u2082\u2082": 153, "u21": 153, "proposition_x_equal_i": 154, "dummy_proposit": 154, "et": 154, "\ud835\udcb0\u2082\u2086": 154, "u25": 154, "\ud835\udcb0\u2082\u2084": 155, "u23": 155, "t2": [156, 157, 158, 163], "could": [156, 157, 158, 163], "own": [156, 157, 158, 163], "\ud835\udcb0\u2083\u2080": 156, "\ud835\udce3": [156, 160, 162], "\ud835\udcaf\u2082": [156, 157, 158, 163], "\ud835\uddd0\ud835\uddc1\ud835\uddc2\ud835\uddbc\ud835\uddc1": [156, 158, 160, 162], "u29": 156, "p_eq_q": 157, "eq": [157, 161, 163], "p_neq_q": 157, "\ud835\udcb0\u2083\u2082": 157, "u31": 157, "\ud835\udcb0\u2083\u2084": 158, "\ud835\udda8\ud835\uddc7\ud835\uddbc": 158, "u33": 158, "\ud835\udcb0\u2083\u2086": 159, "u35": 159, "ground": [160, 162, 165], "configur": [160, 161], "echo_proof": [160, 161], "z": [160, 162], "pose_hypothesi": [160, 161, 162, 163], "hypothesis_formula": [160, 161, 162, 163], "child_theori": [160, 161, 162, 163], "h_inconsist": [160, 161, 162, 163], "child_stat": [160, 161, 162, 163], "\ud835\udcb0\u2084\u2080": 160, "\ud835\ude26\ud835\ude34\ud835\ude35\ud835\ude22\ud835\ude23\ud835\ude2d\ud835\ude2a\ud835\ude34\ud835\ude29": [160, 162, 165], "\ud835\ude34\ud835\ude30\ud835\ude2e\ud835\ude26": [160, 162, 165], "\ud835\ude28\ud835\ude33\ud835\ude30\ud835\ude36\ud835\ude2f\ud835\ude25": [160, 162, 165], "\ud835\ude31\ud835\ude33\ud835\ude30\ud835\ude31\ud835\ude30\ud835\ude34\ud835\ude2a\ud835\ude35\ud835\ude2a\ud835\ude30\ud835\ude2f\ud835\ude34": [160, 162, 165], "\ud835\udc53\u2081": [160, 162, 163, 165], "\ud835\udc33\u2081": [160, 162], "\ud835\ude09\ud835\ude3a": [160, 161, 162, 163], "\ud835\ude29\ud835\ude3a\ud835\ude31\ud835\ude30\ud835\ude35\ud835\ude29\ud835\ude26\ud835\ude34\ud835\ude2a\ud835\ude34": [160, 161, 162, 163], "\ud835\ude22\ud835\ude34\ud835\ude34\ud835\ude36\ud835\ude2e\ud835\ude26": [160, 161, 162, 163], "\u2082": [160, 161, 162, 163], "\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc61\ud835\udc5f\ud835\udc4e\ud835\udc51\ud835\udc56\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b": [160, 161], "u39": 160, "f1": [160, 162, 163, 165], "z1": [160, 162], "warning2": [160, 161, 162, 163], "f_o1_eq_f_02": [161, 163], "uncov": 161, "pass": 161, "\ud835\udcb0\u2084\u2082": 161, "\ud835\udc53": 161, "u41": 161, "posit": [162, 163], "\ud835\udcb0\u2084\u2084": 162, "u43": 162, "\ud835\udcb0\u2084\u2086": 163, "u45": 163, "\ud835\udcb0\u2085\u2086": 165, "u55": 165, "live": 166}, "objects": {"punctilious": [[92, 0, 1, "", "AbsorptionDeclaration"], [93, 0, 1, "", "AbsorptionInclusion"], [94, 0, 1, "", "BiconditionalElimination1Declaration"], [95, 0, 1, "", "BiconditionalElimination1Inclusion"], [96, 0, 1, "", "BiconditionalElimination2Declaration"], [97, 0, 1, "", "BiconditionalElimination2Inclusion"], [98, 0, 1, "", "BiconditionalIntroductionDeclaration"], [99, 0, 1, "", "BiconditionalIntroductionInclusion"], [100, 0, 1, "", "ConjunctionElimination1Declaration"], [101, 0, 1, "", "ConjunctionElimination1Inclusion"], [102, 0, 1, "", "ConjunctionElimination2Declaration"], [103, 0, 1, "", "ConjunctionElimination2Inclusion"], [104, 0, 1, "", "ConjunctionIntroductionDeclaration"], [105, 0, 1, "", "ConjunctionIntroductionInclusion"], [106, 0, 1, "", "DisjunctionIntroduction1Declaration"], [107, 0, 1, "", "DisjunctionIntroduction1Inclusion"], [108, 0, 1, "", "DisjunctionIntroduction2Declaration"], [109, 0, 1, "", "DisjunctionIntroduction2Inclusion"], [110, 0, 1, "", "DoubleNegationEliminationDeclaration"], [111, 0, 1, "", "DoubleNegationEliminationInclusion"], [112, 0, 1, "", "DoubleNegationIntroductionDeclaration"], [113, 0, 1, "", "DoubleNegationIntroductionInclusion"], [114, 0, 1, "", "EqualTermsSubstitutionDeclaration"], [115, 0, 1, "", "EqualTermsSubstitutionInclusion"], [116, 0, 1, "", "EqualityCommutativityDeclaration"], [117, 0, 1, "", "EqualityCommutativityInclusion"], [118, 0, 1, "", "InconsistencyIntroduction1Declaration"], [119, 0, 1, "", "InconsistencyIntroduction1Inclusion"], [120, 0, 1, "", "InconsistencyIntroduction2Declaration"], [121, 0, 1, "", "InconsistencyIntroduction2Inclusion"], [122, 0, 1, "", "InconsistencyIntroduction3Declaration"], [123, 0, 1, "", "InconsistencyIntroduction3Inclusion"], [124, 0, 1, "", "InferenceRuleDeclarationDict"], [125, 0, 1, "", "ModusPonensDeclaration"], [126, 0, 1, "", "ModusPonensInclusion"], [127, 0, 1, "", "ProofByContradiction1Declaration"], [128, 0, 1, "", "ProofByContradiction1Inclusion"], [129, 0, 1, "", "ProofByContradiction2Declaration"], [130, 0, 1, "", "ProofByContradiction2Inclusion"], [131, 0, 1, "", "ProofByRefutation1Declaration"], [132, 0, 1, "", "ProofByRefutation1Inclusion"], [133, 0, 1, "", "ProofByRefutation2Declaration"], [134, 0, 1, "", "ProofByRefutation2Inclusion"], [136, 0, 1, "", "UniverseOfDiscourse"], [137, 0, 1, "", "VariableSubstitutionDeclaration"], [138, 0, 1, "", "VariableSubstitutionInclusion"], [139, 3, 1, "", "create_universe_of_discourse"]], "punctilious.AbsorptionDeclaration": [[92, 1, 1, "", "compose_paragraph_proof"], [92, 1, 1, "", "infer_formula"], [92, 1, 1, "", "verify_args"]], "punctilious.AbsorptionInclusion": [[93, 1, 1, "", "infer_formula"], [93, 1, 1, "", "infer_statement"]], "punctilious.BiconditionalElimination1Declaration": [[94, 1, 1, "", "compose_paragraph_proof"], [94, 1, 1, "", "infer_formula"], [94, 1, 1, "", "verify_args"]], "punctilious.BiconditionalElimination1Inclusion": [[95, 1, 1, "", "infer_formula"], [95, 1, 1, "", "infer_statement"]], "punctilious.BiconditionalElimination2Declaration": [[96, 1, 1, "", "compose_paragraph_proof"], [96, 1, 1, "", "infer_formula"], [96, 1, 1, "", "verify_args"]], "punctilious.BiconditionalElimination2Inclusion": [[97, 1, 1, "", "infer_formula"], [97, 1, 1, "", "infer_statement"]], "punctilious.BiconditionalIntroductionDeclaration": [[98, 1, 1, "", "compose_paragraph_proof"], [98, 1, 1, "", "infer_formula"], [98, 1, 1, "", "verify_args"]], "punctilious.BiconditionalIntroductionInclusion": [[99, 1, 1, "", "infer_formula"], [99, 1, 1, "", "infer_statement"]], "punctilious.ConjunctionElimination1Declaration": [[100, 1, 1, "", "compose_paragraph_proof"], [100, 1, 1, "", "infer_formula"], [100, 1, 1, "", "verify_args"]], "punctilious.ConjunctionElimination1Inclusion": [[101, 1, 1, "", "infer_formula"], [101, 1, 1, "", "infer_statement"]], "punctilious.ConjunctionElimination2Declaration": [[102, 1, 1, "", "compose_paragraph_proof"], [102, 1, 1, "", "infer_formula"], [102, 1, 1, "", "verify_args"]], "punctilious.ConjunctionElimination2Inclusion": [[103, 1, 1, "", "infer_formula"], [103, 1, 1, "", "infer_statement"]], "punctilious.ConjunctionIntroductionDeclaration": [[104, 1, 1, "", "compose_paragraph_proof"], [104, 1, 1, "", "infer_formula"], [104, 1, 1, "", "verify_args"]], "punctilious.ConjunctionIntroductionInclusion": [[105, 1, 1, "", "infer_formula"], [105, 1, 1, "", "infer_statement"]], "punctilious.DisjunctionIntroduction1Declaration": [[106, 1, 1, "", "compose_paragraph_proof"], [106, 1, 1, "", "infer_formula"], [106, 1, 1, "", "verify_args"]], "punctilious.DisjunctionIntroduction1Inclusion": [[107, 1, 1, "", "infer_formula"], [107, 1, 1, "", "infer_statement"]], "punctilious.DisjunctionIntroduction2Declaration": [[108, 1, 1, "", "compose_paragraph_proof"], [108, 1, 1, "", "infer_formula"], [108, 1, 1, "", "verify_args"]], "punctilious.DisjunctionIntroduction2Inclusion": [[109, 1, 1, "", "infer_formula"], [109, 1, 1, "", "infer_statement"]], "punctilious.DoubleNegationEliminationDeclaration": [[110, 1, 1, "", "compose_paragraph_proof"], [110, 1, 1, "", "infer_formula"], [110, 1, 1, "", "verify_args"]], "punctilious.DoubleNegationEliminationInclusion": [[111, 1, 1, "", "infer_formula"], [111, 1, 1, "", "infer_statement"]], "punctilious.DoubleNegationIntroductionDeclaration": [[112, 1, 1, "", "compose_paragraph_proof"], [112, 1, 1, "", "infer_formula"], [112, 1, 1, "", "verify_args"]], "punctilious.DoubleNegationIntroductionInclusion": [[113, 1, 1, "", "infer_formula"], [113, 1, 1, "", "infer_statement"]], "punctilious.EqualTermsSubstitutionDeclaration": [[114, 1, 1, "", "compose_paragraph_proof"], [114, 1, 1, "", "infer_formula"], [114, 1, 1, "", "verify_args"]], "punctilious.EqualTermsSubstitutionInclusion": [[115, 1, 1, "", "infer_formula"], [115, 1, 1, "", "infer_statement"]], "punctilious.EqualityCommutativityDeclaration": [[116, 1, 1, "", "compose_paragraph_proof"], [116, 1, 1, "", "infer_formula"], [116, 1, 1, "", "verify_args"]], "punctilious.EqualityCommutativityInclusion": [[117, 1, 1, "", "infer_formula"], [117, 1, 1, "", "infer_statement"]], "punctilious.InconsistencyIntroduction1Declaration": [[118, 1, 1, "", "compose_paragraph_proof"], [118, 1, 1, "", "infer_formula"], [118, 1, 1, "", "verify_args"]], "punctilious.InconsistencyIntroduction1Inclusion": [[119, 1, 1, "", "infer_formula"], [119, 1, 1, "", "infer_statement"]], "punctilious.InconsistencyIntroduction2Declaration": [[120, 1, 1, "", "compose_paragraph_proof"], [120, 1, 1, "", "infer_formula"], [120, 1, 1, "", "verify_args"]], "punctilious.InconsistencyIntroduction2Inclusion": [[121, 1, 1, "", "infer_formula"], [121, 1, 1, "", "infer_statement"]], "punctilious.InconsistencyIntroduction3Declaration": [[122, 1, 1, "", "compose_paragraph_proof"], [122, 1, 1, "", "infer_formula"], [122, 1, 1, "", "verify_args"]], "punctilious.InconsistencyIntroduction3Inclusion": [[123, 1, 1, "", "infer_formula"], [123, 1, 1, "", "infer_statement"]], "punctilious.ModusPonensDeclaration": [[125, 1, 1, "", "compose_paragraph_proof"], [125, 1, 1, "", "infer_formula"], [125, 1, 1, "", "verify_args"]], "punctilious.ModusPonensInclusion": [[126, 1, 1, "", "infer_formula"], [126, 1, 1, "", "infer_statement"]], "punctilious.ProofByContradiction1Declaration": [[127, 1, 1, "", "compose_paragraph_proof"], [127, 1, 1, "", "infer_formula"], [127, 1, 1, "", "verify_args"]], "punctilious.ProofByContradiction1Inclusion": [[128, 1, 1, "", "infer_formula"], [128, 1, 1, "", "infer_statement"]], "punctilious.ProofByContradiction2Declaration": [[129, 1, 1, "", "compose_paragraph_proof"], [129, 1, 1, "", "infer_formula"], [129, 1, 1, "", "verify_args"]], "punctilious.ProofByContradiction2Inclusion": [[130, 1, 1, "", "infer_formula"], [130, 1, 1, "", "infer_statement"]], "punctilious.ProofByRefutation1Declaration": [[131, 1, 1, "", "compose_paragraph_proof"], [131, 1, 1, "", "infer_formula"], [131, 1, 1, "", "verify_args"]], "punctilious.ProofByRefutation1Inclusion": [[132, 1, 1, "", "infer_formula"], [132, 1, 1, "", "infer_statement"]], "punctilious.ProofByRefutation2Declaration": [[133, 1, 1, "", "compose_paragraph_proof"], [133, 1, 1, "", "infer_formula"], [133, 1, 1, "", "verify_args"]], "punctilious.ProofByRefutation2Inclusion": [[134, 1, 1, "", "infer_formula"], [134, 1, 1, "", "infer_statement"]], "punctilious.UniverseOfDiscourse": [[136, 1, 1, "", "cross_reference_axiom"], [136, 1, 1, "", "cross_reference_definition"], [136, 1, 1, "", "cross_reference_formula"], [136, 1, 1, "", "cross_reference_inference_rule"], [136, 1, 1, "", "cross_reference_relation"], [136, 1, 1, "", "cross_reference_simple_objct"], [136, 1, 1, "", "cross_reference_symbolic_objct"], [136, 1, 1, "", "cross_reference_theory"], [136, 1, 1, "", "declare_axiom"], [136, 1, 1, "", "declare_definition"], [136, 1, 1, "", "declare_formula"], [136, 1, 1, "", "declare_free_variable"], [136, 1, 1, "", "declare_theory"], [136, 1, 1, "", "f"], [136, 1, 1, "", "get_symbol_max_index"], [136, 2, 1, "", "i"], [136, 1, 1, "", "index_symbol"], [136, 2, 1, "", "inference_rules"], [136, 2, 1, "", "o"], [136, 2, 1, "", "r"], [136, 2, 1, "", "relations"], [136, 2, 1, "", "simple_objcts"], [136, 1, 1, "", "t"], [136, 1, 1, "", "take_note"], [136, 1, 1, "", "v"]], "punctilious.VariableSubstitutionDeclaration": [[137, 1, 1, "", "compose_paragraph_proof"], [137, 1, 1, "", "infer_formula"], [137, 1, 1, "", "verify_args"]], "punctilious.VariableSubstitutionInclusion": [[138, 1, 1, "", "infer_formula"], [138, 1, 1, "", "infer_statement"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"my": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "tag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "absorpt": [0, 64, 143], "With": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "bicondit": [1, 2, 3, 65, 66, 67, 144, 145, 146], "elimin": [1, 2, 6, 7, 12, 44, 65, 66, 68, 69, 73, 144, 145, 147, 148, 152], "1": [1, 6, 10, 17, 23, 25, 65, 68, 71, 77, 81, 83, 144, 147, 150, 156, 160, 162], "2": [2, 7, 11, 18, 24, 26, 66, 69, 72, 78, 82, 84, 145, 148, 151, 157, 161, 163], "introduct": [3, 8, 10, 11, 13, 17, 18, 19, 44, 50, 67, 70, 71, 72, 74, 77, 78, 79, 146, 149, 150, 151, 153, 156, 157, 158], "class": [4, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "concept": [5, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88], "conjunct": [6, 7, 8, 68, 69, 70, 147, 148, 149], "declar": [9, 55], "disjunct": [10, 11, 71, 72, 150, 151], "doubl": [12, 13, 73, 74, 152, 153], "negat": [12, 13, 73, 74, 152, 153], "equal": [14, 15, 75, 76, 154, 155], "term": [14, 75, 154], "substitut": [14, 31, 75, 85, 154, 165], "commut": [15, 76, 155], "inclus": [16, 56], "inconsist": [17, 18, 19, 77, 78, 79, 156, 157, 158], "3": [19, 79, 158], "infer": [20, 49], "rule": [20, 44, 49, 50], "math": [21, 35, 38, 42, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90], "modu": [22, 80, 159], "ponen": [22, 80, 159], "proof": [23, 24, 25, 26, 35, 58, 81, 82, 83, 84, 160, 161, 162, 163], "contradict": [23, 24, 81, 82, 160, 161], "refut": [25, 26, 83, 84, 162, 163], "python": [27, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "sampl": [28, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "overview": 29, "univers": [30, 62], "discours": [30, 62], "variabl": [31, 47, 85, 165], "back": 32, "matter": [32, 34], "tabl": [32, 34, 41, 42, 88, 89, 90, 91], "content": [32, 34, 41, 42, 88, 89, 90, 91], "bibliographi": [33, 49, 51, 52, 61], "front": 34, "about": 35, "punctili": [35, 36, 37, 40, 41, 49, 59], "so": 35, "why": 35, "develop": [35, 38], "yet": 35, "anoth": 35, "assist": 35, "contribut": 36, "The": [37, 87], "project": 37, "roadmap": 38, "formal": 38, "theori": [38, 61, 90], "human": 38, "friendli": 38, "support": [39, 49], "axiom": [43, 87], "definit": [44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "list": [44, 49, 50, 52, 53], "well": [44, 50], "known": [44, 50], "quot": [44, 50, 70, 71, 72, 74, 78, 79], "formula": [45, 46, 63], "statement": [46, 60], "free": 47, "hypothesi": 48, "synonym": 49, "nativ": 49, "see": [49, 50], "also": [49, 50], "i": 51, "meta": 52, "object": [52, 54, 55, 56, 57], "notat": 53, "form": 53, "creation": 54, "paragraph": 58, "style": 58, "relat": 59, "kei": 59, "properti": 59, "data": 59, "model": 59, "elabor": 61, "sequenc": 61, "valid": 63, "tao": 86, "2006": 86, "book": 86, "chapter": 86, "peano": 87, "inference_rul": 89, "absorptiondeclar": 92, "absorptioninclus": 93, "biconditionalelimination1declar": 94, "biconditionalelimination1inclus": 95, "biconditionalelimination2declar": 96, "biconditionalelimination2inclus": 97, "biconditionalintroductiondeclar": 98, "biconditionalintroductioninclus": 99, "conjunctionelimination1declar": 100, "conjunctionelimination1inclus": 101, "conjunctionelimination2declar": 102, "conjunctionelimination2inclus": 103, "conjunctionintroductiondeclar": 104, "conjunctionintroductioninclus": 105, "disjunctionintroduction1declar": 106, "disjunctionintroduction1inclus": 107, "disjunctionintroduction2declar": 108, "disjunctionintroduction2inclus": 109, "doublenegationeliminationdeclar": 110, "doublenegationeliminationinclus": 111, "doublenegationintroductiondeclar": 112, "doublenegationintroductioninclus": 113, "equaltermssubstitutiondeclar": 114, "equaltermssubstitutioninclus": 115, "equalitycommutativitydeclar": 116, "equalitycommutativityinclus": 117, "inconsistencyintroduction1declar": 118, "inconsistencyintroduction1inclus": 119, "inconsistencyintroduction2declar": 120, "inconsistencyintroduction2inclus": 121, "inconsistencyintroduction3declar": 122, "inconsistencyintroduction3inclus": 123, "inferenceruledeclarationdict": 124, "modusponensdeclar": 125, "modusponensinclus": 126, "proofbycontradiction1declar": 127, "proofbycontradiction1inclus": 128, "proofbycontradiction2declar": 129, "proofbycontradiction2inclus": 130, "proofbyrefutation1declar": 131, "proofbyrefutation1inclus": 132, "proofbyrefutation2declar": 133, "proofbyrefutation2inclus": 134, "universeofdiscours": 136, "variablesubstitutiondeclar": 137, "variablesubstitutioninclus": 138, "create_universe_of_discours": 139, "function": 140, "instal": 141, "prerequisit": 142, "usag": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "code": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "output": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "sourc": 166, "repositori": 166}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"My tags: absorption": [[0, "my-tags-absorption"]], "With this tag": [[0, null], [1, null], [2, null], [3, null], [4, null], [5, null], [6, null], [7, null], [8, null], [9, null], [10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [30, null], [31, null]], "My tags: biconditional-elimination-1": [[1, "my-tags-biconditional-elimination-1"]], "My tags: biconditional-elimination-2": [[2, "my-tags-biconditional-elimination-2"]], "My tags: biconditional-introduction": [[3, "my-tags-biconditional-introduction"]], "My tags: class": [[4, "my-tags-class"]], "My tags: concept": [[5, "my-tags-concept"]], "My tags: conjunction-elimination-1": [[6, "my-tags-conjunction-elimination-1"]], "My tags: conjunction-elimination-2": [[7, "my-tags-conjunction-elimination-2"]], "My tags: conjunction-introduction": [[8, "my-tags-conjunction-introduction"]], "My tags: declaration": [[9, "my-tags-declaration"]], "My tags: disjunction-introduction-1": [[10, "my-tags-disjunction-introduction-1"]], "My tags: disjunction-introduction-2": [[11, "my-tags-disjunction-introduction-2"]], "My tags: double-negation-elimination": [[12, "my-tags-double-negation-elimination"]], "My tags: double-negation-introduction": [[13, "my-tags-double-negation-introduction"]], "My tags: equal-terms-substitution": [[14, "my-tags-equal-terms-substitution"]], "My tags: equality-commutativity": [[15, "my-tags-equality-commutativity"]], "My tags: inclusion": [[16, "my-tags-inclusion"]], "My tags: inconsistency-introduction-1": [[17, "my-tags-inconsistency-introduction-1"]], "My tags: inconsistency-introduction-2": [[18, "my-tags-inconsistency-introduction-2"]], "My tags: inconsistency-introduction-3": [[19, "my-tags-inconsistency-introduction-3"]], "My tags: inference-rule": [[20, "my-tags-inference-rule"]], "My tags: math": [[21, "my-tags-math"]], "My tags: modus-ponens": [[22, "my-tags-modus-ponens"]], "My tags: proof-by-contradiction-1": [[23, "my-tags-proof-by-contradiction-1"]], "My tags: proof-by-contradiction-2": [[24, "my-tags-proof-by-contradiction-2"]], "My tags: proof-by-refutation-1": [[25, "my-tags-proof-by-refutation-1"]], "My tags: proof-by-refutation-2": [[26, "my-tags-proof-by-refutation-2"]], "My tags: python": [[27, "my-tags-python"]], "My tags: sample": [[28, "my-tags-sample"]], "Tags overview": [[29, "tags-overview"]], "Tags": [[29, null]], "My tags: universe-of-discourse": [[30, "my-tags-universe-of-discourse"]], "My tags: variable-substitution": [[31, "my-tags-variable-substitution"]], "Back matter": [[32, "back-matter"]], "Table of contents": [[32, null], [34, null], [41, "table-of-contents"], [42, null], [88, null], [89, null], [90, null], [91, null]], "Bibliography": [[33, "bibliography"], [49, "bibliography"], [51, "bibliography"], [52, "bibliography"], [61, "bibliography"]], "Front matter": [[34, "front-matter"]], "About punctilious": [[35, "about-punctilious"]], "So why develop yet another math proof assistant?": [[35, "so-why-develop-yet-another-math-proof-assistant"]], "Contributing to punctilious": [[36, "contributing-to-punctilious"]], "The punctilious project": [[37, "the-punctilious-project"]], "Roadmap": [[38, "roadmap"]], "Formalization of Math theories": [[38, "formalization-of-math-theories"]], "Human-friendliness": [[38, "human-friendliness"]], "Developer-friendliness": [[38, "developer-friendliness"]], "Support": [[39, "support"]], "Punctilious": [[40, "punctilious"]], "punctilious": [[41, "punctilious"]], "Math": [[42, "math"]], "axiom": [[43, "axiom"]], "elimination-rule": [[44, "elimination-rule"]], "Definition": [[44, "definition"], [47, "definition"], [48, "definition"], [49, "definition"], [50, "definition"], [51, "definition"], [52, "definition"], [53, "definition"], [54, "definition"], [55, "definition"], [56, "definition"], [58, "definition"], [59, "definition"], [61, "definition"], [62, "definition"], [64, "definition"], [65, "definition"], [66, "definition"], [67, "definition"], [68, "definition"], [69, "definition"], [70, "definition"], [71, "definition"], [72, "definition"], [73, "definition"], [74, "definition"], [75, "definition"], [76, "definition"], [77, "definition"], [78, "definition"], [79, "definition"], [80, "definition"], [81, "definition"], [82, "definition"], [83, "definition"], [84, "definition"], [85, "definition"]], "List of well-known introduction-rules": [[44, "list-of-well-known-introduction-rules"], [50, "list-of-well-known-introduction-rules"]], "Quotes": [[44, "quotes"], [50, "quotes"], [70, "quotes"], [71, "quotes"], [72, "quotes"], [74, "quotes"], [78, "quotes"], [79, "quotes"]], "formula": [[45, "formula"]], "formula-statement": [[46, "formula-statement"]], "free-variable": [[47, "free-variable"]], "hypothesis": [[48, "hypothesis"]], "inference-rule": [[49, "inference-rule"]], "Synonyms": [[49, "synonyms"]], "List of inference-rules natively supported by punctilious": [[49, "list-of-inference-rules-natively-supported-by-punctilious"]], "See also": [[49, "see-also"], [50, "see-also"]], "introduction-rule": [[50, "introduction-rule"]], "is-a": [[51, "is-a"]], "meta-object": [[52, "meta-object"]], "List": [[52, "list"], [53, "list"]], "notation-form": [[53, "notation-form"]], "object-creation": [[54, "object-creation"]], "object-declaration": [[55, "object-declaration"]], "object-inclusion": [[56, "object-inclusion"]], "object": [[57, "object"]], "paragraph-proof (proof-style)": [[58, "paragraph-proof-proof-style"]], "relation": [[59, "relation"]], "Key properties": [[59, "key-properties"]], "Punctilious data model": [[59, "punctilious-data-model"]], "statement": [[60, "statement"]], "theory-elaboration-sequence": [[61, "theory-elaboration-sequence"]], "universe-of-discourse": [[62, "universe-of-discourse"]], "validity-of-formula": [[63, "validity-of-formula"]], "absorption (math concept)": [[64, "absorption-math-concept"]], "biconditional-elimination-1 (math concept)": [[65, "biconditional-elimination-1-math-concept"]], "biconditional-elimination-2 (math concept)": [[66, "biconditional-elimination-2-math-concept"]], "biconditional-introduction (math concept)": [[67, "biconditional-introduction-math-concept"]], "conjunction-elimination-1 (math concept)": [[68, "conjunction-elimination-1-math-concept"]], "conjunction-elimination-2 (math concept)": [[69, "conjunction-elimination-2-math-concept"]], "conjunction-introduction (math concept)": [[70, "conjunction-introduction-math-concept"]], "disjunction-introduction-1 (math concept)": [[71, "disjunction-introduction-1-math-concept"]], "disjunction-introduction-2 (math concept)": [[72, "disjunction-introduction-2-math-concept"]], "double-negation-elimination (math concept)": [[73, "double-negation-elimination-math-concept"]], "double-negation-introduction (math concept)": [[74, "double-negation-introduction-math-concept"]], "equal-terms-substitution (math concept)": [[75, "equal-terms-substitution-math-concept"]], "equality-commutativity (math concept)": [[76, "equality-commutativity-math-concept"]], "inconsistency-introduction-1 (math concept)": [[77, "inconsistency-introduction-1-math-concept"]], "inconsistency-introduction-2 (math concept)": [[78, "inconsistency-introduction-2-math-concept"]], "inconsistency-introduction-3 (math concept)": [[79, "inconsistency-introduction-3-math-concept"]], "modus-ponens (math concept)": [[80, "modus-ponens-math-concept"]], "proof-by-contradiction-1 (math concept)": [[81, "proof-by-contradiction-1-math-concept"]], "proof-by-contradiction-2 (math concept)": [[82, "proof-by-contradiction-2-math-concept"]], "proof-by-refutation-1 (math concept)": [[83, "proof-by-refutation-1-math-concept"]], "proof-by-refutation-2 (math concept)": [[84, "proof-by-refutation-2-math-concept"]], "variable-substitution (math concept)": [[85, "variable-substitution-math-concept"]], "Tao 2006": [[86, "tao-2006"]], "Book chapters": [[86, null]], "The Peano axioms": [[87, "the-peano-axioms"]], "Math concept": [[88, "math-concept"]], "Math inference_rule": [[89, "math-inference-rule"]], "Math theory": [[90, "math-theory"]], "Python": [[91, "python"]], "AbsorptionDeclaration (python class)": [[92, "absorptiondeclaration-python-class"]], "AbsorptionInclusion (python class)": [[93, "absorptioninclusion-python-class"]], "BiconditionalElimination1Declaration (python class)": [[94, "biconditionalelimination1declaration-python-class"]], "BiconditionalElimination1Inclusion (python class)": [[95, "biconditionalelimination1inclusion-python-class"]], "BiconditionalElimination2Declaration (python class)": [[96, "biconditionalelimination2declaration-python-class"]], "BiconditionalElimination2Inclusion (python class)": [[97, "biconditionalelimination2inclusion-python-class"]], "BiconditionalIntroductionDeclaration (python class)": [[98, "biconditionalintroductiondeclaration-python-class"]], "BiconditionalIntroductionInclusion (python class)": [[99, "biconditionalintroductioninclusion-python-class"]], "ConjunctionElimination1Declaration (python class)": [[100, "conjunctionelimination1declaration-python-class"]], "ConjunctionElimination1Inclusion (python class)": [[101, "conjunctionelimination1inclusion-python-class"]], "ConjunctionElimination2Declaration (python class)": [[102, "conjunctionelimination2declaration-python-class"]], "ConjunctionElimination2Inclusion (python class)": [[103, "conjunctionelimination2inclusion-python-class"]], "ConjunctionIntroductionDeclaration (python class)": [[104, "conjunctionintroductiondeclaration-python-class"]], "ConjunctionIntroductionInclusion (python class)": [[105, "conjunctionintroductioninclusion-python-class"]], "DisjunctionIntroduction1Declaration (python class)": [[106, "disjunctionintroduction1declaration-python-class"]], "DisjunctionIntroduction1Inclusion (python class)": [[107, "disjunctionintroduction1inclusion-python-class"]], "DisjunctionIntroduction2Declaration (python class)": [[108, "disjunctionintroduction2declaration-python-class"]], "DisjunctionIntroduction2Inclusion (python class)": [[109, "disjunctionintroduction2inclusion-python-class"]], "DoubleNegationEliminationDeclaration (python class)": [[110, "doublenegationeliminationdeclaration-python-class"]], "DoubleNegationEliminationInclusion (python class)": [[111, "doublenegationeliminationinclusion-python-class"]], "DoubleNegationIntroductionDeclaration (python class)": [[112, "doublenegationintroductiondeclaration-python-class"]], "DoubleNegationIntroductionInclusion (python class)": [[113, "doublenegationintroductioninclusion-python-class"]], "EqualTermsSubstitutionDeclaration (python class)": [[114, "equaltermssubstitutiondeclaration-python-class"]], "EqualTermsSubstitutionInclusion (python class)": [[115, "equaltermssubstitutioninclusion-python-class"]], "EqualityCommutativityDeclaration (python class)": [[116, "equalitycommutativitydeclaration-python-class"]], "EqualityCommutativityInclusion (python class)": [[117, "equalitycommutativityinclusion-python-class"]], "InconsistencyIntroduction1Declaration (python class)": [[118, "inconsistencyintroduction1declaration-python-class"]], "InconsistencyIntroduction1Inclusion (python class)": [[119, "inconsistencyintroduction1inclusion-python-class"]], "InconsistencyIntroduction2Declaration (python class)": [[120, "inconsistencyintroduction2declaration-python-class"]], "InconsistencyIntroduction2Inclusion (python class)": [[121, "inconsistencyintroduction2inclusion-python-class"]], "InconsistencyIntroduction3Declaration (python class)": [[122, "inconsistencyintroduction3declaration-python-class"]], "InconsistencyIntroduction3Inclusion (python class)": [[123, "inconsistencyintroduction3inclusion-python-class"]], "InferenceRuleDeclarationDict (python class)": [[124, "inferenceruledeclarationdict-python-class"]], "ModusPonensDeclaration (python class)": [[125, "modusponensdeclaration-python-class"]], "ModusPonensInclusion (python class)": [[126, "modusponensinclusion-python-class"]], "ProofByContradiction1Declaration (python class)": [[127, "proofbycontradiction1declaration-python-class"]], "ProofByContradiction1Inclusion (python class)": [[128, "proofbycontradiction1inclusion-python-class"]], "ProofByContradiction2Declaration (python class)": [[129, "proofbycontradiction2declaration-python-class"]], "ProofByContradiction2Inclusion (python class)": [[130, "proofbycontradiction2inclusion-python-class"]], "ProofByRefutation1Declaration (python class)": [[131, "proofbyrefutation1declaration-python-class"]], "ProofByRefutation1Inclusion (python class)": [[132, "proofbyrefutation1inclusion-python-class"]], "ProofByRefutation2Declaration (python class)": [[133, "proofbyrefutation2declaration-python-class"]], "ProofByRefutation2Inclusion (python class)": [[134, "proofbyrefutation2inclusion-python-class"]], "Python classes": [[135, "python-classes"]], "Class": [[135, null]], "UniverseOfDiscourse (python class)": [[136, "universeofdiscourse-python-class"]], "VariableSubstitutionDeclaration (python class)": [[137, "variablesubstitutiondeclaration-python-class"]], "VariableSubstitutionInclusion (python class)": [[138, "variablesubstitutioninclusion-python-class"]], "create_universe_of_discourse": [[139, "create-universe-of-discourse"]], "Python functions": [[140, "python-functions"]], "Function": [[140, null]], "Installation": [[141, "installation"]], "Prerequisites": [[142, "prerequisites"]], "absorption (python sample)": [[143, "id1"]], "Usage": [[143, "usage"], [144, "usage"], [145, "usage"], [146, "usage"], [147, "usage"], [148, "usage"], [149, "usage"], [150, "usage"], [151, "usage"], [152, "usage"], [153, "usage"], [154, "usage"], [155, "usage"], [156, "usage"], [157, "usage"], [158, "usage"], [159, "usage"], [160, "usage"], [161, "usage"], [162, "usage"], [163, "usage"], [165, "usage"]], "Sample code": [[143, "sample-code"], [144, "sample-code"], [145, "sample-code"], [146, "sample-code"], [147, "sample-code"], [148, "sample-code"], [149, "sample-code"], [150, "sample-code"], [151, "sample-code"], [152, "sample-code"], [153, "sample-code"], [154, "sample-code"], [155, "sample-code"], [156, "sample-code"], [157, "sample-code"], [158, "sample-code"], [159, "sample-code"], [160, "sample-code"], [161, "sample-code"], [162, "sample-code"], [163, "sample-code"], [165, "sample-code"]], "Code output": [[143, "code-output"], [144, "code-output"], [145, "code-output"], [146, "code-output"], [147, "code-output"], [148, "code-output"], [149, "code-output"], [150, "code-output"], [151, "code-output"], [152, "code-output"], [153, "code-output"], [154, "code-output"], [155, "code-output"], [156, "code-output"], [157, "code-output"], [158, "code-output"], [159, "code-output"], [160, "code-output"], [161, "code-output"], [162, "code-output"], [163, "code-output"], [165, "code-output"]], "biconditional-elimination-1 (python sample)": [[144, "id1"]], "biconditional-elimination-2 (python sample)": [[145, "id1"]], "biconditional-introduction (python sample)": [[146, "id1"]], "conjunction-elimination-1 (python sample)": [[147, "id1"]], "conjunction-elimination-2 (python sample)": [[148, "id1"]], "conjunction-introduction (python sample)": [[149, "id1"]], "disjunction-introduction-1 (python sample)": [[150, "id1"]], "disjunction-introduction-2 (python sample)": [[151, "id1"]], "double-negation-elimination (python sample)": [[152, "id1"]], "double-negation-introduction (python sample)": [[153, "id1"]], "equal-terms-substitution (python sample)": [[154, "id1"]], "equality-commutativity (python sample)": [[155, "id1"]], "inconsistency-introduction-1 (python sample)": [[156, "id1"]], "inconsistency-introduction-2 (python sample)": [[157, "id1"]], "inconsistency-introduction-3 (python sample)": [[158, "id1"]], "modus-ponens (python sample)": [[159, "id1"]], "proof-by-contradiction-1 (python sample)": [[160, "id1"]], "proof-by-contradiction-2 (python sample)": [[161, "id1"]], "proof-by-refutation-1 (python sample)": [[162, "id1"]], "proof-by-refutation-2 (python sample)": [[163, "id1"]], "Python samples": [[164, "python-samples"]], "Sample": [[164, null]], "variable-substitution (python sample)": [[165, "id1"]], "Source code repository": [[166, "source-code"]]}, "indexentries": {"absorptiondeclaration (class in punctilious)": [[92, "punctilious.AbsorptionDeclaration"]], "compose_paragraph_proof() (punctilious.absorptiondeclaration method)": [[92, "punctilious.AbsorptionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.absorptiondeclaration method)": [[92, "punctilious.AbsorptionDeclaration.infer_formula"]], "verify_args() (punctilious.absorptiondeclaration method)": [[92, "punctilious.AbsorptionDeclaration.verify_args"]], "absorptioninclusion (class in punctilious)": [[93, "punctilious.AbsorptionInclusion"]], "infer_formula() (punctilious.absorptioninclusion method)": [[93, "punctilious.AbsorptionInclusion.infer_formula"]], "infer_statement() (punctilious.absorptioninclusion method)": [[93, "punctilious.AbsorptionInclusion.infer_statement"]], "biconditionalelimination1declaration (class in punctilious)": [[94, "punctilious.BiconditionalElimination1Declaration"]], "compose_paragraph_proof() (punctilious.biconditionalelimination1declaration method)": [[94, "punctilious.BiconditionalElimination1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.biconditionalelimination1declaration method)": [[94, "punctilious.BiconditionalElimination1Declaration.infer_formula"]], "verify_args() (punctilious.biconditionalelimination1declaration method)": [[94, "punctilious.BiconditionalElimination1Declaration.verify_args"]], "biconditionalelimination1inclusion (class in punctilious)": [[95, "punctilious.BiconditionalElimination1Inclusion"]], "infer_formula() (punctilious.biconditionalelimination1inclusion method)": [[95, "punctilious.BiconditionalElimination1Inclusion.infer_formula"]], "infer_statement() (punctilious.biconditionalelimination1inclusion method)": [[95, "punctilious.BiconditionalElimination1Inclusion.infer_statement"]], "biconditionalelimination2declaration (class in punctilious)": [[96, "punctilious.BiconditionalElimination2Declaration"]], "compose_paragraph_proof() (punctilious.biconditionalelimination2declaration method)": [[96, "punctilious.BiconditionalElimination2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.biconditionalelimination2declaration method)": [[96, "punctilious.BiconditionalElimination2Declaration.infer_formula"]], "verify_args() (punctilious.biconditionalelimination2declaration method)": [[96, "punctilious.BiconditionalElimination2Declaration.verify_args"]], "biconditionalelimination2inclusion (class in punctilious)": [[97, "punctilious.BiconditionalElimination2Inclusion"]], "infer_formula() (punctilious.biconditionalelimination2inclusion method)": [[97, "punctilious.BiconditionalElimination2Inclusion.infer_formula"]], "infer_statement() (punctilious.biconditionalelimination2inclusion method)": [[97, "punctilious.BiconditionalElimination2Inclusion.infer_statement"]], "biconditionalintroductiondeclaration (class in punctilious)": [[98, "punctilious.BiconditionalIntroductionDeclaration"]], "compose_paragraph_proof() (punctilious.biconditionalintroductiondeclaration method)": [[98, "punctilious.BiconditionalIntroductionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.biconditionalintroductiondeclaration method)": [[98, "punctilious.BiconditionalIntroductionDeclaration.infer_formula"]], "verify_args() (punctilious.biconditionalintroductiondeclaration method)": [[98, "punctilious.BiconditionalIntroductionDeclaration.verify_args"]], "biconditionalintroductioninclusion (class in punctilious)": [[99, "punctilious.BiconditionalIntroductionInclusion"]], "infer_formula() (punctilious.biconditionalintroductioninclusion method)": [[99, "punctilious.BiconditionalIntroductionInclusion.infer_formula"]], "infer_statement() (punctilious.biconditionalintroductioninclusion method)": [[99, "punctilious.BiconditionalIntroductionInclusion.infer_statement"]], "conjunctionelimination1declaration (class in punctilious)": [[100, "punctilious.ConjunctionElimination1Declaration"]], "compose_paragraph_proof() (punctilious.conjunctionelimination1declaration method)": [[100, "punctilious.ConjunctionElimination1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.conjunctionelimination1declaration method)": [[100, "punctilious.ConjunctionElimination1Declaration.infer_formula"]], "verify_args() (punctilious.conjunctionelimination1declaration method)": [[100, "punctilious.ConjunctionElimination1Declaration.verify_args"]], "conjunctionelimination1inclusion (class in punctilious)": [[101, "punctilious.ConjunctionElimination1Inclusion"]], "infer_formula() (punctilious.conjunctionelimination1inclusion method)": [[101, "punctilious.ConjunctionElimination1Inclusion.infer_formula"]], "infer_statement() (punctilious.conjunctionelimination1inclusion method)": [[101, "punctilious.ConjunctionElimination1Inclusion.infer_statement"]], "conjunctionelimination2declaration (class in punctilious)": [[102, "punctilious.ConjunctionElimination2Declaration"]], "compose_paragraph_proof() (punctilious.conjunctionelimination2declaration method)": [[102, "punctilious.ConjunctionElimination2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.conjunctionelimination2declaration method)": [[102, "punctilious.ConjunctionElimination2Declaration.infer_formula"]], "verify_args() (punctilious.conjunctionelimination2declaration method)": [[102, "punctilious.ConjunctionElimination2Declaration.verify_args"]], "conjunctionelimination2inclusion (class in punctilious)": [[103, "punctilious.ConjunctionElimination2Inclusion"]], "infer_formula() (punctilious.conjunctionelimination2inclusion method)": [[103, "punctilious.ConjunctionElimination2Inclusion.infer_formula"]], "infer_statement() (punctilious.conjunctionelimination2inclusion method)": [[103, "punctilious.ConjunctionElimination2Inclusion.infer_statement"]], "conjunctionintroductiondeclaration (class in punctilious)": [[104, "punctilious.ConjunctionIntroductionDeclaration"]], "compose_paragraph_proof() (punctilious.conjunctionintroductiondeclaration method)": [[104, "punctilious.ConjunctionIntroductionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.conjunctionintroductiondeclaration method)": [[104, "punctilious.ConjunctionIntroductionDeclaration.infer_formula"]], "verify_args() (punctilious.conjunctionintroductiondeclaration method)": [[104, "punctilious.ConjunctionIntroductionDeclaration.verify_args"]], "conjunctionintroductioninclusion (class in punctilious)": [[105, "punctilious.ConjunctionIntroductionInclusion"]], "infer_formula() (punctilious.conjunctionintroductioninclusion method)": [[105, "punctilious.ConjunctionIntroductionInclusion.infer_formula"]], "infer_statement() (punctilious.conjunctionintroductioninclusion method)": [[105, "punctilious.ConjunctionIntroductionInclusion.infer_statement"]], "disjunctionintroduction1declaration (class in punctilious)": [[106, "punctilious.DisjunctionIntroduction1Declaration"]], "compose_paragraph_proof() (punctilious.disjunctionintroduction1declaration method)": [[106, "punctilious.DisjunctionIntroduction1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.disjunctionintroduction1declaration method)": [[106, "punctilious.DisjunctionIntroduction1Declaration.infer_formula"]], "verify_args() (punctilious.disjunctionintroduction1declaration method)": [[106, "punctilious.DisjunctionIntroduction1Declaration.verify_args"]], "disjunctionintroduction1inclusion (class in punctilious)": [[107, "punctilious.DisjunctionIntroduction1Inclusion"]], "infer_formula() (punctilious.disjunctionintroduction1inclusion method)": [[107, "punctilious.DisjunctionIntroduction1Inclusion.infer_formula"]], "infer_statement() (punctilious.disjunctionintroduction1inclusion method)": [[107, "punctilious.DisjunctionIntroduction1Inclusion.infer_statement"]], "disjunctionintroduction2declaration (class in punctilious)": [[108, "punctilious.DisjunctionIntroduction2Declaration"]], "compose_paragraph_proof() (punctilious.disjunctionintroduction2declaration method)": [[108, "punctilious.DisjunctionIntroduction2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.disjunctionintroduction2declaration method)": [[108, "punctilious.DisjunctionIntroduction2Declaration.infer_formula"]], "verify_args() (punctilious.disjunctionintroduction2declaration method)": [[108, "punctilious.DisjunctionIntroduction2Declaration.verify_args"]], "disjunctionintroduction2inclusion (class in punctilious)": [[109, "punctilious.DisjunctionIntroduction2Inclusion"]], "infer_formula() (punctilious.disjunctionintroduction2inclusion method)": [[109, "punctilious.DisjunctionIntroduction2Inclusion.infer_formula"]], "infer_statement() (punctilious.disjunctionintroduction2inclusion method)": [[109, "punctilious.DisjunctionIntroduction2Inclusion.infer_statement"]], "doublenegationeliminationdeclaration (class in punctilious)": [[110, "punctilious.DoubleNegationEliminationDeclaration"]], "compose_paragraph_proof() (punctilious.doublenegationeliminationdeclaration method)": [[110, "punctilious.DoubleNegationEliminationDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.doublenegationeliminationdeclaration method)": [[110, "punctilious.DoubleNegationEliminationDeclaration.infer_formula"]], "verify_args() (punctilious.doublenegationeliminationdeclaration method)": [[110, "punctilious.DoubleNegationEliminationDeclaration.verify_args"]], "doublenegationeliminationinclusion (class in punctilious)": [[111, "punctilious.DoubleNegationEliminationInclusion"]], "infer_formula() (punctilious.doublenegationeliminationinclusion method)": [[111, "punctilious.DoubleNegationEliminationInclusion.infer_formula"]], "infer_statement() (punctilious.doublenegationeliminationinclusion method)": [[111, "punctilious.DoubleNegationEliminationInclusion.infer_statement"]], "doublenegationintroductiondeclaration (class in punctilious)": [[112, "punctilious.DoubleNegationIntroductionDeclaration"]], "compose_paragraph_proof() (punctilious.doublenegationintroductiondeclaration method)": [[112, "punctilious.DoubleNegationIntroductionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.doublenegationintroductiondeclaration method)": [[112, "punctilious.DoubleNegationIntroductionDeclaration.infer_formula"]], "verify_args() (punctilious.doublenegationintroductiondeclaration method)": [[112, "punctilious.DoubleNegationIntroductionDeclaration.verify_args"]], "doublenegationintroductioninclusion (class in punctilious)": [[113, "punctilious.DoubleNegationIntroductionInclusion"]], "infer_formula() (punctilious.doublenegationintroductioninclusion method)": [[113, "punctilious.DoubleNegationIntroductionInclusion.infer_formula"]], "infer_statement() (punctilious.doublenegationintroductioninclusion method)": [[113, "punctilious.DoubleNegationIntroductionInclusion.infer_statement"]], "equaltermssubstitutiondeclaration (class in punctilious)": [[114, "punctilious.EqualTermsSubstitutionDeclaration"]], "compose_paragraph_proof() (punctilious.equaltermssubstitutiondeclaration method)": [[114, "punctilious.EqualTermsSubstitutionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.equaltermssubstitutiondeclaration method)": [[114, "punctilious.EqualTermsSubstitutionDeclaration.infer_formula"]], "verify_args() (punctilious.equaltermssubstitutiondeclaration method)": [[114, "punctilious.EqualTermsSubstitutionDeclaration.verify_args"]], "equaltermssubstitutioninclusion (class in punctilious)": [[115, "punctilious.EqualTermsSubstitutionInclusion"]], "infer_formula() (punctilious.equaltermssubstitutioninclusion method)": [[115, "punctilious.EqualTermsSubstitutionInclusion.infer_formula"]], "infer_statement() (punctilious.equaltermssubstitutioninclusion method)": [[115, "punctilious.EqualTermsSubstitutionInclusion.infer_statement"]], "equalitycommutativitydeclaration (class in punctilious)": [[116, "punctilious.EqualityCommutativityDeclaration"]], "compose_paragraph_proof() (punctilious.equalitycommutativitydeclaration method)": [[116, "punctilious.EqualityCommutativityDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.equalitycommutativitydeclaration method)": [[116, "punctilious.EqualityCommutativityDeclaration.infer_formula"]], "verify_args() (punctilious.equalitycommutativitydeclaration method)": [[116, "punctilious.EqualityCommutativityDeclaration.verify_args"]], "equalitycommutativityinclusion (class in punctilious)": [[117, "punctilious.EqualityCommutativityInclusion"]], "infer_formula() (punctilious.equalitycommutativityinclusion method)": [[117, "punctilious.EqualityCommutativityInclusion.infer_formula"]], "infer_statement() (punctilious.equalitycommutativityinclusion method)": [[117, "punctilious.EqualityCommutativityInclusion.infer_statement"]], "inconsistencyintroduction1declaration (class in punctilious)": [[118, "punctilious.InconsistencyIntroduction1Declaration"]], "compose_paragraph_proof() (punctilious.inconsistencyintroduction1declaration method)": [[118, "punctilious.InconsistencyIntroduction1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.inconsistencyintroduction1declaration method)": [[118, "punctilious.InconsistencyIntroduction1Declaration.infer_formula"]], "verify_args() (punctilious.inconsistencyintroduction1declaration method)": [[118, "punctilious.InconsistencyIntroduction1Declaration.verify_args"]], "inconsistencyintroduction1inclusion (class in punctilious)": [[119, "punctilious.InconsistencyIntroduction1Inclusion"]], "infer_formula() (punctilious.inconsistencyintroduction1inclusion method)": [[119, "punctilious.InconsistencyIntroduction1Inclusion.infer_formula"]], "infer_statement() (punctilious.inconsistencyintroduction1inclusion method)": [[119, "punctilious.InconsistencyIntroduction1Inclusion.infer_statement"]], "inconsistencyintroduction2declaration (class in punctilious)": [[120, "punctilious.InconsistencyIntroduction2Declaration"]], "compose_paragraph_proof() (punctilious.inconsistencyintroduction2declaration method)": [[120, "punctilious.InconsistencyIntroduction2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.inconsistencyintroduction2declaration method)": [[120, "punctilious.InconsistencyIntroduction2Declaration.infer_formula"]], "verify_args() (punctilious.inconsistencyintroduction2declaration method)": [[120, "punctilious.InconsistencyIntroduction2Declaration.verify_args"]], "inconsistencyintroduction2inclusion (class in punctilious)": [[121, "punctilious.InconsistencyIntroduction2Inclusion"]], "infer_formula() (punctilious.inconsistencyintroduction2inclusion method)": [[121, "punctilious.InconsistencyIntroduction2Inclusion.infer_formula"]], "infer_statement() (punctilious.inconsistencyintroduction2inclusion method)": [[121, "punctilious.InconsistencyIntroduction2Inclusion.infer_statement"]], "inconsistencyintroduction3declaration (class in punctilious)": [[122, "punctilious.InconsistencyIntroduction3Declaration"]], "compose_paragraph_proof() (punctilious.inconsistencyintroduction3declaration method)": [[122, "punctilious.InconsistencyIntroduction3Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.inconsistencyintroduction3declaration method)": [[122, "punctilious.InconsistencyIntroduction3Declaration.infer_formula"]], "verify_args() (punctilious.inconsistencyintroduction3declaration method)": [[122, "punctilious.InconsistencyIntroduction3Declaration.verify_args"]], "inconsistencyintroduction3inclusion (class in punctilious)": [[123, "punctilious.InconsistencyIntroduction3Inclusion"]], "infer_formula() (punctilious.inconsistencyintroduction3inclusion method)": [[123, "punctilious.InconsistencyIntroduction3Inclusion.infer_formula"]], "infer_statement() (punctilious.inconsistencyintroduction3inclusion method)": [[123, "punctilious.InconsistencyIntroduction3Inclusion.infer_statement"]], "inferenceruledeclarationdict (class in punctilious)": [[124, "punctilious.InferenceRuleDeclarationDict"]], "modusponensdeclaration (class in punctilious)": [[125, "punctilious.ModusPonensDeclaration"]], "compose_paragraph_proof() (punctilious.modusponensdeclaration method)": [[125, "punctilious.ModusPonensDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.modusponensdeclaration method)": [[125, "punctilious.ModusPonensDeclaration.infer_formula"]], "verify_args() (punctilious.modusponensdeclaration method)": [[125, "punctilious.ModusPonensDeclaration.verify_args"]], "modusponensinclusion (class in punctilious)": [[126, "punctilious.ModusPonensInclusion"]], "infer_formula() (punctilious.modusponensinclusion method)": [[126, "punctilious.ModusPonensInclusion.infer_formula"]], "infer_statement() (punctilious.modusponensinclusion method)": [[126, "punctilious.ModusPonensInclusion.infer_statement"]], "proofbycontradiction1declaration (class in punctilious)": [[127, "punctilious.ProofByContradiction1Declaration"]], "compose_paragraph_proof() (punctilious.proofbycontradiction1declaration method)": [[127, "punctilious.ProofByContradiction1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.proofbycontradiction1declaration method)": [[127, "punctilious.ProofByContradiction1Declaration.infer_formula"]], "verify_args() (punctilious.proofbycontradiction1declaration method)": [[127, "punctilious.ProofByContradiction1Declaration.verify_args"]], "proofbycontradiction1inclusion (class in punctilious)": [[128, "punctilious.ProofByContradiction1Inclusion"]], "infer_formula() (punctilious.proofbycontradiction1inclusion method)": [[128, "punctilious.ProofByContradiction1Inclusion.infer_formula"]], "infer_statement() (punctilious.proofbycontradiction1inclusion method)": [[128, "punctilious.ProofByContradiction1Inclusion.infer_statement"]], "proofbycontradiction2declaration (class in punctilious)": [[129, "punctilious.ProofByContradiction2Declaration"]], "compose_paragraph_proof() (punctilious.proofbycontradiction2declaration method)": [[129, "punctilious.ProofByContradiction2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.proofbycontradiction2declaration method)": [[129, "punctilious.ProofByContradiction2Declaration.infer_formula"]], "verify_args() (punctilious.proofbycontradiction2declaration method)": [[129, "punctilious.ProofByContradiction2Declaration.verify_args"]], "proofbycontradiction2inclusion (class in punctilious)": [[130, "punctilious.ProofByContradiction2Inclusion"]], "infer_formula() (punctilious.proofbycontradiction2inclusion method)": [[130, "punctilious.ProofByContradiction2Inclusion.infer_formula"]], "infer_statement() (punctilious.proofbycontradiction2inclusion method)": [[130, "punctilious.ProofByContradiction2Inclusion.infer_statement"]], "proofbyrefutation1declaration (class in punctilious)": [[131, "punctilious.ProofByRefutation1Declaration"]], "compose_paragraph_proof() (punctilious.proofbyrefutation1declaration method)": [[131, "punctilious.ProofByRefutation1Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.proofbyrefutation1declaration method)": [[131, "punctilious.ProofByRefutation1Declaration.infer_formula"]], "verify_args() (punctilious.proofbyrefutation1declaration method)": [[131, "punctilious.ProofByRefutation1Declaration.verify_args"]], "proofbyrefutation1inclusion (class in punctilious)": [[132, "punctilious.ProofByRefutation1Inclusion"]], "infer_formula() (punctilious.proofbyrefutation1inclusion method)": [[132, "punctilious.ProofByRefutation1Inclusion.infer_formula"]], "infer_statement() (punctilious.proofbyrefutation1inclusion method)": [[132, "punctilious.ProofByRefutation1Inclusion.infer_statement"]], "proofbyrefutation2declaration (class in punctilious)": [[133, "punctilious.ProofByRefutation2Declaration"]], "compose_paragraph_proof() (punctilious.proofbyrefutation2declaration method)": [[133, "punctilious.ProofByRefutation2Declaration.compose_paragraph_proof"]], "infer_formula() (punctilious.proofbyrefutation2declaration method)": [[133, "punctilious.ProofByRefutation2Declaration.infer_formula"]], "verify_args() (punctilious.proofbyrefutation2declaration method)": [[133, "punctilious.ProofByRefutation2Declaration.verify_args"]], "proofbyrefutation2inclusion (class in punctilious)": [[134, "punctilious.ProofByRefutation2Inclusion"]], "infer_formula() (punctilious.proofbyrefutation2inclusion method)": [[134, "punctilious.ProofByRefutation2Inclusion.infer_formula"]], "infer_statement() (punctilious.proofbyrefutation2inclusion method)": [[134, "punctilious.ProofByRefutation2Inclusion.infer_statement"]], "universeofdiscourse (class in punctilious)": [[136, "punctilious.UniverseOfDiscourse"]], "cross_reference_axiom() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.cross_reference_axiom"]], "cross_reference_definition() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.cross_reference_definition"]], "cross_reference_formula() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.cross_reference_formula"]], "cross_reference_inference_rule() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.cross_reference_inference_rule"]], "cross_reference_relation() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.cross_reference_relation"]], "cross_reference_simple_objct() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.cross_reference_simple_objct"]], "cross_reference_symbolic_objct() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.cross_reference_symbolic_objct"]], "cross_reference_theory() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.cross_reference_theory"]], "declare_axiom() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.declare_axiom"]], "declare_definition() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.declare_definition"]], "declare_formula() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.declare_formula"]], "declare_free_variable() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.declare_free_variable"]], "declare_theory() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.declare_theory"]], "f() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.f"]], "get_symbol_max_index() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.get_symbol_max_index"]], "i (punctilious.universeofdiscourse property)": [[136, "punctilious.UniverseOfDiscourse.i"]], "index_symbol() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.index_symbol"]], "inference_rules (punctilious.universeofdiscourse property)": [[136, "punctilious.UniverseOfDiscourse.inference_rules"]], "o (punctilious.universeofdiscourse property)": [[136, "punctilious.UniverseOfDiscourse.o"]], "r (punctilious.universeofdiscourse property)": [[136, "punctilious.UniverseOfDiscourse.r"]], "relations (punctilious.universeofdiscourse property)": [[136, "punctilious.UniverseOfDiscourse.relations"]], "simple_objcts (punctilious.universeofdiscourse property)": [[136, "punctilious.UniverseOfDiscourse.simple_objcts"]], "t() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.t"]], "take_note() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.take_note"]], "v() (punctilious.universeofdiscourse method)": [[136, "punctilious.UniverseOfDiscourse.v"]], "variablesubstitutiondeclaration (class in punctilious)": [[137, "punctilious.VariableSubstitutionDeclaration"]], "compose_paragraph_proof() (punctilious.variablesubstitutiondeclaration method)": [[137, "punctilious.VariableSubstitutionDeclaration.compose_paragraph_proof"]], "infer_formula() (punctilious.variablesubstitutiondeclaration method)": [[137, "punctilious.VariableSubstitutionDeclaration.infer_formula"]], "verify_args() (punctilious.variablesubstitutiondeclaration method)": [[137, "punctilious.VariableSubstitutionDeclaration.verify_args"]], "variablesubstitutioninclusion (class in punctilious)": [[138, "punctilious.VariableSubstitutionInclusion"]], "infer_formula() (punctilious.variablesubstitutioninclusion method)": [[138, "punctilious.VariableSubstitutionInclusion.infer_formula"]], "infer_statement() (punctilious.variablesubstitutioninclusion method)": [[138, "punctilious.VariableSubstitutionInclusion.infer_statement"]], "create_universe_of_discourse() (in module punctilious)": [[139, "punctilious.create_universe_of_discourse"]]}})