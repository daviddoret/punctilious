.. _variable_python_sample:

.. role:: python(code)
    :language: py

variable (python sample)
============================================

.. tags:: variable, python, sample

.. seealso::
   :ref:`math concept<variable_math_concept>` | :ref:`python class<free_variable_python_class>`

This page shows how to declare :ref:`variables<variable_math_concept>` in a :ref:`universe-of-discourse<universe_of_discourse_math_concept>`.

Usage 1
----------------------

The preferred approach to declare a *variable* is to call the :python:`with_variable` method on the instance of the :ref:`UniverseOfDiscourse<universe_of_discourse_python_class>` :

The scope of the variable is managed automatically.

.. code-block:: python

   u = pu.create_universe()

   with u.with_variable() as x, u.with_variable() as y,
       ...
       # some formula elaboration code
       ...

Usage 2
----------------------

If you want to manage the scope of your variables expressly, you may call the :python:`declare_variable` method on the instance of the :ref:`UniverseOfDiscourse<universe_of_discourse_python_class>` :

.. code-block:: python

   u = pu.create_universe()

   x = u.declare_variable()
   y = u.with_variable()

   ...
   # some theory derivation code
   ...

    phi.lock_variable_scope()

Sample code
----------------------

.. literalinclude :: ../../../../src/sample/sample_variable.py
  :language: python

Code output
-----------------------

.. tabs::

   .. tab:: Unicode

      .. literalinclude :: ../../../../data/sample_variable_unicode.txt
         :language: text

   .. tab:: Plaintext

      .. literalinclude :: ../../../../data/sample_variable_plaintext.txt
         :language: text

   .. tab:: LaTeX

      Will be provided in a future version.

   .. tab:: HTML

      Will be provided in a future version.