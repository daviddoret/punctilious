
𝐟𝐨𝐮𝐧𝐝𝐚𝐭𝐢𝐨𝐧-𝐬𝐲𝐬𝐭𝐞𝐦
𝐄𝐱𝐭𝐞𝐧𝐝𝐞𝐝 𝐭𝐡𝐞𝐨𝐫𝐢𝐞𝐬:
The following theories are extended by 𝐟𝐨𝐮𝐧𝐝𝐚𝐭𝐢𝐨𝐧-𝐬𝐲𝐬𝐭𝐞𝐦.

𝐒𝐢𝐦𝐩𝐥𝐞-𝐨𝐛𝐣𝐜𝐭 𝐝𝐞𝐜𝐥𝐚𝐫𝐚𝐭𝐢𝐨𝐧𝐬:
Let class-of-classes be a simple-objct denoted as ⌜ class-of-classes ⌝.
Let theory-class be a simple-objct denoted as ⌜ theory-class ⌝.
Let false be a simple-objct denoted as ⌜ false ⌝.
Let true be a simple-objct denoted as ⌜ true ⌝.
Let truth-values be a simple-objct denoted as ⌜ truth-values ⌝.
Let propositional-relations-class be a simple-objct denoted as ⌜ propositional-relations-class ⌝.
Let proposition-class be a simple-objct denoted as ⌜ proposition-class ⌝.
Let contradictory-theories be a simple-objct denoted as ⌜ contradictory-theories ⌝.
Let contradictory-statement be a simple-objct denoted as ⌜ contradictory-statement ⌝.
Let 0 be a simple-objct denoted as ⌜ 0 ⌝.
Let 1 be a simple-objct denoted as ⌜ 1 ⌝.
Let 2 be a simple-objct denoted as ⌜ 2 ⌝.
Let 3 be a simple-objct denoted as ⌜ 3 ⌝.
Let 4 be a simple-objct denoted as ⌜ 4 ⌝.
Let natural-number be a simple-objct denoted as ⌜ natural-number ⌝.

𝐑𝐞𝐥𝐚𝐭𝐢𝐨𝐧 𝐝𝐞𝐜𝐥𝐚𝐫𝐚𝐭𝐢𝐨𝐧𝐬:
Let ∈ be a binary relation denoted as ⌜ ∈ ⌝, that signals well-formed formulae in infix-operator syntax (e.g.: ⌜ 𝐱₁ ∈ 𝐱₂ ⌝).
Let = be a binary relation denoted as ⌜ = ⌝, that signals well-formed formulae in infix-operator syntax (e.g.: ⌜ 𝐱₁ = 𝐱₂ ⌝).
Let ⟹ be a binary relation denoted as ⌜ ⟹ ⌝, that signals well-formed formulae in infix-operator syntax (e.g.: ⌜ 𝐱₁ ⟹ 𝐱₂ ⌝).
Let ∧ be a binary relation denoted as ⌜ ∧ ⌝, that signals well-formed formulae in infix-operator syntax (e.g.: ⌜ 𝐱₁ ∧ 𝐱₂ ⌝).
Let ∨ be a binary relation denoted as ⌜ ∨ ⌝, that signals well-formed formulae in infix-operator syntax (e.g.: ⌜ 𝐱₁ ∨ 𝐱₂ ⌝).
Let ¬ be a unary relation denoted as ⌜ ¬ ⌝, that signals well-formed formulae in prefix-operator syntax (e.g.: ⌜ ¬𝐱 ⌝).
Let ≠ be a binary relation denoted as ⌜ ≠ ⌝, that signals well-formed formulae in infix-operator syntax (e.g.: ⌜ 𝐱₁ ≠ 𝐱₂ ⌝).
Let is be a binary relation denoted as ⌜ is ⌝, that signals well-formed formulae in infix-operator syntax (e.g.: ⌜ 𝐱₁ is 𝐱₂ ⌝).
Let relation-declaration be a binary relation denoted as ⌜ relation-declaration ⌝, that signals well-formed formulae in function-call syntax (e.g.: ⌜ relation-declaration(𝐱₁, 𝐱₂ ,… ,𝐱ₙ) ⌝).
Let simple-objct-declaration be a binary relation denoted as ⌜ simple-objct-declaration ⌝, that signals well-formed formulae in function-call syntax (e.g.: ⌜ simple-objct-declaration(𝐱₁, 𝐱₂ ,… ,𝐱ₙ) ⌝).
Let theory-declaration be a binary relation denoted as ⌜ theory-declaration ⌝, that signals well-formed formulae in function-call syntax (e.g.: ⌜ theory-declaration(𝐱₁, 𝐱₂ ,… ,𝐱ₙ) ⌝).
Let theory-extension be a binary relation denoted as ⌜ theory-extension ⌝, that signals well-formed formulae in function-call syntax (e.g.: ⌜ theory-extension(𝐱₁, 𝐱₂ ,… ,𝐱ₙ) ⌝).
Let variable-declaration be a binary relation denoted as ⌜ variable-declaration ⌝, that signals well-formed formulae in function-call syntax (e.g.: ⌜ variable-declaration(𝐱₁, 𝐱₂ ,… ,𝐱ₙ) ⌝).
Let is-a be a binary relation denoted as ⌜ is-a ⌝, that signals well-formed formulae in infix-operator syntax (e.g.: ⌜ 𝐱₁ is-a 𝐱₂ ⌝).
Let ++ be a unary relation denoted as ⌜ ++ ⌝, that signals well-formed formulae in postfix-operator syntax (e.g.: ⌜ 𝐱++ ⌝).

𝐓𝐡𝐞𝐨𝐫𝐲 𝐞𝐥𝐚𝐛𝐨𝐫𝐚𝐭𝐢𝐨𝐧:

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “A theory is a... (define punctilious
	data model).”

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “An (axiomatic) class is a collection of
	theoretical objects that are unambiguously defined by the axioms of
	the theory it belongs to.”

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “The class of classes is the class of all
	classes defined in the universe-of-discourse (TODO: Or foundation
	theory?).”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (class-of-classes ∈ class-of-classes)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(class-of-classes ∈ class-of-classes)                                  │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “The theory-class is the class of all
	theories”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (theory-class ∈ class-of-classes)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(theory-class ∈ class-of-classes)                                      │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (foundation-system ∈ theory-class)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(foundation-system ∈ theory-class)                                     │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “truth-values is the class whose elements
	are the theoretical-objects truth and falsehood.”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (truth-values ∈ class-of-classes)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(truth-values ∈ class-of-classes)                                      │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (true ∈ truth-values)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(true ∈ truth-values)                                                  │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (false ∈ truth-values)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(false ∈ truth-values)                                                 │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “propositional-relations is the class
	whose elements are the relations: conjunction, disjunction,
	implication, and negation, and any relation defined from these.”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (propositional-relations-class ∈ class-of-classes)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(propositional-relations-class ∈ class-of-classes)                     │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (∧ ∈ propositional-relations-class)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(∧ ∈ propositional-relations-class)                                    │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (∨ ∈ propositional-relations-class)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(∨ ∈ propositional-relations-class)                                    │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (⟹ ∈ propositional-relations-class)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(⟹ ∈ propositional-relations-class)                                    │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (¬ ∈ propositional-relations-class)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(¬ ∈ propositional-relations-class)                                    │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (≠ ∈ propositional-relations-class)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(≠ ∈ propositional-relations-class)                                    │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “= is a binary relation such that, given
	any two theoretical-objcts x and y, if x=y then y=x, and for every
	statement s, s is valid iif subst s is valid.”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: ((x₁ = y₁) ⟹ (y₁ = x₁))
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	((x₁ = y₁) ⟹ (y₁ = x₁))                                                │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝙳₂₀: “Inequality is defined as the negation of equality.”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐝𝐞𝐟𝐢𝐧𝐢𝐭𝐢𝐨𝐧 𝐍𝐨𝐧𝐞: ((x₂ ≠ y₂) = ¬((x₂ = y₂)))
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐝𝐞𝐟𝐢𝐧𝐢𝐭𝐢𝐨𝐧
	((x₂ ≠ y₂) = ¬((x₂ = y₂)))                                             │ Follows from 𝙳₂₀.

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “propositions is a class whose elements
	are truth, falsehood, all elements of the theory-formula-statement
	class, whose relation is an element-of propositional-relations-class,
	and all theory-formula-statements whose relation is defined from
	these. Its elements are called propositions.”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (true ∈ class-of-classes)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(true ∈ class-of-classes)                                              │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (false ∈ class-of-classes)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(false ∈ class-of-classes)                                             │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “If P is a proposition, then either the
	statement P has truth value true,or the statement P has truth value
	falsehood.”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (true is true)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(true is true)                                                         │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (false is false)
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(false is false)                                                       │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “¬ is a unary relation. If P is a
	proposition and it has truth-value truth, then ¬P has-truth-value
	false. Conversely, if P is a proposition and it has truth-value
	falsehood, then ¬P has truth-value true.”

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “If P has-truth-value t, ¬(¬(P))
	has-truth-value t.”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: ((𝐱₁ is 𝐱₂) ⟹ (¬(¬(𝐱₁)) is 𝐱₂))
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	((𝐱₁ is 𝐱₂) ⟹ (¬(¬(𝐱₁)) is 𝐱₂))                                        │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.

𝐍𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: “If T is a theory, and both P is valid
	and ¬P is valid in T, then this theory is an element of
	contradictory-theories class.”

𝐅𝐨𝐫𝐦𝐚𝐥 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞: (((φ is true) ∧ (φ is false)) ⟹ (φ ∈ contradictory-statement))
	𝐃𝐞𝐫𝐢𝐯𝐚𝐭𝐢𝐨𝐧 𝐟𝐫𝐨𝐦 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦
	(((φ is true) ∧ (φ is false)) ⟹ (φ ∈ contradictory-statement))         │ Follows from 𝐧𝐚𝐭𝐮𝐫𝐚𝐥 𝐥𝐚𝐧𝐠𝐮𝐚𝐠𝐞 𝐚𝐱𝐢𝐨𝐦 𝐍𝐨𝐧𝐞.