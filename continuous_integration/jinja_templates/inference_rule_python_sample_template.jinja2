.. _{{ underscored_name }}_python_sample:

..
   rst file generated by {{ script_name }}.

.. role:: python(code)
    :language: py

{{ dashed_name }} (python sample)
============================================

.. tags:: {{ dashed_name }}, python, sample

.. seealso::
   :ref:`math concept<{{ underscored_name }}_math_inference_rule>` | :ref:`python declaration class<{{ underscored_name }}_declaration_python_class>` | :ref:`python inclusion class<{{ underscored_name }}_inclusion_python_class>`

This page shows how to infer new statements in a theory-derivation by applying the :ref:`{{ dashed_name }}<{{ underscored_name }}_math_inference_rule>` :ref:`inference-rule<inference_rule_math_concept>`.

Usage
----------------------

Call the :python:`infer_statement` method from the inference-rule inclusion class listed in the :python:`i` (unabridged :python:`inference_rules` ) property of the :ref:`theory-derivation<theory_derivation_math_concept>` :

.. code-block:: python

   u = pu.create_universe()
   t = u.t()
   ...
   # some theory derivation code
   ...
   t.i.{{ underscored_name }}.infer_statement(...)

Sample code
----------------------

.. literalinclude :: ../../../../src/sample/sample_{{ underscored_name }}.py
  :language: python

Code output
-----------------------

.. tabs::

   .. tab:: Unicode

      .. literalinclude :: ../../../../data/sample_{{ underscored_name }}_unicode.txt
         :language: text

   .. tab:: Plaintext

      .. literalinclude :: ../../../../data/sample_{{ underscored_name }}_plaintext.txt
         :language: text

   .. tab:: LaTeX

      Will be provided in a future version.

   .. tab:: HTML

      Will be provided in a future version.